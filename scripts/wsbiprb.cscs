    CreateWindow(strTrim(tpath()) +"wsbiprb.xaml");
    //CreateWindow(strTrim(tpath()) +"testTabWin.xaml");
    //Import("C:\wpfcscs\Modules\CSCS.Math\bin\Debug\CSCS.Math");
    Import("C:\cscs_wpf\Modules\CSCS.Math.dll");
    include(strTrim(tpath()) +"wsbiprb_inca.cscs");

    DEFINE skladiste type i size 3;
    DEFINE skladisteNaziv type a size 50;

    DEFINE ARTI_ARTIKL_ARR type a size 30 array 50000;
    DEFINE ARTI_NAZIV_ARR type a size 50 array 50000;
    DEFINE NKSC_PARTCODE_ARR type a size 10 array 50000;
    DEFINE NKSC_PARTNAME_ARR type a size 50 array 50000;

    DEFINE KSDU_SF_CODE_ARR type a size 6 array 5000;
    DEFINE KSDU_SF_OPIS1_ARR type a size 30 array 5000;

    DEFINE PKMK_SKL_CODE_arr type i size 3 array 300;

    DEFINE PKMK_SKL_NAZIV_arr type a size 50 array 300;
    DEFINE cntr1 type i;
    define ovagod_h,lani_h type a size 4;

    DEFINE tot_ovagod type n size 14 dec 0 ;
    DEFINE tot_lani type n size 14 dec 0 ;
    DEFINE tot_ovajmj type n size 14 dec 0 ;
    DEFINE tot_proslimj type n size 14 dec 0 ;
    DEFINE postotak type n size 10 dec 2 ;
    DEFINE postotakMj type n size 10 dec 2 ;
    define postotakTj type n size 10 dec 2 ;
    DEFINE artiklNaziv type a size 30;
    define artikl type a size 15 ;

    DEFINE tot_ovagod_string type a size 20;
    DEFINE tot_lani_string type a size 20;
    DEFINE tot_ovajmj_string type a size 20;
    DEFINE tot_proslimj_string type a size 20;
    DEFINE tot_ovajTj_string type a size 20;
    DEFINE tot_ProsliTj_string type a size 20;

    define mjesec_h type a size 2 ;

    define partner type a size 10 ;
    define partnerNaziv a size 30 ;

    define regija type a size 6 ;
    define regijaNaziv a size 30 ;
    define do_mjeseca type l;

    define danas_h type d size 8;

    DEFINE saPdvomField type l;
    DEFINE bezPdvaField type l;
    DEFINE razlikaUCijeniField type l;
    DEFINE tezina_dn type l;

    DEFINE searchSklSifra type a size 50;
    DEFINE searchSklNaziv type a size 50;
    DEFINE searchArtiklSifra type a size 50;
    DEFINE searchArtiklNaziv type a size 50;
    DEFINE searchPartnerSifra type a size 50;
    DEFINE searchPartnerNaziv type a size 50;
    DEFINE searchRegijaSifra type a size 50;
    DEFINE searchRegijaNaziv type a size 50;

    DEFINE regijeRB type l;
    DEFINE drzaveRB type l;
    DEFINE gradoviRB type l;

    DEFINE nazivFirme type a size 100;

    DEFINE pripremljeno type l;

function Wsbiprb_onDisplay()
//function testTabWin_onDisplay()
    {
    sqlQueryString = "select SY_CC_USER, SY_CC_YEAR, SY_CC_DBASE from " + CommonDBGet() + ".dbo.NKSYCCYR WHERE SY_CC_CODE = '" + Substring(CoGet(), 1, 2) + "'";
    try
        {
        sqlResult = sqlQuery(sqlQueryString);
        }
    catch(exc)
        {
        MessageBox(exc);
        }
//messagebox("pocetak1");
    RectangleA.Width="100";
    SetProperty("RectangleA","Width","100");
    setimage(strTrim(tpath())+"Blue Abstract Gradient Background Jamboard Background.png");
    postotakMj = 0;
    postotak= 0;
    skladiste = 0;
    searchSklSifra = "";
    searchSklNaziv = "";
    imeFirme = sqlResult[1][0].trim(); // KAMEND
    ovagod_h = sqlResult[1][1].trim(); // 2022
    lani_h = string(int(ovagod_h) - 1); // 2
    trenutnaGodinaBaza = sqlResult[1][2].trim(); // ime baze
    sqlQueryString = " SELECT FORMAT([KPSY_FISCAL_YR], 'yyyy-MM-dd') FROM " + trenutnaGodinaBaza + ".[dbo].[KPSYMSTR]";
    try
        {
        sqlResult = sqlQuery(sqlQueryString);
        }
    catch(exc)
        {
        MessageBox(exc);
        }
    kpsy_fiscal_yr = sqlResult[1][0];
    proslaGodina = (int(ovagod_h) - 1);
    bezPdvaField = true;
    sqlQueryString = "select SY_CC_DBASE from " + CommonDBGet() + ".dbo.NKSYCCYR WHERE SY_CC_USER = '" + imeFirme + "' AND SY_CC_YEAR = '" + (int(ovagod_h) - 1) + "'";
    try
        {
        sqlResult = sqlQuery(sqlQueryString);
        }
    catch(exc)
        {
        MessageBox(exc);
        }
    proslaGodinaBaza = sqlResult[1][0].trim();
    sqlNaDan = ovagod_h + "-12-31";
    sqlOdDana = string(int(ovagod_h) - 1) + "-01-01";
    danas_h = Now("dd/MM/yy");
    if now("yyyy") > ovagod_h{
        danas_h= "31/12/"+subString(ovagod_h,2,2);
    }
    mjesec_h = Now("MM");
    mjesec_h = string(int(mjesec_h) - 1);
    mjesec_h= Mjesec_h=< "0" ? "12" : mjesec_h;
    proslimjesec = string(int(mjesec_h) - 1);
    mjesec_h0X = mjesec_h.length == 1 ? "0" + mjesec_h : mjesec_h;
    proslimjesec0X = proslimjesec.length == 1 ? "0" + proslimjesec : proslimjesec;
    do_mjeseca = true;
    sqlQueryString = " SELECT TOP 1 kpsy_comp_name FROM " + trenutnaGodinaBaza + ".[dbo].[KPSYMSTR]";
    try
        {
        sqlResult = sqlQuery(sqlQueryString);
        }
    catch(exc)
        {
        MessageBox(exc);
        }
    nazivFirme = sqlResult[1][0].trim();

    pripremljeno = false;
    }


//MessageBox("sdsd :"+GETPROPERTYSTRINGS("dgStavke"));
function gbExit@clicked()
    {
        quit
    }


//
function gbPripremi@clicked()
    {
    cursor("wait");
    setChartByMonth();
    setChartByDaysOfMonth();
    setHorizontalBars();
    //setWeekComparison();
//    setCustomerAndInvoiceCounts();
    //setCustomerDataGrid();
    //setLast10InvoicesDataGrid();
    //setTop10InvoicesDataGrid();
    //setTop10Products();
    pripremljeno = true;
    //setRegionPieChart();
    cursor("dflt");
    }

    define br_kupaca_og, br_kupaca_lg type i size 5;
    define prodaja_kup_og, prodaja_kup_lg type n size 14;
    define broj_rac_og, broj_rac_lg type r size 6;
    define prod_kup_indx type n size 10 dec 2;
    //    DEFINE arrayProsla type n size 14 array 12;
    //    DEFINE arrayTrenutna type n size 14 array 12;
function setCustomerAndInvoiceCounts()
    {
        br_kupaca_og = 0;
        br_kupaca_lg = 0;
        broj_rac_og = 0;
        broj_rac_lg = 0;
        sql_str = "SELECT count(distinct nkpr_gl_cuscod) as br_kupaca_lg,count(nkpr_gl_cuscod) as broj_rac_lg";
        sql_str = sql_str + " FROM " + proslaGodinaBaza + ".dbo.nkprinv";
        if (regija != "")
        {
            sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod= g.nksc_partcode";
        }
        sql_str = sql_str + " WHERE nkpr_gl_subtot > 0 AND nkpr_gl_oznaka= 'S'";
        if ( mjesec_h != "")
        {
            if(do_mjeseca == true)
            {
                sql_str = sql_str + " AND month(nkpr_gl_datem)<= " + mjesec_h;
                sql_str = sql_str + " AND YEAR(nkpr_gl_datem)= " + lani_h;
            }
            else
            {
                sql_str = sql_str + " AND month(nkpr_gl_datem)= " + mjesec_h;
                sql_str = sql_str + " AND YEAR(nkpr_gl_datem)= " + lani_h;
            }
        }
        if (regija != "")
        {
            sql_str= sql_str + " AND g.nksc_regija= '" + regija + "'";
        }
        sqlResult = SqlQuery(sql_str);
        br_kupaca_lg = sqlResult[1][0];
        broj_rac_lg = sqlResult[1][1];
        sql_str = "SELECT count(distinct nkpr_gl_cuscod) as br_kupaca_og, count(nkpr_gl_cuscod) as broj_rac_og";
        sql_str = sql_str + " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv";
        if(regija != "")
        {
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod= g.nksc_partcode";
        }
        sql_str = sql_str + " WHERE nkpr_gl_subtot> 0 AND nkpr_gl_oznaka= 'S'";
        if(mjesec_h != "")
        {
            if(do_mjeseca == true)
            {
                sql_str= sql_str + " AND month(nkpr_gl_datem)<= " + mjesec_h;
                sql_str= sql_str + " AND YEAR(nkpr_gl_datem)= " + ovagod_h;
            }
            else
            {
                sql_str = sql_str + " AND month(nkpr_gl_datem)= " + mjesec_h;
                sql_str = sql_str + " AND YEAR(nkpr_gl_datem)= " + ovagod_h;
            }
        }
        //sql_str= sql_str* " AND DATEDIFF(day,nkpr_gl_invdte, CURRENT_TIMESTAMP) BETWEEN 0 AND 31"
        if(regija != "")
        {
            sql_str = sql_str + " AND g.nksc_regija= '" + regija + "'";
        }
        sqlResult = SqlQuery(sql_str);
        br_kupaca_og = sqlResult[1][0];
        broj_rac_og = sqlResult[1][1];
        if(br_kupaca_og > br_kupaca_lg)
        {
            if(br_kupaca_lg != 0)
            {
                A = br_kupaca_og/br_kupaca_lg;
                HorizontalBar("HorizontalBarBrKupacaOG", "BarWidth", 90);
                HorizontalBar("HorizontalBarBrKupacaLG", "BarWidth", 90/A);
            }
            else
            {
                HorizontalBar("HorizontalBarBrKupacaLG", "BarWidth", 0);
                if(br_kupaca_og != 0)
                {
                    HorizontalBar("HorizontalBarBrKupacaOG", "BarWidth", 90);
                }
                else
                {
                    HorizontalBar("HorizontalBarBrKupacaOG", "BarWidth", 0);
                }
            }
        }
        else
        {
            if(br_kupaca_og != 0)
            {
                 A = br_kupaca_lg/br_kupaca_og;
                 HorizontalBar("HorizontalBarBrKupacaLG", "BarWidth", 90);
                 HorizontalBar("HorizontalBarBrKupacaOG", "BarWidth", 90/A);
            }
            else
            {
                 HorizontalBar("HorizontalBarBrKupacaOG", "BarWidth", 0);
                 if(br_kupaca_lg != 0)
                 {
                     HorizontalBar("HorizontalBarBrKupacaLG", "BarWidth", 90);
                 }
                 else
                 {
                     HorizontalBar("HorizontalBarBrKupacaLG", "BarWidth", 0);
                 }
            }
        }
        DEFINE br_kupaca_og_string, br_kupaca_lg_string type a size 50;
        bojeArray = {250, 100, 250};
        Format("br_kupaca_og", "nofd", recv: "br_kupaca_og_string");
        HorizontalBar("HorizontalBarBrKupacaOG", "Text", br_kupaca_og_string);
        HorizontalBar("HorizontalBarBrKupacaOG", "Color", bojeArray);
        Format("br_kupaca_lg", "nofd", recv: "br_kupaca_lg_string");
        HorizontalBar("HorizontalBarBrKupacaLG", "Text", br_kupaca_lg_string);
        HorizontalBar("HorizontalBarBrKupacaLG", "Color", bojeArray);
        //---------------
        if(broj_rac_og > broj_rac_lg)
        {
            if(broj_rac_og != 0)
            {
                A = broj_rac_og/broj_rac_lg;
                HorizontalBar("HorizontalBarBrRacunaOG", "BarWidth", 90);
                HorizontalBar("HorizontalBarBrRacunaLG", "BarWidth", 90/A);
            }
            else
            {
                HorizontalBar("HorizontalBarBrRacunaLG", "BarWidth", 0);
                if(broj_rac_og != 0)
                {
                     HorizontalBar("HorizontalBarBrRacunaOG", "BarWidth", 90);
                }
                else
                {
                     HorizontalBar("HorizontalBarBrRacunaOG", "BarWidth", 0);
                }
            }
        }
        else
        {
            if(broj_rac_og != 0)
            {
                A = broj_rac_lg/broj_rac_og;
                HorizontalBar("HorizontalBarBrRacunaLG", "BarWidth", 90);
                HorizontalBar("HorizontalBarBrRacunaOG", "BarWidth", 90/A);
            }
            else
            {
                HorizontalBar("HorizontalBarBrRacunaOG", "BarWidth", 0);
                if(broj_rac_lg != 0)
                {
                     HorizontalBar("HorizontalBarBrRacunaLG", "BarWidth", 90);
                }
                else
                {
                     HorizontalBar("HorizontalBarBrRacunaLG", "BarWidth", 0);
                }
            }
        }
        DEFINE broj_rac_og_string, broj_rac_lg_string type a size 50;
        bojeArray = {220, 150, 250};
        Format("broj_rac_og", "nofd", recv: "broj_rac_og_string");
        HorizontalBar("HorizontalBarBrRacunaOG", "Text", broj_rac_og_string);
        HorizontalBar("HorizontalBarBrRacunaOG", "Color", bojeArray);
        Format("broj_rac_lg", "nofd", recv: "broj_rac_lg_string");
        HorizontalBar("HorizontalBarBrRacunaLG", "Text", broj_rac_lg_string);
        HorizontalBar("HorizontalBarBrRacunaLG", "Color", bojeArray);
        //---------------
        if(br_kupaca_og != 0)
        {
            prodaja_kup_og = tot_ovagod/br_kupaca_og;
        }
        else
        {
            prodaja_kup_og = 0;
        }
        //messagebox(br_kupaca_lg);
        if(br_kupaca_lg != 0)
        {
            prodaja_kup_lg = tot_lani / br_kupaca_lg;
            if (prodaja_kup_lg != 0)
            {
                 prod_kup_indx = Math.Round((( 100 * (prodaja_kup_og - prodaja_kup_lg) / prodaja_kup_lg )), 2);
            }
            else
            {
                 prod_kup_indx= 0;
            }
            //MessageBox(prod_kup_indx);
            // MessageBox(prodaja_kup_og);
            // MessageBox(prodaja_kup_lg);
        }
        else
        {
            prodaja_kup_lg = 0;
            prod_kup_indx = 0;
            //MessageBox("2");
        }

        if(prodaja_kup_og > prodaja_kup_lg)
        {
            if(prodaja_kup_og != 0)
            {
                A = prodaja_kup_og/prodaja_kup_lg;
                HorizontalBar("HorizontalBarProdajaKupOG", "BarWidth", 90);
                HorizontalBar("HorizontalBarProdajaKupLG", "BarWidth", 90/A);
            }
            else
            {
                HorizontalBar("HorizontalBarProdajaKupLG", "BarWidth", 0);
                if(prodaja_kup_og != 0)
                {
                     HorizontalBar("HorizontalBarProdajaKupOG", "BarWidth", 90);
                }
                else
                {
                    HorizontalBar("HorizontalBarProdajaKupOG", "BarWidth", 0);
                }
            }
        }
        else
        {
            if(broj_rac_og != 0)
            {
                A = prodaja_kup_lg/prodaja_kup_og;
                HorizontalBar("HorizontalBarProdajaKupLG", "BarWidth", 90);
                HorizontalBar("HorizontalBarProdajaKupOG", "BarWidth", 90/A);
            }
            else
            {
                HorizontalBar("HorizontalBarProdajaKupOG", "BarWidth", 0);
                if(prodaja_kup_lg != 0)
                {
                    HorizontalBar("HorizontalBarProdajaKupLG", "BarWidth", 90);
                }
                else
                {
                    HorizontalBar("HorizontalBarProdajaKupLG", "BarWidth", 0);
                }
            }
        }
        DEFINE prodaja_kup_og_string, prodaja_kup_lg_string type a size 50;
        bojeArray = {150, 190, 250};
        Format("prodaja_kup_og", "nofd", recv: "prodaja_kup_og_string");
        HorizontalBar("HorizontalBarProdajaKupOG", "Text", prodaja_kup_og_string);
        HorizontalBar("HorizontalBarProdajaKupOG", "Color", bojeArray);
        Format("prodaja_kup_lg", "nofd", recv: "prodaja_kup_lg_string");
        HorizontalBar("HorizontalBarProdajaKupLG", "Text", prodaja_kup_lg_string);
        HorizontalBar("HorizontalBarProdajaKupLG", "Color", bojeArray);
    }
    //
function setChartByMonth()
    {
        SQL_str = "SET query_governor_cost_limit 0;";
        if ( proslaGodinaBaza != "" )
        {
            if ( bezPdvaField == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN b.nkpr_gl_dviza = 'D' THEN b.nkpr_gl_tecaj * d.nkpr_ln_amt ELSE d.nkpr_ln_amt END) , 0) as decimal(10,0)) + cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt ELSE e.nkpr_ln_amt END) , 0) as decimal(10,0)) ";
            }
            elif ( razlikaUCijeniField == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN b.nkpr_gl_dviza = 'D' THEN b.nkpr_gl_tecaj * d.nkpr_ln_amt - d.nkpr_ln_cenan * d.nkpr_ln_qtyz ELSE d.nkpr_ln_amt - d.nkpr_ln_cenan * d.nkpr_ln_qtyz END) , 0)as decimal (10)) + cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz ELSE e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz END) , 0)as decimal (10))";
            }
            elif ( tezina_dn == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(d.nkpr_ln_tezinan) , 0)as decimal (10)) + cast(ISNULL(SUM(e.nkpr_ln_tezinan) , 0) as decimal (10))";
            }
            else
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN b.nkpr_gl_dviza = 'D' THEN b.nkpr_gl_tecaj * d.nkpr_ln_pext ELSE d.nkpr_ln_pext END) , 0) as decimal (10)) + cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_pext ELSE e.nkpr_ln_pext END) , 0)as decimal (10))";
            }
            sql_str = sql_str + " FROM " + CommonDBGet() + ".dbo.Kalendar a";
            sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkprinv b ON a.[Wk_Date] = DATEADD(month , DATEDIFF(month , 0 , b.nkpr_gl_datem) , 0) AND year(b.nkpr_gl_datem)='" + (int(ovagod_h) - 1) + "' ";
            if ( partner != "" )
            {
                sql_str = sql_str + " AND b.nkpr_gl_cuscod = '" + partner + "'";
            }
            if ( razlikaUCijeniField == true )
            {
                sql_str = sql_str + " AND b.nkpr_gl_invcd<> ''";
            }
            if ( regija != "" )
            {
                sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart g ON b.nkpr_gl_cuscod = g.nksc_partcode";
                // AND g.nksc_regija =  '" + regija * "'"
            }
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinv c ON a.[Wk_Date] = DATEADD(month , DATEDIFF(month , 0 , c.nkpr_gl_datem) , 0) AND year(c.nkpr_gl_datem) = " + ovagod_h;
            if ( partner != "" )
            {
                sql_str = sql_str + " AND C.nkpr_gl_cuscod = '" + partner + "'";
            }
            if ( razlikaUCijeniField == true )
            {
                sql_str = sql_str + " AND c.nkpr_gl_invcd<> ''";
            }
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl e ON c.nkpr_gl_num = e.nkpr_ln_invnm";
            //if skladiste<> 0
            //    sql_str =  sql_str +  " AND e.nkpr_ln_loc =  " + skladiste
            //endif
            sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkprinvl d ON b.nkpr_gl_num = d.nkpr_ln_invnm";
            if ( regija != "" )
            {
                sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart f ON c.nkpr_gl_cuscod = f.nksc_partcode";
                // AND f.nksc_regija =  '" + regija + "'"
            }
            sql_str = sql_str + " WHERE [wk_Date] BETWEEN '" + sqlOdDana + "' AND '" + sqlNaDan + "' AND [wk_Day] = 1";
            if ( regija != "" )
            {
                sql_str = sql_str + " AND (g.nksc_regija = '" + regija + "' OR f.nksc_regija = '" + regija + "')";
            }
            if ( artikl != "" )
            {
                sql_str = sql_str + " AND (e.nkpr_ln_pcode = '" + artikl + "' OR d.nkpr_ln_pcode = '" + artikl + "')";
            }
            if ( skladiste != 0 )
            {
                sql_str = sql_str + " AND (d.nkpr_ln_loc = " + skladiste + " OR e.nkpr_ln_loc = " + skladiste + ")";
            }
        }
        else
        {
            if ( neto_dn == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt ELSE e.nkpr_ln_amt END) , 0)as decimal (10))";
            }
            elif ( ruc_dn == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz ELSE e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz END) , 0)as decimal (10))";
            }
            elif ( tezina_dn == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(e.nkpr_ln_tezinan) , 0)as decimal (10))";
            }
            else
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_pext ELSE e.nkpr_ln_pext END) , 0)as decimal (10))";
            }
            sql_str = sql_str + " FROM " + CommonDBGet() + ".dbo.Kalendar a";
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinv c ON a.[Wk_Date] = DATEADD(month , DATEDIFF(month , 0 , c.nkpr_gl_datem) , 0) AND year(c.nkpr_gl_datem) = " + ovagod_h;
            if ( partner != "" )
            {
                sql_str = sql_str + " AND C.nkpr_gl_cuscod = '" + partner + "'";
            }
            if ( ruc_dn == true )
            {
                sql_str = sql_str + " AND c.nkpr_gl_invcd<> ''";
            }
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl e ON c.nkpr_gl_num = e.nkpr_ln_invnm";
            //if skladiste<> 0
                //    sql_str =  sql_str +  " AND e.nkpr_ln_loc =  " + skladiste
            //endif
            if ( regija != "" )
            {
                sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart f ON c.nkpr_gl_cuscod = f.nksc_partcode";
                // AND f.nksc_regija =  '" + regija * "'"
            }
            sql_str = sql_str + " WHERE [wk_Date] BETWEEN '" + sqlOdDana + "' AND '" + sqlNaDan + "' AND [wk_Day] = 1";
            if ( regija != "" )
            {
                 sql_str = sql_str + " AND (f.nksc_regija = '" + regija + "'";
                 // OR f.nksc_regija =  '" + regija * "')"
            }
            if ( artikl != "" )
            {
                sql_str = sql_str + " AND e.nkpr_ln_pcode = '" + artikl + "'";
            }
            if ( skladiste != 0 )
            {
                 sql_str = sql_str + " AND e.nkpr_ln_loc = " + skladiste;
            }
        }

        sql_str = sql_str + " GROUP BY [Wk_YYYYMM]";
        sql_str = sql_str + " ORDER BY wk_yyyymm;";
        try
        {
             //SaveFile(sql_str);
             queryResult = sqlquery(SQL_str);
        }
        catch(exc)
        {
             MessageBox(exc);
        }
        tot_proslimj = 0;
        tot_ovajmj = 0;
        tot_ovagod = 0;
        tot_lani = 0;
        //arrayProsla = {};
        //arrayTrenutna = {};
        sales_ar = {};
        DEFINE CNTR type i size 3;
        DEFINE cntry type i size 3;
        cntry= 0
        DEFINE arrayProsla type n size 14 array 12;
        DEFINE arrayTrenutna type n size 14 array 12;
        //MessageBox("Koliko: "+Size(queryResult));
        for(i = 1; i < 13; i++)
        {
            if(i >= Size(queryResult))
            {
/*                 arrayProsla.add(0);
                sales_ar.add(0);
 */ 
                arrayProsla[i-1]= 0; 
                sales_ar[i-1]= 0; 
                continue;
            }
            else
            {
                //arrayProsla.add(math.round(queryResult[i][1]/1000,0));
                //sales_ar.add(queryResult[i][1]);
                arrayProsla[i-1]= math.round(queryResult[i][1]/1000,0); 
                sales_ar[i-1]=queryResult[i][1];
                if ( do_mjeseca == true )
                {
                    if(i <= int(mjesec_h))
                    {
                        //MessageBox("as " + i);
                        //MessageBox("aaaa " +queryResult[i][1]);
                        tot_lani = tot_lani + queryResult[i][1] ;
                    }
                }
                else
                {
                    if(i == int(mjesec_h))
                    {
                        //MessageBox("BBBB " +queryResult[i][1]);
                        tot_lani =  queryResult[i][1] ;
                    }
                }
            }
        }
        //
        for(i = 13; i < 25; i++)
        {
            cntry++;
            if(i >= Size(queryResult))
            {
                //arrayTrenutna.add(0);
                //sales_ar.add(0);
                arrayTrenutna[i-13]= 0; 
                sales_ar[i-1]= 0; 
                continue;
            }
            else
            {
                //arrayTrenutna.add(math.round(queryResult[i][1]/1000,0));
                //sales_ar.add(queryResult[i][1]);
                arrayTrenutna[i-13]= math.round(queryResult[i][1]/1000,0); 
                sales_ar[i-1]=queryResult[i][1];
                //tot_ovagod = tot_ovagod + queryResult[i][1] ;
                if ( do_mjeseca == true )
                {
                    if(cntry<= int(mjesec_h))
                    {
                        tot_ovagod = tot_ovagod + queryResult[i][1];
                        //MessageBox(tot_ovagod);
                    }
                }
                else
                {
                    if(cntry == int(mjesec_h))
                    {
                        tot_ovagod =  queryResult[i][1] ;
                    }
                }
                mjesec_h0X = mjesec_h.length == 1 ? "0" + mjesec_h : mjesec_h;
                proslimjesec = string(int(mjesec_h) - 1); // 1
                proslimjesec0X = proslimjesec.length == 1 ? "0" + proslimjesec : proslimjesec;
                if (ovagod_h + mjesec_h0X == queryResult[i][0])
                {
                    //Ovaj mjesec
                    tot_ovajmj= tot_ovajmj + queryResult[i][1];
                    //MessageBox(tot_ovajmj);
                }
                elif (ovagod_h + proslimjesec0X == queryResult[i][0])
                {
                    tot_proslimj= tot_proslimj + queryResult[i][1];
                }
            }
        }
    }
    //
    define argument1 type a size 10;
    define argument2 type r size 10;
    define argument3 type i size 5;
    define argument4 type n size 10 dec 2;
    define sqlOdDana,sqlNaDan type a size 10;
    function gbProdaja1@clicked()
    {
        //MessageBox("Tu sam");
        modalWindow(strTrim(tpath()) +"wsbiprba.xaml"); //"wsbiprba.xaml");
        //createWindow(strTrim(tpath()) +"wsbiprba.xaml"); //"wsbiprba.xaml");
        /*
        argument1= 'asdfghjh';
        argument2= 1234567890;
        argument3= 98765;
        argument4= 567.89;
        */
       //define path type a size 120;
       //path= strTrim(tpath())  + "WSBIPRBA.CSCS";
       // CHAIN path WITH skladiste,SqlOdDana,SQLnadan,ovagod_h,lani_h,trenutnaGodinaBaza,proslaGodinaBaza,bezPdvaField,proslaGodina,danas_h,mjesec_h,do_mjeseca;
        //return
    }

    function gbProdaja2@clicked()
    {
        //MessageBox("Tu sam: "+trenutnaGodinaBaza+" "+proslaGodinaBaza);
        modalWindow(strTrim(tpath()) +"wsbiprbb.xaml"); //"wsbiprba.xaml");
    }

function wsbiprba_onStart()
    {
     //MessageBox("Tu sam on start xaml");

    Chart("ChartPoMjesecima", "init");
    Chart("ChartPoMjesecima", "seriesType", "Columnseries");
    //Chart("ChartPoMjesecima", "title", "Naslov grafa", 20);
    Chart("ChartPoMjesecima", "labels", "y", 13);
    Chart("ChartPoMjesecima", "labels", "x", 13, {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"});
    Chart("ChartPoMjesecima", "xlabelsRotation", 0);
    Chart("ChartPoMjesecima", "values", arrayProsla, STRING(proslaGodina)); // !
    Chart("ChartPoMjesecima", "values", arrayTrenutna, STRING(ovagod_h)); //!
    Chart("ChartPoMjesecima", "SeparatorStep", 1);
    Chart("ChartPoMjesecima", "Margins", {50, 20, 0, 30});
    Chart("ChartPoMjesecima", "TooltipDecimalPlaces", 0);
    Chart("ChartPoMjesecima", "Color.Series", { "Blue", "Green"}); 

    //
    Chart("ChartPoDanima", "init");
    Chart("ChartPoDanima", "seriesType", "lineSeries");
    Chart("ChartPoDanima", "title", "Po Danima");
    //Chart("ChartPoDanima", "labels","y", 12);
    Chart("ChartPoDanima", "labels","x", 15,  {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "1", "2", "3", "4", "5", "6", "7", "8", "9", "20", "1", "2", "3", "4", "5", "6", "7", "8", "9", "30", "1"});
    //Chart("ChartPoDanima", "labels", arrayDani);
    Chart("ChartPoDanima", "xlabelsRotation", 0);
    Chart("ChartPoDanima", "SeparatorStep", 1);
    Chart("ChartPoDanima", "values", arrayVrijednosti, "01");
    Chart("ChartPoDanima", "Margins", {60, 20, 0, 30});
    cntr2= 0;
    setLast10InvoicesDataGrid();

    Format("T10IZNOSZ_AR", "nofd");
    Format("T10IZNOSMJ_AR", "nofd");
    DisplayArray("dgRacuniLast", "close");
    DisplayArraySetup("dgRacuniLast", counterFld: cntr2, activeElements: Size(sqlResult2) - 1, maxElements: 10);

	DisplayArray("dgRacuniMjesec", "close");
	//DisplayArraySetup("dgRacuniMjesec", counterFld: "cntr3", activeElements: Size(sqlResult) - 1, maxElements: 10);
    setTop10InvoicesDataGrid();
	DEFINE cntr3,cntr2 type i;
    cntr3= 0;

	//MessageBox("AAAA: "+size(sqlResult));
	//DisplayArray("dgRacuniMjesec", "close");
	//MessageBox("BBBB: "+size(sqlResult));
	DisplayArraySetup("dgRacuniMjesec", counterFld: cntr3, activeElements: Size(sqlResult) - 1, maxElements: 10);
	//MessageBox("BBBB: "+size(sqlResult));
	//DisplayArraySetup("dgRacuniMjesec", counterFld: "cntr3", activeElements: Size(sqlResult) - 1, maxElements: 10);
	//DisplayArray("dgRacuniMjesec", "redisplayFromEnd");
	//MessageBox("kRAJ T10RacuniMj");
    }

function buty@clicked()
{
    //Chart("ChartPoMjesecima", "init");

     refresh();
     	DisplayArray("dgRacuniMjesec", "close");

     Chart("ChartPoMjesecima", "Color.Series", { "Blue", "Green"}); 
	DisplayArraySetup("dgRacuniMjesec", counterFld: cntr3, activeElements: Size(sqlResult) - 1, maxElements: 10);
}    

function wsbiprbb_onStart()
    {
     //MessageBox("Tu sam on start wsbiprbb.xaml");
    setCustomerDataGrid();
    setTop10Products();
    setRegionPieChart();
    //
	PieChart("PieChart1", "init");
    PieChart("PieChart1", "seriesType", "pie");
    PieChart("PieChart1", "title", "Pie Chart Title", 20);    
	for(i = 1; i < queryResult.length; i++)
	{
		PieChart("PieChart1", "values", int(queryResult[i][1]) , string(queryResult[i][0].trim()));
	}
	PieChart("PieChart1", "Margins", {0,0,0,0});
    }

function refresh()
    {
         Chart("ChartPoMjesecima", "seriesType", "Columnseries");
         Chart("ChartPoMjesecima", "init");
         Chart("ChartPoMjesecima", "title", "Naslov grafa", 20);
         Chart("ChartPoMjesecima", "labels", "y", 11);
         Chart("ChartPoMjesecima", "labels", "x", 11, {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"});
         Chart("ChartPoMjesecima", "xlabelsRotation", 0);
         Chart("ChartPoMjesecima", "values", arrayProsla, STRING(proslaGodina)); // !
         Chart("ChartPoMjesecima", "values", arrayTrenutna, STRING(ovagod_h)); //!
         Chart("ChartPoMjesecima", "SeparatorStep", 1);
         Chart("ChartPoMjesecima", "Margins", {50, 10, 10, 10});
         Chart("ChartPoMjesecima", "TooltipDecimalPlaces", 0);
    }

    define dan2 type i;
function setChartByDaysOfMonth()
    {
        if ( bezPdvaField == true )
        {
             sql_str = "SELECT [wk_day] as dan2 , SalesDay = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt ELSE e.nkpr_ln_amt END) , 0)";
        }
        elif ( razlikaUCijeniField == true )
        {
             sql_str = "SELECT [wk_day] as dan2 , SalesDay = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * (e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz) ELSE e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz END) , 0)";
        }
        elif ( tezina_dn == true )
        {
             sql_str = " SELECT [wk_day] as dan2, SalesDay=ISNULL(SUM(e.nkpr_ln_tezinan), 0) ";
        }
        else
        {
             sql_str = "SELECT [wk_day] as dan2 , SalesDay = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_pext ELSE e.nkpr_ln_pext END) , 0)";
        }
        sql_str = sql_str + " FROM " + CommonDBGet()+ ".dbo.Kalendar a";
        //sql_str =  sql_str +  " LEFT JOIN " + ovagod_h * ".dbo.nkprinv b ON a.[Wk_Date]  =  DATEADD(month ,  DATEDIFF(month ,  0 ,  b.nkpr_gl_invdte) ,  0)"
        sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinv c ON a.[Wk_Date] = c.nkpr_gl_datem ";
        sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl e ON c.nkpr_gl_num = e.nkpr_ln_invnm";
        if ( regija != "" )
        {
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON c.nkpr_gl_cuscod = g.nksc_partcode";
        }
        sql_str = sql_str + " WHERE 1 = 1";
        if ( do_mjeseca == true )
        {
             sql_str = sql_str + " AND [wk_Month]< = '" + mjesec_h + "' AND wk_Year = '" + ovagod_h + "'";
        }
        else
        {
             sql_str = sql_str + " AND [wk_Month] = '" + mjesec_h + "' AND wk_Year = '" + ovagod_h + "'";
        }
        if ( partner != "" )
        {
             sql_str = sql_str + " AND c.nkpr_gl_cuscod = '" + partner + "'";
        }
        if ( regija != "" )
        {
             sql_str = sql_str + " AND g.nksc_regija = '" + regija + "'";
        }
        if ( artikl != "" )
        {
             sql_str = sql_str + " AND e.nkpr_ln_pcode = '" + artikl + "'";
        }
        if ( razlikaUCijeniField == true )
        {
             sql_str = sql_str + " AND c.nkpr_gl_invcd<> ''" ;
             //da bi dobili ruc ,  treba ra?un biti a?uriran
        }
        if ( skladiste != 0 )
        {
             sql_str = sql_str + " AND e.nkpr_ln_loc = " + skladiste;
        }
        sql_str = sql_str + " GROUP BY Wk_day";
        sql_str = sql_str + " ORDER BY [Wk_day]";
        try
        {
             queryResult = sqlquery(sql_str);
        }catch(exc)
        {
              MessageBox(exc);
        }
        arrayDani = {};
        arrayVrijednosti = {};
        for(i = 1; i < queryResult.length; i++)
        {
            arrayDani.add(string(queryResult[i][0]));
        }
        for(i = 1; i < queryResult.length; i++)
        {
            arrayVrijednosti.add(queryResult[i][1]);
        }
        /*
        Chart("ChartPoDanima", "init");
        Chart("ChartPoDanima", "seriesType", "lineSeries");
        Chart("ChartPoDanima", "title", "Po Danima");
        //Chart("ChartPoDanima", "labels","y", 12);
        Chart("ChartPoDanima", "labels","x", 15,  {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"});
        //Chart("ChartPoDanima", "labels", arrayDani);
        Chart("ChartPoDanima", "xlabelsRotation", 0);
        Chart("ChartPoDanima", "SeparatorStep", 1);
        Chart("ChartPoDanima", "values", arrayVrijednosti, "01");
        Chart("ChartPoDanima", "Margins", {60, 20, 0, 30});
        */
    }

//    define iznos_a type n size 14;

function setHorizontalBars()
    {
         bojeArray = {196, 224, 138};
         bojeArray2 = {200, 170, 80};
         //MessageBox("AAAA lani: " + tot_lani + ", ovaGod: " + tot_ovagod);
         if (tot_ovagod>tot_lani)
         {
              if(tot_lani != 0)
              {
                   A = tot_ovagod/tot_lani;
                   HorizontalBar("HorizontalBarOG", "BarWidth", 90);
                   HorizontalBar("HorizontalBarLG", "BarWidth", 90/A);
              }
              else
              {
                   HorizontalBar("HorizontalBarLG", "BarWidth", 0);
                   if(tot_ovagod != 0)
                   {
                        HorizontalBar("HorizontalBarOG", "BarWidth", 90);
                   }
                   else
                   {
                        HorizontalBar("HorizontalBarOG", "BarWidth", 0);
                   }
              }
         }
         else
         {
              if(tot_ovagod != 0)
              {
                   A = tot_lani/tot_ovagod;
                   HorizontalBar("HorizontalBarLG", "BarWidth", 90);
                   HorizontalBar("HorizontalBarOG", "BarWidth", 90/A);
                   HorizontalBar("HorizontalBarOG1", "BarWidth", 90/A);
              }
              else
              {
                   HorizontalBar("HorizontalBarOG", "BarWidth", 0);
                   if(tot_lani != 0)
                   {
                        HorizontalBar("HorizontalBarLG", "BarWidth", 90);
                   }
                   else
                   {
                        HorizontalBar("HorizontalBarLG", "BarWidth", 0);
                   }
              }
         }
         Format("tot_ovagod", "nofd", recv: "tot_ovagod_string");
         HorizontalBar("HorizontalBarOG", "Text", tot_ovagod_string);
         HorizontalBar("HorizontalBarOG", "Color", bojeArray);
         Format("tot_lani", "nofd", recv: "tot_lani_string");
         HorizontalBar("HorizontalBarLG", "Text", tot_lani_string);
         HorizontalBar("HorizontalBarLG", "Color", bojeArray);
         bojeArrayMJ = {76, 168, 168};
         bojeArrayMJ2 = {230, 60, 80};
         if (tot_ovajmj > tot_proslimj)
         {
             if(tot_proslimj != 0)
             {
                 iznos_a = 1.00*tot_ovajmj/tot_proslimj;
                 HorizontalBar("HorizontalBarOM", "BarWidth", 90);
                 HorizontalBar("HorizontalBarLM", "BarWidth", 90.00/iznos_a);
      MessageBox("AAAA: "+iznos_a + "  "+tot_ovajmj+"  "+tot_proslimj);           
             }
             else
             {
                 HorizontalBar("HorizontalBarLM", "BarWidth", 0);
                 if(tot_ovajmj != 0)
                 {
                      HorizontalBar("HorizontalBarOM", "BarWidth", 90);
                 }
                 else
                 {
                      HorizontalBar("HorizontalBarOM", "BarWidth", 0);
                 }
             }
         }
         else
         {
             if(tot_ovajmj != 0)
             {
                  A = tot_proslimj/tot_ovajmj;
                  HorizontalBar("HorizontalBarLM", "BarWidth", 90);
                  HorizontalBar("HorizontalBarOM", "BarWidth", 90.00/iznos_a);
             }
             else
             {
                  HorizontalBar("HorizontalBarOM", "BarWidth", 0);
                  if(tot_proslimj != 0)
                  {
                       HorizontalBar("HorizontalBarLM", "BarWidth", 90);
                  }
                  else
                  {
                       HorizontalBar("HorizontalBarLM", "BarWidth", 0);
                  }
             }
         }
         Format("tot_ovajmj", "nofd", recv: "tot_ovajmj_string");
         HorizontalBar("HorizontalBarOM", "Text", tot_ovajmj_string);
         HorizontalBar("HorizontalBarOM", "Color", bojeArrayMJ);
         Format("tot_proslimj", "nofd", recv: "tot_proslimj_string");
         HorizontalBar("HorizontalBarLM", "Text", tot_proslimj_string);
         HorizontalBar("HorizontalBarLM", "Color", bojeArrayMJ);
         if(tot_lani == 0)
         {
             postotak = 0;
         }
         else
         {
             postotak = Math.Round((100 * (tot_ovagod-tot_lani) /tot_lani), 2);
         }
         if(tot_prosliMj == 0)
         {
             postotakMj = 0;
         }
         else
         {
             postotakMj = Math.Round((100 *(tot_ovajmj-tot_prosliMj)/tot_prosliMj), 2);
         }
    }

function setLast10InvoicesDataGrid(){
	define t10Iznosz_ar type n size 14 dec 2 array 10;
	define t10Namez_ar type a size 30 array 10;
	define t10Cntrz_ar type i size 2 array 10;
	define t10Datumz_ar type d size 8 array 10;
	define t10Timez_ar type t size 8 array 10;
	define t10Racunz_ar type r size 8 array 10;
 /*   
t10Iznosz_ar ={};
	t10Namez_ar ={};
	t10Cntrz_ar ={};
	t10Datumz_ar={};
	t10Timez_ar ={};
	t10Racunz_ar ={};
 */
 	define T10Cntrz type i;
	define t10DatRac type l;
	if ( t10datrac == true )
	{
		//za sada ne koristimo ovo!
		sql_str =  "SELECT TOP 10 nkpr_gl_num , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_invdte , 3) AS datecr , convert(char(8) , nkpr_gl_timecr , 20) as nkpr_gl_timecr ,  ";
		sql_str =  sql_str +  " CAST( CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total as decimal (10,2))  AS nkpr_gl_total " ;
	}
	else 
	{
		sql_str =  "SELECT TOP 10 nkpr_gl_num , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_datecr , 3) AS datecr , convert(char(8) , nkpr_gl_timecr , 20) as nkpr_gl_timecr ,  ";
		sql_str =  sql_str +  " CAST( CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2))  AS nkpr_gl_total " ;
	}
	sql_str =  sql_str +  " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv" ;
	sql_str =  sql_str +  " WHERE YEAR(nkpr_gl_datem) =  " + ovagod_h  ;
	if ( do_mjeseca == true )
	{
		sql_str =  sql_str +  " AND month(nkpr_gl_datem)< =  " + mjesec_h  ;
	}
	else 
	{
		sql_str =  sql_str +  " AND month(nkpr_gl_datem) =  " + mjesec_h;
		}
	if ( t10datrac == true )
		{
		sql_str =  sql_str +  " ORDER BY nkpr_gl_invdte DESC , nkpr_gl_timecr DESC" ;
	}
	else 
	{
		sql_str =  sql_str +  " ORDER BY nkpr_gl_datecr DESC , nkpr_gl_timecr DESC" ;
	}
 
	try	{
		sqlResult2 = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

    for ( i = 1; i < Size(sqlResult2); i++ )
    {      
        nkpr_gl_num = sqlResult2[i][0];  
        nkpr_gl_cusnme = sqlResult2[i][1];
        datecr = sqlResult2[i][2];
        nkpr_gl_timecr = sqlResult2[i][3];
        nkpr_gl_total= sqlResult2[i][4];

        t10Namez_ar[i - 1] =  nkpr_gl_cusnme;
        t10Iznosz_ar[i - 1] =  nkpr_gl_total;
        t10Cntrz_ar[i - 1] =  i;
        t10Datumz_ar[i - 1] =  datecr;
        t10Racunz_ar[i - 1] =  nkpr_gl_num; 
        t10Timez_ar[i - 1] =  nkpr_gl_timecr;
    
/* 		MessageBox(sqlResult2[i][1]);
        t10Namez_ar[i - 1] =  sqlResult2[i][1];
        t10Iznosz_ar[i - 1] = sqlResult2[i][4];
        t10Datumz_ar[i - 1] = sqlResult2[i][2];
        t10Racunz_ar[i - 1] =  sqlResult2[i][0];  
        t10Timez_ar[i - 1] = sqlResult2[i][3];
        t10Cntrz_ar[i - 1] =  i;
 */    }
    DEFINE cntr2 type i;
/*
    Format("T10IZNOSZ_AR", "nofd");
    Format("T10IZNOSMJ_AR", "nofd");
    DisplayArray("dgRacuniLast", "close");
    DisplayArraySetup("dgRacuniLast", counterFld: "cntr2", activeElements: Size(sqlResult) - 1, maxElements: 10);
    return;
    */
}

function setTop10InvoicesDataGrid(){
    define t10IznosMj_ar type n size 14 dec 2 array 10;
	define t10NameMj_ar type a size 30 array 10;
	define t10CntrMj_ar type i size 2 array 10;
	define t10DatumMj_ar type d size 8 array 10;
	define t10RacunMj_ar type r size 8 array 10;

    define T10CntrMj type i;
/*     t10IznosMj_ar={};
	t10NameMj_ar={};
	t10CntrMj_ar ={};
	//t10DatumMj_ar={};
	t10RacunMj_ar ={};
 */	
    sql_str =  "SELECT TOP 10 nkpr_gl_num , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_invdte , 3) AS datecr , " ;
	sql_str =  sql_str +  " CAST(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2))AS nkpr_gl_total ";
	sql_str =  sql_str +  " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv" ;
	if ( regija != "" )
	{
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod =  g.nksc_partcode" ;
	}
	sql_str =  sql_str +  " WHERE 1 = 1" ;
	if ( mjesec_h != "" )
		{
		if ( do_mjeseca == true )
		{
			sql_str =  sql_str +  " AND month(nkpr_gl_datem)< =  " + mjesec_h ;
			sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
		}
		else 
		{
			sql_str =  sql_str +  " AND month(nkpr_gl_datem) =  " + mjesec_h ;
			sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
	}
	if ( regija != "" )
	{
		sql_str =  sql_str +  " AND g.nksc_regija =  '" + regija + "'";
	}
	sql_str =  sql_str +  " ORDER BY CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END DESC";
	
	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	for ( i = 1; i < Size(sqlResult); i++ )
	{      
		nkpr_gl_num = sqlResult[i][0];  
		nkpr_gl_cusnme = sqlResult[i][1];
		nkpr_gl_invdte = sqlResult[i][2];
		nkpr_gl_total= sqlResult[i][3];

		t10NameMj_ar[i - 1] =  nkpr_gl_cusnme;
		t10IznosMj_ar[i - 1] =  nkpr_gl_total;
		t10CntrMj_ar[i - 1] =  i;
		t10DatumMj_ar[i - 1] =  nkpr_gl_invdte;
		t10RacunMj_ar[i - 1] =  nkpr_gl_num;
	}        
    /*
	DEFINE cntr3 type i;
	DisplayArray("dgRacuniMjesec", "close");
	DisplayArraySetup("dgRacuniMjesec", counterFld: "cntr3", activeElements: Size(sqlResult) - 1, maxElements: 10);
	//MessageBox("kRAJ T10RacuniMj");
    */
	return;
}

function setRegionPieChart()
{
	if(pripremljeno == false){
		return;
	}
	
	if (gradoviRB == true)
    {
        sql_str = "With TopItems2 As";
        sql_str = sql_str + " (SELECT nkpr_gl_cuscty AS CountryID , sum(nkpr_gl_total) AS Origin , ROW_NUMBER() OVER( ORDER BY sum(nkpr_gl_total) DESC ) As Num";
        sql_str = sql_str + " FROM " + trenutnaGodinaBaza + " .dbo.nkprinv AS U GROUP BY nkpr_gl_cuscty)" ;
        sql_str = sql_str + " Select countryID, round(Origin,0) as Iznos ";
        sql_str = sql_str + " From TopItems2 Where Num <= 6 Union ALL Select 'ostali', round(sum(Origin),0) as Iznos ";
        sql_str = sql_str + " From TopItems2 Where Num > 6 ";
    }
    elif (regijeRB== true)
    {
        sql_str = "With TopItems2 As";
        sql_str = sql_str + " (SELECT coalesce(ksdu_sf_opis1, 'nedefinirano') AS CountryID , sum(nkpr_gl_total) AS Origin , ROW_NUMBER() OVER( ORDER BY sum(nkpr_gl_total) DESC ) As Num";
        sql_str = sql_str + " FROM " + trenutnaGodinaBaza + " .dbo.nkprinv AS U LEFT JOIN dbo.nkscpart ON nkpr_gl_cuscod= nksc_partcode " ;
        sql_str = sql_str + " LEFT JOIN " + CommonDBGet() + ".dbo.KPSYSIFA a ON NKSC_REGIJA = a.ksdu_sf_code AND ksdu_sf_tip = 'V'";
        sql_str = sql_str + " GROUP BY ksdu_sf_opis1)";
        sql_str = sql_str + " Select countryID, round(Origin,0) as Iznos ";
        sql_str = sql_str + " From TopItems2 Where Num <= 6 Union ALL Select 'ostali', coalesce(round(sum(Origin),0), 0) as Iznos ";
        sql_str = sql_str + " From TopItems2 Where Num > 6 ";
    }
    else //drzave
    {
		sql_str = "With TopItems2 As";
        sql_str = sql_str + " (SELECT coalesce(ksdu_sf_opis1, 'nedefinirano') AS CountryID , sum(nkpr_gl_total) AS Origin , ROW_NUMBER() OVER( ORDER BY sum(nkpr_gl_total) DESC ) As Num";
        sql_str = sql_str + " FROM " + trenutnaGodinaBaza + " .dbo.nkprinv AS U" ;
        sql_str = sql_str + " LEFT JOIN " + CommonDBGet() + ".dbo.KPSYSIFA a ON u.nkpr_gl_drzava = a.ksdu_sf_code AND ksdu_sf_tip = 'H'";
        sql_str = sql_str + " GROUP BY ksdu_sf_opis1)";
        sql_str = sql_str + " Select countryID, coalesce(round(Origin,0), 0) as Iznos ";
        sql_str = sql_str + " From TopItems2 Where Num <= 6 Union ALL Select 'ostali', coalesce(round(sum(Origin),0), 0) as Iznos ";
        sql_str = sql_str + " From TopItems2 Where Num > 6 ";
    }

	try	{
		queryResult = sqlquery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}
    //
	PieChart("PieChart1", "init");
    PieChart("PieChart1", "seriesType", "pie");
    PieChart("PieChart1", "title", "Pie Chart Title", 20);    
	for(i = 1; i < queryResult.length; i++)
	{
		PieChart("PieChart1", "values", int(queryResult[i][1]) , string(queryResult[i][0].trim()));
	}
	PieChart("PieChart1", "Margins", {0,0,0,0});

}

function setTop10Products(){
	define nameArt type a size 40;
    define salesArt1_ar type n size 14 dec 0 array 10;
    define salesArt2_ar type n size 14 dec 0 array 10;
    define NameArt_ar type a size 40 array 10;
    define top10Art_ar type i size 2 array 10;
    define indexArt_ar type n size 4 dec 0 array 10;
    define ArtikliCntr type i size 2;

	sql_str = "WITH sales AS";
	if ( bezPdvaField == true )
	{
		sql_str = sql_str +  " (SELECT TOP 10 arti_artikl , arti_naziv , Sales1 = ISNULL(SUM(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_amt ELSE nkpr_ln_amt END) ,  0)";
		sql_str =  sql_str +  " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv" ;
		if ( regija != "" )
		{
			sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod =  g.nksc_partcode" ;
		}
		// if ( razlikaUCijeniField == true )
		// {
		//  	sql_str =  sql_str +  " AND c.nkpr_gl_invcd<> ''" ;
		// }
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl ON nkpr_gl_num =  nkpr_ln_invnm" ;
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON arti_artikl =  nkpr_ln_pcode" ;
		sql_str =  sql_str +  " WHERE 1 = 1" ;
		if ( mjesec_h != "" )
		{
			if ( do_mjeseca == true )
			{
				sql_str =  sql_str +  " AND month(nkpr_gl_datem)< =  " + mjesec_h ;
				sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
			else 
			{
				sql_str =  sql_str +  " AND month(nkpr_gl_datem) =  " + mjesec_h ;
				sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
		}		
		if ( skladiste != 0 )
		{
			sql_str =  sql_str +  " AND nkpr_ln_loc =  " + skladiste ;
		}
		if ( artikl != "" )
		{ 
			sql_str =  sql_str +  " AND nkpr_ln_pcode =  '" + artikl + "'" ;
		}
		if(partner != "")
		{
			sql_str = sql_str + " AND b.nkpr_gl_cuscod= '" + partner + "'";
		}
		if ( regija != "" )
		{
			sql_str =  sql_str +  " AND g.nksc_regija =  '" + regija + "'" ;
		}
		sql_str =  sql_str +  " GROUP BY arti_artikl , arti_naziv" ;
		sql_str =  sql_str +  " ORDER BY sales1 DESC)" ;
		sql_str =  sql_str +  " SELECT sales.Arti_naziv as NameArt ,  max(sales.sales1) as Sales1" ;
		if ( proslaGodinaBaza != "" )
		{
			sql_str =  sql_str +  "  , sales2 = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza =  'D' THEN c.nkpr_gl_tecaj * k.nkpr_ln_amt ELSE k.nkpr_ln_amt END) ,  0)" ;
		}
	}        
	elif ( razlikaUCijeniField == true )
	{
		sql_str =  sql_str +  " (SELECT TOP 10 arti_artikl , arti_naziv , Sales1 = ISNULL(SUM(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * (nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz) ELSE nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz END) ,  0)" ;
		sql_str =  sql_str +  " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv" ;
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl ON nkpr_gl_num =  nkpr_ln_invnm" ;
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON arti_artikl =  nkpr_ln_pcode" ;
		if ( regija != "" )
		{
			sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod =  g.nksc_partcode" ;
		}

		sql_str =  sql_str +  " WHERE nkpr_gl_invcd<> ''" ;

		if ( mjesec_h != "" )
		{
			if ( do_mjeseca == true )
			{
				sql_str =  sql_str +  " AND month(nkpr_gl_datem)< =  " + mjesec_h ;
				sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
			else 
			{
				sql_str =  sql_str +  " AND month(nkpr_gl_datem) =  " + mjesec_h ;
				sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
		}      

		if ( partner != "" )
		{
			sql_str =  sql_str +  " AND nkpr_gl_cuscod =  '" + partner + "'" ;
		}

		if ( regija != "" )
		{
			sql_str =  sql_str +  " AND g.nksc_regija =  '" + regija + "'" ;
		}

		if ( skladiste != 0 )
		{
			sql_str =  sql_str +  " AND nkpr_ln_loc =  " + skladiste ;
		}

		if ( artikl != "" )
		{
			sql_str =  sql_str +  " AND nkpr_ln_pcode =  '" + artikl + "'" ;
		}

		sql_str =  sql_str +  " GROUP BY arti_artikl , arti_naziv" ;
		sql_str =  sql_str +  " ORDER BY sales1 DESC)" ;
		sql_str =  sql_str +  " SELECT sales.arti_naziv as NameArt ,  max(sales.sales1) as Sales1" ;
		if ( proslaGodinaBaza != "" )
		{
			sql_str =  sql_str +  "  , sales2 = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza =  'D' THEN c.nkpr_gl_tecaj * (k.nkpr_ln_amt - k.nkpr_ln_cenan * k.nkpr_ln_qtyz) ELSE k.nkpr_ln_amt - k.nkpr_ln_cenan * k.nkpr_ln_qtyz END) ,  0)" ;
		}
	}
	elif ( tezina_dn == true )
	{
		sql_str =  sql_str +  " (SELECT TOP 10 arti_artikl , arti_naziv , Sales1 = ISNULL(SUM(nkpr_ln_tezinan) ,  0)" ;
		sql_str =  sql_str +  " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv" ;
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl ON nkpr_gl_num =  nkpr_ln_invnm" ;
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON arti_artikl =  nkpr_ln_pcode" ;
		if ( regija != "" )
		{
			sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod =  g.nksc_partcode" ;
		}
		sql_str =  sql_str +  " WHERE 1 = 1" ;
		if ( mjesec_h != "" )
			{
			if ( do_mjeseca == true )
			{
				sql_str =  sql_str +  " AND month(nkpr_gl_datem)< =  " + mjesec_h ;
				sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
			else 
			{
				sql_str =  sql_str +  " AND month(nkpr_gl_datem) =  " + mjesec_h ;
				sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
				}
		}		
		if ( partner != "" )
		{
			sql_str =  sql_str +  " AND nkpr_gl_cuscod =  '" + partner + "'" ;
		}
		if ( regija != "" )
		{
			sql_str =  sql_str +  " AND g.nksc_regija =  '" + regija + "'" ;
		}
		if ( skladiste != 0 )
		{
			sql_str =  sql_str +  " AND nkpr_ln_loc =  " + skladiste ;
		}
		if ( artikl != "" )
		{
			sql_str =  sql_str +  " AND nkpr_ln_pcode =  '" + artikl + "'" ;
		}
		sql_str =  sql_str +  " GROUP BY arti_artikl , arti_naziv" ;
		sql_str =  sql_str +  " ORDER BY sales1 DESC)" ;
		sql_str =  sql_str +  " SELECT sales.arti_naziv as NameArt ,  max(sales.sales1) as Sales1" ;
		if ( proslaGodinaBaza != "" )
		{
			sql_str =  sql_str +  "  , sales2 = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza =  'D' THEN c.nkpr_gl_tecaj * (k.nkpr_ln_amt - k.nkpr_ln_cenan * k.nkpr_ln_qtyz) ELSE k.nkpr_ln_amt - k.nkpr_ln_cenan * k.nkpr_ln_qtyz END) ,  0)" ;
		}
	}
	else 
	{
		sql_str =  sql_str +  " (SELECT TOP 10 arti_artikl , arti_naziv , Sales1 = ISNULL(SUM(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_pext ELSE nkpr_ln_pext END) ,  0)" ;
		sql_str =  sql_str +  " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv" ;
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl ON nkpr_gl_num =  nkpr_ln_invnm" ;
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON arti_artikl =  nkpr_ln_pcode" ;
		if ( regija != "" )
			{
			sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod =  g.nksc_partcode AND g.nksc_regija =  '" + regija + "'" ;
		}
		sql_str =  sql_str +  " WHERE 1 = 1" ;
		if ( mjesec_h != "" )
			{
			if ( do_mjeseca == true )
			{
				sql_str =  sql_str +  " AND month(nkpr_gl_datem)< =  " + mjesec_h ;
				sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
			else 
			{
				sql_str =  sql_str +  " AND month(nkpr_gl_datem) =  " + mjesec_h ;
				sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
		}
		if ( partner != "" )
			{
			sql_str =  sql_str +  " AND nkpr_gl_cuscod =  '" + partner + "'" ;
		}
		if ( regija != "" )
			{
			sql_str =  sql_str +  " AND g.nksc_regija =  '" + regija + "'" ;
		}
		if ( skladiste != 0 )
		{
			sql_str =  sql_str +  " AND nkpr_ln_loc =  " + skladiste ;
		}
		if ( artikl != "" )
			{
			sql_str =  sql_str +  " AND nkpr_ln_pcode =  '" + artikl + "'" ;
		}
		sql_str =  sql_str +  " GROUP BY arti_artikl , arti_naziv" ;
		sql_str =  sql_str +  " ORDER BY sales1 DESC)" ;
		sql_str =  sql_str +  " SELECT  sales.arti_naziv as NameArt ,  max(sales.sales1) as Sales1" ;
		if ( proslaGodinaBaza != "" )
			{
			sql_str =  sql_str +  " ,  sales2 = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza =  'D' THEN c.nkpr_gl_tecaj * k.nkpr_ln_pext ELSE k.nkpr_ln_pext END) ,  0)" ;
		}
	}

	sql_str =  sql_str +  " FROM sales" ;
	if ( proslaGodinaBaza != "" )
		{
		sql_str =  sql_str +  " LEFT JOIN " + proslaGodinaBaza  + ".dbo.nkprinvl k ON sales.arti_artikl =  k.nkpr_ln_pcode" ;
		sql_str =  sql_str +  " LEFT JOIN " + proslaGodinaBaza  + ".dbo.nkprinv c ON k.nkpr_ln_invnm =  c.nkpr_gl_num " ;
		if ( skladiste != 0 )
			{
			sql_str =  sql_str +  " AND k.nkpr_ln_loc =  " + skladiste ;
		}
		if ( artikl != "" )
			{
			sql_str =  sql_str +  " AND k.nkpr_ln_pcode =  '" + artikl + "'" ;
		}
		if ( do_mjeseca == true )
			{
			sql_str =  sql_str +  " AND month(c.nkpr_gl_datem)< =  " + mjesec_h ;
			sql_str =  sql_str +  " AND YEAR(c.nkpr_gl_datem) =  " + proslaGodina ;
		}
		else 
		{
			sql_str =  sql_str +  " AND month(c.nkpr_gl_datem) =  " + mjesec_h ;
			sql_str =  sql_str +  " AND YEAR(c.nkpr_gl_datem) =  " + proslaGodina ;
			}
	}

	if ( regija != "" )
		{
		sql_str =  sql_str +  " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart h ON c.nkpr_gl_cuscod =  h.nksc_partcode AND h.nksc_regija =  '" + regija + "'" ;
	}

	sql_str =  sql_str +  " GROUP BY sales.arti_artikl , sales.arti_naziv" ;
	sql_str =  sql_str +  " ORDER BY sales1 DESC;" ;
	
	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	//MessageBox(Size(sqlResult));

	//DisplayArray("dgArtikli", "close");
    cntr4= 0;

	if(Size(sqlResult) > 1){
		for ( i = 1; i < Size(sqlResult); i++ )
		{      
			nameArt = sqlResult[i][0];  
			sales1 = sqlResult[i][1];
			sales2 = sqlResult[i][2];
			nameArt_ar[i - 1] =  nameArt;
			salesArt1_ar[i - 1] =  sales1;
			salesArt2_ar[i - 1] =  sales2;
			top10Art_ar[i - 1] =  i;
			if(sales2 != 0)
			{
				IndexArt_ar[i - 1] =  Math.Round(((sales1 - sales2)/sales2) * 100, 0);
			}
			else
			{
				IndexArt_ar[i - 1] =  0;
			}   
		}      

		DEFINE cntr4 type i;
		Format("SALESART1_AR", "nofd");
		Format("SALESART2_AR", "nofd");
        //Messagebox(SALESART1_AR[1]);
        //Messagebox(SALESART1_AR[2]);
		
		DisplayArraySetup("dgArtikli", counterFld: "cntr4", activeElements: Size(sqlResult) - 1, maxElements: 10);
		//DisplayArraySetup("dgArtikli", counterFld: "cntr4", "10", maxElements: 10);
        //DisplayArray("dgArtikli", "RedisplayfromTop");
	}
	
	return;
}

function setCustomerDataGrid(){
    define namePart type a size 40;
    define salesPart1_ar type n size 14 dec 0 array 10;
    define salesPart2_ar type n size 14 dec 0 array 10;
    define NamePart_ar type a size 40 array 10;
    define top10Part_ar type i array 10;
    define indexPart_ar type n size 4 dec 0 array 10;
    define salesCntr type i;
    define sales1 type n size 16 dec 2;
    define sales2 type n size 16 dec 2;

	sql_str = "WITH sales AS";
	if ( bezPdvaField == true )
	{
		sql_str = sql_str + " (SELECT nkpr_gl_cusnme , nkpr_gl_cuscod , SalesNew = ISNULL(SUM(CASE WHEN nkpr_gl_dviza = 'D' THEN nkpr_gl_tecaj * nkpr_ln_amt ELSE nkpr_ln_amt END) , 0),";
        sql_str = sql_str + " ROW_NUMBER() OVER( ORDER BY ISNULL(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_amt ELSE nkpr_ln_amt END), 0) DESC ) As Num";
		sql_str = sql_str + " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv";
		//if regija<> ''
		sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = g.nksc_partcode";
		//endif
		sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl ON nkpr_gl_num = nkpr_ln_invnm";
		if ( skladiste != 0 )
		{
			sql_str = sql_str + " AND nkpr_ln_loc = " + skladiste;
		}
		if ( artikl != "" )
		{
			sql_str = sql_str + " AND nkpr_ln_pcode = '" + artikl + "'";
		}
		sql_str = sql_str + " WHERE 1 = 1";
		if ( mjesec_h != "" )
		{
			if ( do_mjeseca == true )
			{
				sql_str = sql_str + " AND month(nkpr_gl_datem)< = " + mjesec_h;
				sql_str = sql_str + " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
			}
			else 
			{
				sql_str = sql_str + " AND month(nkpr_gl_datem) = " + mjesec_h;
				sql_str = sql_str + " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
			}
		}
		if ( regija != "" )
		{
			sql_str = sql_str + " AND g.nksc_regija = '" + regija + "'";
		}
		if ( partner != "" )
		{
			sql_str = sql_str + " AND nkpr_gl_cuscod = '" + partner + "'";
		}
		sql_str = sql_str + " GROUP BY nkpr_gl_cusnme , nkpr_gl_cuscod)";

		sql_str = sql_str + " SELECT sales.nkpr_gl_cusnme as NamePart , max(sales.salesNew) as Sales1";
		if ( proslaGodinaBaza != "" )
		{
			sql_str = sql_str + " , sales2 = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * k.nkpr_ln_amt ELSE k.nkpr_ln_amt END) , 0)";
		}
	}
	elif ( razlikaUCijeniField == true )
	{
		sql_str = sql_str + " (SELECT nkpr_gl_cusnme , nkpr_gl_cuscod , SalesNew = ISNULL(SUM(CASE WHEN nkpr_gl_dviza = 'D' THEN nkpr_gl_tecaj * (nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz) ELSE nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz END) , 0), ";
        sql_str = sql_str + " ROW_NUMBER() OVER( ORDER BY ISNULL(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_amt ELSE nkpr_ln_amt END), 0) DESC ) As Num";
		sql_str = sql_str + " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv";
		sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl ON nkpr_gl_num = nkpr_ln_invnm";
		//if regija<> ''
		sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = g.nksc_partcode";
		//endif
		sql_str = sql_str + " WHERE nkpr_gl_invcd<> ''";
		if ( mjesec_h != "" )
		{
			if ( do_mjeseca == true )
			{
				sql_str = sql_str + " AND month(nkpr_gl_datem)< = " + mjesec_h;
				sql_str = sql_str + " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
			}
			else 
			{
				sql_str = sql_str + " AND month(nkpr_gl_datem) = " + mjesec_h;
				sql_str = sql_str + " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
			}
		}
		if ( partner != "" )
		{
			sql_str = sql_str + " AND nkpr_gl_cuscod = '" + partner + "'";
		}
		if ( regija != "" )
		{
			sql_str = sql_str + " AND g.nksc_regija = '" + regija + "'";
		}
		sql_str = sql_str + " GROUP BY nkpr_gl_cusnme , nkpr_gl_cuscod)";

		sql_str = sql_str + " SELECT sales.nkpr_gl_cusnme as NamePart , max(sales.salesNew) as Sales1";
		if ( proslaGodinaBaza != "" )
		{
			sql_str = sql_str + " , sales2 = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * (k.nkpr_ln_amt - k.nkpr_ln_cenan * k.nkpr_ln_qtyz) ELSE k.nkpr_ln_amt - k.nkpr_ln_cenan * k.nkpr_ln_qtyz END) , 0)";
		}
	}
	elif ( tezina_dn == true )
	{
		sql_str = sql_str + " (SELECT nkpr_gl_cusnme , nkpr_gl_cuscod , SalesNew = ISNULL(SUM(nkpr_ln_tezinan) , 0), ";
        sql_str = sql_str + " ROW_NUMBER() OVER( ORDER BY ISNULL(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_amt ELSE nkpr_ln_amt END), 0) DESC ) As Num";
		sql_str = sql_str + " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv";
		//if regija<> ''
		sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = g.nksc_partcode";
		//endif
		sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl ON nkpr_gl_num = nkpr_ln_invnm";
		if ( skladiste != 0 )
		{
			sql_str = sql_str + " AND nkpr_ln_loc = " + skladiste;
		}
		if ( artikl != "" )
		{
			sql_str = sql_str + " AND nkpr_ln_pcode = '" + artikl + "'";
		}
		sql_str = sql_str + " WHERE 1 = 1";
		if ( mjesec_h != "" )
		{
			if ( do_mjeseca == true )
			{
				sql_str = sql_str + " AND month(nkpr_gl_datem)< = " + mjesec_h;
				sql_str = sql_str + " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
			}
			else 
			{
				sql_str = sql_str + " AND month(nkpr_gl_datem) = " + mjesec_h;
				sql_str = sql_str + " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
			}
		}
		if ( partner != "" )
		{
			sql_str = sql_str + " AND nkpr_gl_cuscod = '" + partner + "'";
		}
		if ( regija != "" )
		{
			sql_str = sql_str + " AND g.nksc_regija = '" + regija + "'";
		}
		sql_str = sql_str + " GROUP BY nkpr_gl_cusnme , nkpr_gl_cuscod)";
		
		sql_str = sql_str + " SELECT sales.nkpr_gl_cusnme as NamePart , max(sales.salesNew) as Sales1";
		if ( proslaGodinaBaza != "" )
		{
			sql_str = sql_str + " , sales2 = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * k.nkpr_ln_amt ELSE k.nkpr_ln_amt END) , 0)";
		}
	}
	else 
	{
		sql_str = sql_str + " (SELECT nkpr_gl_cusnme , nkpr_gl_cuscod , SalesNew = ISNULL(SUM(CASE WHEN nkpr_gl_dviza = 'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END) , 0), ";
        sql_str = sql_str + " ROW_NUMBER() OVER( ORDER BY ISNULL(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_amt ELSE nkpr_ln_amt END), 0) DESC ) As Num";
		sql_str = sql_str + " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv";
		//if regija<> ''
		sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = g.nksc_partcode AND g.nksc_regija = '" + regija + "'";
		
		sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl ON nkpr_gl_num = nkpr_ln_invnm";
		//endif
		sql_str = sql_str + " WHERE 1 = 1";
		if ( mjesec_h != "" )
		{
			if ( do_mjeseca == true )
				{
				sql_str = sql_str + " AND month(nkpr_gl_datem)< = " + mjesec_h;
				sql_str = sql_str + " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
			}
			else 
			{
				sql_str = sql_str + " AND month(nkpr_gl_datem) = " + mjesec_h;
				sql_str = sql_str + " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
				}
		}
		if ( partner != "" )
		{
			sql_str = sql_str + " AND nkpr_gl_cuscod = '" + partner + "'";
		}
		if ( regija != "" )
		{
			sql_str = sql_str + " AND g.nksc_regija = '" + regija + "'";
		}
		sql_str = sql_str + " GROUP BY nkpr_gl_cusnme , nkpr_gl_cuscod)";
		//
		sql_str = sql_str + " SELECT sales.nkpr_gl_cusnme as NamePart , round(max(sales.salesNew),0) as Sales1";
		if ( proslaGodinaBaza != "" )
		{
			sql_str = sql_str + " , sales2 = ISNULL(round(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * k.nkpr_ln_pext ELSE k.nkpr_ln_pext END),0) , 0)";
		}
	}
	sql_str = sql_str + " FROM sales";
	if ( proslaGodinaBaza != "" )
	{
		sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkprinv c ON sales.nkpr_gl_cuscod = c.nkpr_gl_cuscod ";
		//AND (month(c.nkpr_gl_invdte) =  4 or  month(c.nkpr_gl_invdte) =  5)
		sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkprinvl k ON c.nkpr_gl_num = k.nkpr_ln_invnm";
		if ( skladiste != 0 )
		{
			sql_str = sql_str + " AND k.nkpr_ln_loc = " + skladiste;
		}
		if ( artikl != "" )
		{
			sql_str = sql_str + " AND k.nkpr_ln_pcode = '" + artikl + "'";
		}
		//
		if ( do_mjeseca == true )
		{
			sql_str = sql_str + " AND month(c.nkpr_gl_datem)< = " + mjesec_h;
			sql_str = sql_str + " AND YEAR(c.nkpr_gl_datem) = " + proslaGodina;
		}
		else 
		{
			sql_str = sql_str + " AND month(c.nkpr_gl_datem) = " + mjesec_h;
			sql_str = sql_str + " AND YEAR(c.nkpr_gl_datem) = " + proslaGodina;
		}
		
		if ( regija != "" )
		{
			sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart h ON c.nkpr_gl_cuscod = h.nksc_partcode AND h.nksc_regija = '" + regija + "'";
		}
	}
	sql_str = sql_str + " WHERE num <= 9";
	sql_str = sql_str + " and salesNew != 0";
	sql_str = sql_str + " GROUP BY sales.nkpr_gl_cusnme";
    sql_str = sql_str + " Union ALL";
    sql_str = sql_str + " Select 'Ostali', round(isnull(sum(salesNew), 0),0) as iznos, 0";
    sql_str = sql_str + " From sales";
    sql_str = sql_str + " Where Num > 9";
    sql_str = sql_str + " and sales.salesNew != 0";

	sql_str = sql_str + " ORDER BY sales1 DESC;";

 	salesCntr = 0;    

	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	//SaveFile(sql_str);

	DisplayArray("dgStavke", "close");

	if(Size(sqlResult) > 1){
		for ( i = 1; i < Size(sqlResult); i++ )
		{        
			namepart = sqlResult[i][0];
			sales1 = sqlResult[i][1];
			sales2 = sqlResult[i][2];

			namePart_ar[i - 1] =  namepart;
			salesPart1_ar[i - 1] =  sales1;
			salesPart2_ar[i - 1] =  sales2;
			top10Part_ar[i - 1] =  i;
			if(sales2 != 0)
			{
				IndexPart_ar[i - 1] =  Math.Round(((sales1 - sales2)/sales2) * 100, 0);
			}
			else{
				IndexPart_ar[i - 1] =  0;
			}
		} 
	

		DEFINE cntr1 type i;
		Format("SALESPART2_AR", "nofd");
		Format("SALESPART1_AR", "nofd");
		
		DisplayArraySetup("dgStavke", counterFld: "cntr1", activeElements: Size(sqlResult) - 1, maxElements: 10);
		//MessageBox("KRAJ gbRecalc1");
	}

    return;
}
