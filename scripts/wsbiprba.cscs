        //MessageBox("AAAA");


    CreateWindow(strTrim(tpath()) +"wsbiprba.xaml");
    define mjesec_h type a size 2;

    define do_mjesecatype l;
    define neto_dn type l;
    define danas_h type d size 8;
    define ovagod_h type a size 4;
    define lani_h type a size 4;
    define trenutnaGodinaBaza,proslaGodinaBaza type a size 120;
    define partner type a size 10;
    define regija type a size 6;
    define sqlOdDana,sqlNaDan type a size 10;
    define artikl type a size 15;
    define skladiste type i size 3;
  

    DEFINE saPdvomField type l;
    DEFINE bezPdvaField type l;
    DEFINE razlikaUCijeniField type l;
    DEFINE tezina_dn,neto_dn type l;
    DEFINE proslaGodina type i;
    DEFINE arrayProsla type n size 14 array 12;
    DEFINE arrayTrenutna type n size 14 array 12;
    define arrayVrijednosti type n size 14 dec 0 array 31;
    //CreateWindow(strTrim(tpath()) +"testTabWin.xaml");
    //Import("C:\wpfcscs\Modules\CSCS.Math\bin\Debug\CSCS.Math");


function wsbiprba_onDisplay()
    {
    //  MessageBox("Tu sam on start xaml");
     /*
    ruc_dn= false;
    ovagod_h= "";
    lani_h= "";
    trenutnaGodinaBaza="";
    proslaGodinaBaza="";
    bezPdvaField=true;
    proslaGodina=0;
    danas_h="";
    mjesec_h=""
    do_mjeseca=true;
    partner= "";
    razlikaucijeniField=false;
    regija="";
    artikl="";
    sqlOdDana="";
    SQLNaDan="";
    skladiste= 0;
        arrayProsla = {};
    arrayTrenutna = {};
    arrayVrijednosti = {};
    */
    //neto_dn= true;    
    Import("C:\cscs_wpf\Modules\CSCS.Math");
    PARAM skladiste,SqlOdDana,SQLNadan,ovagod_h,lani_h,trenutnaGodinaBaza,proslaGodinaBaza,bezPdvaField,proslaGodina,danas_h,mjesec_h,do_mjeseca;
//openv("NKPRINVL");


    sqlQueryString = "select SY_CC_USER, SY_CC_YEAR, SY_CC_DBASE from " + CommonDBGet() + ".dbo.NKSYCCYR WHERE SY_CC_CODE = '" + Substring(CoGet(), 1, 2) + "'";
    try
        {
        sqlResult = sqlQuery(sqlQueryString);
        }
    catch(exc)
        {
        MessageBox(exc);
        }
         //MessageBox("CCCC");

        //ovagod_h="";  
        // MessageBox("CC11");
        // MessageBox("BBC1");
    setChartByMonth();
 //   setChartByDaysOfMonth();


    Chart("ChartPoMjesecima", "init");
    Chart("ChartPoMjesecima", "seriesType", "Columnseries");
    Chart("ChartPoMjesecima", "title", "Naslov grafa", 20);
    Chart("ChartPoMjesecima", "labels", "y", 13);
    Chart("ChartPoMjesecima", "labels", "x", 13, {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"});
    Chart("ChartPoMjesecima", "xlabelsRotation", 0);
    Chart("ChartPoMjesecima", "values", arrayProsla, STRING(proslaGodina)); // !
    Chart("ChartPoMjesecima", "values", arrayTrenutna, STRING(ovagod_h)); //!
    Chart("ChartPoMjesecima", "SeparatorStep", 1);
    Chart("ChartPoMjesecima", "Margins", {50, 20, 0, 30});
    Chart("ChartPoMjesecima", "TooltipDecimalPlaces", 2);
    //
    Chart("ChartPoDanima", "init");
    Chart("ChartPoDanima", "seriesType", "lineSeries");
    //Chart("ChartPoDanima", "title", "Po Danima");
    //Chart("ChartPoDanima", "labels","y", 12);
    Chart("ChartPoDanima", "labels","x", 15,  {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"});
    //Chart("ChartPoDanima", "labels", arrayDani);
    Chart("ChartPoDanima", "xlabelsRotation", 0);
    Chart("ChartPoDanima", "SeparatorStep", 1);
    Chart("ChartPoDanima", "values", arrayVrijednosti, "01");
    Chart("ChartPoDanima", "Margins", {60, 20, 0, 30});
//

    DisplayArray("dgRacuniLast", "close");
    setLast10InvoicesDataGrid();


    Format("T10IZNOSZ_AR", "nofd");
    Format("T10IZNOSMJ_AR", "nofd");
    DisplayArraySetup("dgRacuniLast", counterFld: "cntr2", activeElements: Size(sqlResult) - 1, maxElements: 10);

	//DisplayArraySetup("dgRacuniMjesec", counterFld: "cntr3", activeElements: Size(sqlResult) - 1, maxElements: 10);
    setTop10InvoicesDataGrid();
	//DEFINE cntr3 type i;
    cntr3= 0;
	//MessageBox("AAAA: "+size(sqlResult));
	//DisplayArray("dgRacuniMjesec", "close");
	DisplayArraySetup("dgRacuniMjesec", counterFld: cntr3, activeElements: Size(sqlResult) - 1, maxElements: 10);
	//MessageBox("BBBB: "+size(sqlResult));
	//DisplayArraySetup("dgRacuniMjesec", counterFld: "cntr3", activeElements: Size(sqlResult) - 1, maxElements: 10);
	//DisplayArray("dgRacuniMjesec", "redisplayFromEnd");
    }

/* 	define t10Iznosz_ar type n size 14 dec 2 array 10;
	define t10Namez_ar type a size 30 array 10;
	define t10Cntrz_ar type i size 2 array 10;
	define t10Datumz_ar type d size 8 array 10;
	define t10Timez_ar type t size 8 array 10;
	define t10Racunz_ar type r size 8 array 10;
 */
function setLast10InvoicesDataGrid()
{
  	t10Iznosz_ar ={};
	t10Namez_ar = {};
	t10Cntrz_ar ={};
	t10Datumz_ar={};
	t10Timez_ar ={};
	t10Racunz_ar ={};
    
	define T10Cntrz type i;
	define t10DatRac type l;
//  messagebox("PP44");
   
	if ( t10datrac == true )
	{
		//za sada ne koristimo ovo!
		sql_str =  "SELECT TOP 10 nkpr_gl_num , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_invdte , 3) AS datecr , convert(char(8) , nkpr_gl_timecr , 20) as nkpr_gl_timecr ,  ";
		sql_str =  sql_str +  " CAST( CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total as decimal (10,2))  AS nkpr_gl_total " ;
	}
	else 
	{
		sql_str =  "SELECT TOP 10 nkpr_gl_num , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_datecr , 3) AS datecr , convert(char(8) , nkpr_gl_timecr , 20) as nkpr_gl_timecr ,  ";
		sql_str =  sql_str +  " CAST( CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2))  AS nkpr_gl_total " ;
	}
	sql_str =  sql_str +  " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv" ;
	sql_str =  sql_str +  " WHERE YEAR(nkpr_gl_datem) =  " + ovagod_h  ;
	if ( do_mjeseca == true )
	{
		sql_str =  sql_str +  " AND month(nkpr_gl_datem)< =  " + mjesec_h  ;
	}
	else 
	{
		sql_str =  sql_str +  " AND month(nkpr_gl_datem) =  " + mjesec_h;
		}
	if ( t10datrac == true )
		{
		sql_str =  sql_str +  " ORDER BY nkpr_gl_invdte DESC , nkpr_gl_timecr DESC" ;
	}
	else 
	{
		sql_str =  sql_str +  " ORDER BY nkpr_gl_datecr DESC , nkpr_gl_timecr DESC" ;
	}
//  messagebox("PP55");

	try	{
         //SaveFile(sql_str);

		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}
    messagebox("PP65: "+Size(sqlResult));
    for ( i = 1; i < Size(sqlResult); i++ )
    {      

        //nkpr_gl_num = sqlResult[i][0];  
        t10Namez_ar[i - 1] = sqlResult[i][1];  
  messagebox("PP65: "+sqlResult[i][1]);         
        t10Iznosz_ar[i - 1] =  sqlResult[i][4];
        t10Cntrz_ar[i - 1] =  i;
        t10Datumz_ar[i - 1] =  sqlResult[i][2];
        t10Racunz_ar[i - 1] =  sqlResult[i][0]; 
        t10Timez_ar[i - 1] =  sqlResult[i][3];
        
     
/*         nkpr_gl_cusnme = sqlResult[i][1];
        datecr = sqlResult[i][2];
        nkpr_gl_timecr = sqlResult[i][3];
        nkpr_gl_total= sqlResult[i][4];
                  messagebox("PP63: "+nkpr_gl_cusnme);
   

        t10Namez_ar[i - 1 ] =  nkpr_gl_cusnme;
                   messagebox("PP64");
  
        t10Iznosz_ar[i - 1] =  nkpr_gl_total;
        t10Cntrz_ar[i - 1] =  i;
        t10Datumz_ar[i - 1] =  datecr;
        t10Racunz_ar[i - 1] =  nkpr_gl_num; 
        t10Timez_ar[i - 1] =  nkpr_gl_timecr;
                   messagebox("PP65");
 */  
    }
    DEFINE cntr2 type i;
}

function setTop10InvoicesDataGrid()
{
/*     define t10IznosMj_ar type n size 14 dec 2 array 10;
	define t10NameMj_ar type a size 30 array 10;
	define t10CntrMj_ar type i size 2 array 10;
	define t10DatumMj_ar type d size 8 array 10;
	define t10RacunMj_ar type r size 8 array 10;
 */	
	t10NameMj_ar={}; // type a size 30 array 10;
	t10CntrMj_ar={}; // type i size 2 array 10;
	t10DatumMj_ar={}; // type d size 8 array 10;
	t10RacunMj_ar={}; // type r size 8 array 10;
 define T10CntrMj type i;
	sql_str =  "SELECT TOP 10 nkpr_gl_num , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_invdte , 3) AS datecr , " ;
	sql_str =  sql_str +  " CAST(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2)) AS nkpr_gl_total ";
	sql_str =  sql_str +  " FROM " + trenutnaGodinaBaza + ".dbo.nkprinv" ;
	if ( regija != "" )
	{
		sql_str =  sql_str +  " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod =  g.nksc_partcode" ;
	}
	sql_str =  sql_str +  " WHERE 1 = 1" ;
	if ( mjesec_h != "" )
		{
		if ( do_mjeseca == true )
		{
			sql_str =  sql_str +  " AND month(nkpr_gl_datem)< =  " + mjesec_h ;
			sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
		}
		else 
		{
			sql_str =  sql_str +  " AND month(nkpr_gl_datem) =  " + mjesec_h ;
			sql_str =  sql_str +  " AND YEAR(nkpr_gl_datem) =  " + ovagod_h ;
			}
	}
	if ( regija != "" )
	{
		sql_str =  sql_str +  " AND g.nksc_regija =  '" + regija + "'";
	}
	sql_str =  sql_str +  " ORDER BY CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END DESC";
	
	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	for ( i = 1; i < Size(sqlResult); i++ )
	{      
		nkpr_gl_num = sqlResult[i][0];  
		nkpr_gl_cusnme = sqlResult[i][1];
		nkpr_gl_invdte = sqlResult[i][2];
		nkpr_gl_total= sqlResult[i][3];
		t10NameMj_ar[i - 1] =  nkpr_gl_cusnme;
		t10IznosMj_ar[i - 1] =  nkpr_gl_total;
		t10CntrMj_ar[i - 1] =  i;
		t10DatumMj_ar[i - 1] =  nkpr_gl_invdte;
		t10RacunMj_ar[i - 1] =  nkpr_gl_num;
	}        

}

function setChartByDaysOfMonth()
    {
        if ( bezPdvaField == true )
        {
             sql_str = "SELECT [wk_day] as dan2 , SalesDay = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt ELSE e.nkpr_ln_amt END) , 0)";
        }
        elif ( razlikaUCijeniField == true )
        {
             sql_str = "SELECT [wk_day] as dan2 , SalesDay = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * (e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz) ELSE e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz END) , 0)";
        }
        elif ( tezina_dn == true )
        {
             sql_str = " SELECT [wk_day] as dan2, SalesDay=ISNULL(SUM(e.nkpr_ln_tezinan), 0) ";
        }
        else
        {
             sql_str = "SELECT [wk_day] as dan2 , SalesDay = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_pext ELSE e.nkpr_ln_pext END) , 0)";
        }
        sql_str = sql_str + " FROM " + CommonDBGet()+ ".dbo.Kalendar a";
        //sql_str =  sql_str +  " LEFT JOIN " + ovagod_h * ".dbo.nkprinv b ON a.[Wk_Date]  =  DATEADD(month ,  DATEDIFF(month ,  0 ,  b.nkpr_gl_invdte) ,  0)"
        sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinv c ON a.[Wk_Date] = c.nkpr_gl_datem ";
        sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl e ON c.nkpr_gl_num = e.nkpr_ln_invnm";
        if ( regija != "" )
        {
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON c.nkpr_gl_cuscod = g.nksc_partcode";
        }
        sql_str = sql_str + " WHERE 1 = 1";
        if ( do_mjeseca == true )
        {
             sql_str = sql_str + " AND [wk_Month]< = '" + mjesec_h + "' AND wk_Year = '" + ovagod_h + "'";
        }
        else
        {
             sql_str = sql_str + " AND [wk_Month] = '" + mjesec_h + "' AND wk_Year = '" + ovagod_h + "'";
        }
        if ( partner != "" )
        {
             sql_str = sql_str + " AND c.nkpr_gl_cuscod = '" + partner + "'";
        }
        if ( regija != "" )
        {
             sql_str = sql_str + " AND g.nksc_regija = '" + regija + "'";
        }
        if ( artikl != "" )
        {
             sql_str = sql_str + " AND e.nkpr_ln_pcode = '" + artikl + "'";
        }
        if ( razlikaUCijeniField == true )
        {
             sql_str = sql_str + " AND c.nkpr_gl_invcd<> ''" ;
             //da bi dobili ruc ,  treba ra?un biti a?uriran
        }
        if ( skladiste != 0 )
        {
             sql_str = sql_str + " AND e.nkpr_ln_loc = " + skladiste;
        }
        sql_str = sql_str + " GROUP BY Wk_day";
        sql_str = sql_str + " ORDER BY [Wk_day]";
        try
        {
            // SaveFile(sql_str);

             queryResult = sqlquery(sql_str);
        }catch(exc)
        {
              MessageBox(exc);
        }
     //define arrayDani type a size 10; 
     //define arrayvrijednosti type n size 14 dec 2; 
        arrayDani = {};
        arrayVrijednosti = {};
        for(i = 1; i < queryResult.length; i++)
        {
            arrayDani.add(string(queryResult[i][0]));
        }
        for(i = 1; i < queryResult.length; i++)
        {
            arrayVrijednosti.add(queryResult[i][1]);
        }
    }

function setChartByMonth()
    {
        SQL_str = "SET query_governor_cost_limit 0;";
        if ( proslaGodinaBaza != "" )
        {
            if ( bezPdvaField == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN b.nkpr_gl_dviza = 'D' THEN b.nkpr_gl_tecaj * d.nkpr_ln_amt ELSE d.nkpr_ln_amt END) , 0) as decimal(10,0)) + cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt ELSE e.nkpr_ln_amt END) , 0) as decimal(10,0)) ";
            }
            elif ( razlikaUCijeniField == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN b.nkpr_gl_dviza = 'D' THEN b.nkpr_gl_tecaj * d.nkpr_ln_amt - d.nkpr_ln_cenan * d.nkpr_ln_qtyz ELSE d.nkpr_ln_amt - d.nkpr_ln_cenan * d.nkpr_ln_qtyz END) , 0)as decimal (10)) + cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz ELSE e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz END) , 0)as decimal (10))";
            }
            elif ( tezina_dn == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(d.nkpr_ln_tezinan) , 0)as decimal (10)) + cast(ISNULL(SUM(e.nkpr_ln_tezinan) , 0) as decimal (10))";
            }
            else
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN b.nkpr_gl_dviza = 'D' THEN b.nkpr_gl_tecaj * d.nkpr_ln_pext ELSE d.nkpr_ln_pext END) , 0) as decimal (10)) + cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_pext ELSE e.nkpr_ln_pext END) , 0)as decimal (10))";
            }
            sql_str = sql_str + " FROM " + CommonDBGet() + ".dbo.Kalendar a";
            sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkprinv b ON a.[Wk_Date] = DATEADD(month , DATEDIFF(month , 0 , b.nkpr_gl_datem) , 0) AND year(b.nkpr_gl_datem)='" + (int(ovagod_h) - 1) + "' ";
            if ( partner != "" )
            {
                sql_str = sql_str + " AND b.nkpr_gl_cuscod = '" + partner + "'";
            }
            if ( razlikaUCijeniField == true )
            {
                sql_str = sql_str + " AND b.nkpr_gl_invcd<> ''";
            }
            if ( regija != "" )
            {
                sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart g ON b.nkpr_gl_cuscod = g.nksc_partcode";
                // AND g.nksc_regija =  '" + regija * "'"
            }
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinv c ON a.[Wk_Date] = DATEADD(month , DATEDIFF(month , 0 , c.nkpr_gl_datem) , 0) AND year(c.nkpr_gl_datem) = " + ovagod_h;
            if ( partner != "" )
            {
                sql_str = sql_str + " AND C.nkpr_gl_cuscod = '" + partner + "'";
            }
            if ( razlikaUCijeniField == true )
            {
                sql_str = sql_str + " AND c.nkpr_gl_invcd<> ''";
            }
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl e ON c.nkpr_gl_num = e.nkpr_ln_invnm";
            //if skladiste<> 0
            //    sql_str =  sql_str +  " AND e.nkpr_ln_loc =  " + skladiste
            //endif
            sql_str = sql_str + " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkprinvl d ON b.nkpr_gl_num = d.nkpr_ln_invnm";
            if ( regija != "" )
            {
                sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart f ON c.nkpr_gl_cuscod = f.nksc_partcode";
                // AND f.nksc_regija =  '" + regija + "'"
            }
            sql_str = sql_str + " WHERE [wk_Date] BETWEEN '" + sqlOdDana + "' AND '" + sqlNaDan + "' AND [wk_Day] = 1";
            if ( regija != "" )
            {
                sql_str = sql_str + " AND (g.nksc_regija = '" + regija + "' OR f.nksc_regija = '" + regija + "')";
            }
            if ( artikl != "" )
            {
                sql_str = sql_str + " AND (e.nkpr_ln_pcode = '" + artikl + "' OR d.nkpr_ln_pcode = '" + artikl + "')";
            }
            if ( skladiste != 0 )
            {
                sql_str = sql_str + " AND (d.nkpr_ln_loc = " + skladiste + " OR e.nkpr_ln_loc = " + skladiste + ")";
            }
        }
        else
        {
            if ( neto_dn == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt ELSE e.nkpr_ln_amt END) , 0)as decimal (10))";
            }
            elif ( ruc_dn == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz ELSE e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz END) , 0)as decimal (10))";
            }
            elif ( tezina_dn == true )
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(e.nkpr_ln_tezinan) , 0)as decimal (10))";
            }
            else
            {
                sql_str = sql_str + "SELECT [wk_YYYYMM] as yyyymm , Sales = cast(ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_pext ELSE e.nkpr_ln_pext END) , 0)as decimal (10))";
            }
            sql_str = sql_str + " FROM " + CommonDBGet() + ".dbo.Kalendar a";
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinv c ON a.[Wk_Date] = DATEADD(month , DATEDIFF(month , 0 , c.nkpr_gl_datem) , 0) AND year(c.nkpr_gl_datem) = " + ovagod_h;
            if ( partner != "" )
            {
                sql_str = sql_str + " AND C.nkpr_gl_cuscod = '" + partner + "'";
            }
            if ( ruc_dn == true )
            {
                sql_str = sql_str + " AND c.nkpr_gl_invcd<> ''";
            }
            sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprinvl e ON c.nkpr_gl_num = e.nkpr_ln_invnm";
            //if skladiste<> 0
                //    sql_str =  sql_str +  " AND e.nkpr_ln_loc =  " + skladiste
            //endif
            if ( regija != "" )
            {
                sql_str = sql_str + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart f ON c.nkpr_gl_cuscod = f.nksc_partcode";
                // AND f.nksc_regija =  '" + regija * "'"
            }
            sql_str = sql_str + " WHERE [wk_Date] BETWEEN '" + sqlOdDana + "' AND '" + sqlNaDan + "' AND [wk_Day] = 1";
            if ( regija != "" )
            {
                 sql_str = sql_str + " AND (f.nksc_regija = '" + regija + "'";
                 // OR f.nksc_regija =  '" + regija * "')"
            }
            if ( artikl != "" )
            {
                sql_str = sql_str + " AND e.nkpr_ln_pcode = '" + artikl + "'";
            }
            if ( skladiste != 0 )
            {
                 sql_str = sql_str + " AND e.nkpr_ln_loc = " + skladiste;
            }
        }

        sql_str = sql_str + " GROUP BY [Wk_YYYYMM]";
        sql_str = sql_str + " ORDER BY wk_yyyymm;";
        try
        {
             //SaveFile(sql_str);
             queryResult = sqlquery(SQL_str);
        }
        catch(exc)
        {
             MessageBox(exc);
        }
        tot_proslimj = 0;
        tot_ovajmj = 0;
        tot_ovagod = 0;
        tot_lani = 0;
//messagebox("5555");             

        //arrayProsla = {};
        //arrayTrenutna = {};
        //sales_ar = {};
        //DEFINE CNTR type i size 3;
        //DEFINE cntry type i size 3;
        //DEFINE i type i size 3;
        cntry= 0;
        //DEFINE arrayProsla type n size 14 array 12;
        //DEFINE arrayTrenutna type n size 14 array 12;
        DEFINE sales_ar type n size 14 array 12;
        //MessageBox("Koliko: "+Size(queryResult));

        for(i = 1; i < 13; i++)
        {
            if(i >= Size(queryResult))
            {
                arrayProsla.add(0);
                sales_ar.add(0);
                continue;
            }
            else
            {
                arrayProsla.add(math.round(queryResult[i][1]/1000,0));
                sales_ar.add(queryResult[i][1]);
                if ( do_mjeseca == true )
                {
                    if(i <= int(mjesec_h))
                    {
                        //MessageBox("as " + i);
                        //MessageBox("aaaa " +queryResult[i][1]);
                        tot_lani = tot_lani + queryResult[i][1] ;
                    }
                }
                else
                {
                    if(i == int(mjesec_h))
                    {
                        //MessageBox("BBBB " +queryResult[i][1]);
                        tot_lani =  queryResult[i][1] ;
                    }
                }
            }
        }
        //
        for(i = 13; i < 25; i++)
        {

            cntry++;

            if(i >= Size(queryResult))
            {
                arrayTrenutna.add(0);
                sales_ar.add(0);
                continue;
            }
            else
            {
                arrayTrenutna.add(math.round(queryResult[i][1]/1000,0));
                sales_ar.add(queryResult[i][1]);
   
                //tot_ovagod = tot_ovagod + queryResult[i][1] ;
                if ( do_mjeseca == true )
                {
                    if(cntry<= int(mjesec_h))
                    {
                        tot_ovagod = tot_ovagod + queryResult[i][1];
                        //MessageBox(tot_ovagod);
                    }
                }
                else
                {
                    if(cntry == int(mjesec_h))
                    {
                        tot_ovagod =  queryResult[i][1] ;
                    }
                }
                mjesec_h0X = mjesec_h.length == 1 ? "0" + mjesec_h : mjesec_h;
                proslimjesec = string(int(mjesec_h) - 1); // 1
                proslimjesec0X = proslimjesec.length == 1 ? "0" + proslimjesec : proslimjesec;
                if (ovagod_h + mjesec_h0X == queryResult[i][0])
                {
                    //Ovaj mjesec
                    tot_ovajmj= tot_ovajmj + queryResult[i][1];
                    //MessageBox(tot_ovajmj);
                }
                elif (ovagod_h + proslimjesec0X == queryResult[i][0])
                {
                    tot_proslimj= tot_proslimj + queryResult[i][1];
                }
            }
        }
    }
