function wxbibab_onDisplay()
{
	cursor("wait");

	refreshPie = false;
    comboItems = {"Gradovi","Regije", "Dr≈æave"};
    AddWidgetData(cbPieChart, comboItems);
    pieChartStr= "Gradovi";

	AsyncCall("setRegionPieChart", "regionPieChartDone");
		
	refreshPie = true;
}

function cbPieChart@SelectionChanged(){
	if (refreshPie == false)
	{
		return;
	}

	cursor("wait");
	AsyncCall("setRegionPieChart", "setDefaultCursor");
}

function regionPieChartDone(){
	AsyncCall("setKategPieChart", "kategPieChartDone");
}
function kategPieChartDone(){
	AsyncCall("setTop10Products", "top10ProductsDone");
}
function top10ProductsDone(){
	AsyncCall("setCustomerDataGrid", "setDefaultCursor");
}
function setDefaultCursor(){
	cursor("dflt");
}

/*
function drzaveRB@clicked()
{
	cursor("wait");
	regijeRB= false;
	gradoviRB= false;
	AsyncCall("setRegionPieChart", "setDefaultCursor");
	//setRegionPieChart();
}
function regijeRB@clicked()
{
	drzaveRB= false;
	gradoviRB= false;
	cursor("wait");
	AsyncCall("setRegionPieChart", "setDefaultCursor");
	//setRegionPieChart();
}

function gradoviRB@clicked()
{
	regijeRB= false;
	drzaveRB= false;
	cursor("wait");
	AsyncCall("setRegionPieChart", "setDefaultCursor");
	//setRegionPieChart();
}
*/

function setRegionPieChart(){
	//	MessageBox( pieChartStr);
	if (pieChartStr == "Gradovi"); //(gradoviRB)
    {
		sql_str = "SELECT CASE WHEN Num <= 5 THEN grad ELSE 'Ostali' END AS CountryID , round(sum(suma2),0) as Origin";	
		sql_str += " FROM (";	
		sql_str += " SELECT grad, SUM(suma) as suma2, ROW_NUMBER() OVER( ORDER BY SUM(suma) DESC ) As Num FROM (";	
		sql_str += " SELECT nksc_city as grad,";	
		if (neto_dn)
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_amt ELSE nkpr_ln_amt END) AS Suma";		
		}	
        elif (razlikaUCijeniField)
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz ELSE nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz END) AS Suma";
		}	
        elif (tezina_dn)
		{
			sql_str += " sum(nkpr_ln_tezinan) AS Suma";
		}	
        elif (mx3_dn)
		{
			sql_str += " sum(nkpr_ln_metx3) AS Suma";
		}	
        elif (mx2_dn)
		{
			sql_str += " sum(nkpr_ln_metx2) AS Suma";
		}	
        elif (met_dn)
		{
			sql_str += " sum(nkpr_ln_met) AS Suma";
		}	
        elif (kom_dn)
		{
			sql_str += " sum(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END) AS Suma";
		}	
        else
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_pext ELSE nkpr_ln_pext END) AS Suma";
		}

        sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nknaglrn AS U";
		sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = nksc_partcode";
        sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nknalnrn ON nkpr_gl_num = nkpr_ln_invnm";
        sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON arti_artikl = nkpr_ln_pcode";
        sql_str += " WHERE nkpr_gl_cuscod <> '" + vlFirma + "' AND YEAR(nkpr_gl_datem) = " + ovagod_h;
        if (do_mjeseca  )
		{
            sql_str += " AND Month(nkpr_gl_datem) <= " + mjesec_h;
		}	
        else
		{
            sql_str += " AND Month(nkpr_gl_datem) = " + mjesec_h;
		}	
        filterPart();
        sql_str += " GROUP BY nksc_city";

        sql_str += " UNION ALL";

        sql_str += " SELECT nksc_city as grad,";
		if (neto_dn)
		{
			sql_str += " SUM(kpsp_gl_total - kpsp_gl_porez) AS Suma";
		}
		elif (bruto_dn)
		{
			sql_str += " SUM(kpsp_gl_total) AS Suma";
		}
		else{
			sql_str += " 0 AS Suma";
		}

		sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpsoglrn AS U";
		sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON kpsp_gl_partner = nksc_partcode";

        sql_str += " WHERE kpsp_gl_partner <> '" + vlFirma + "' AND YEAR(kpsp_gl_datem) = " + ovagod_h;
        if (do_mjeseca  )
		{
            sql_str += " AND Month(kpsp_gl_datem) <= " + mjesec_h;
		}	
        else
		{
            sql_str += " AND Month(kpsp_gl_datem) = " + mjesec_h;
		}	
        filterPartKontiranje();

        sql_str += " GROUP BY nksc_city";

        sql_str += " ) t";
        sql_str += " GROUP by grad";
        sql_str += " ) u";
    
	    sql_str += " GROUP BY CASE WHEN num <= 5 THEN grad ELSE 'Ostali' END";
        sql_str += " ORDER BY origin desc";
    }
    elif (pieChartStr== "Regije"); //(regijeRB)
    {
		sql_str = "SELECT CASE WHEN Num <= 5 THEN grad ELSE 'Ostali' END AS CountryID , round(sum(suma2),0) as Origin";	
		sql_str += " FROM (";	
		sql_str += " SELECT grad, SUM(suma) as suma2, ROW_NUMBER() OVER( ORDER BY SUM(suma) DESC ) As Num FROM (";	
		sql_str += " SELECT isnull(ksdu_sf_opis1, 'Nedefinirano') as grad,";	
		if (neto_dn)
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_amt ELSE nkpr_ln_amt END) AS Suma";		
		}	
        elif (razlikaUCijeniField)
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz ELSE nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz END) AS Suma";
		}	
        elif (tezina_dn)
		{
			sql_str += " sum(nkpr_ln_tezinan) AS Suma";
		}	
        elif (mx3_dn)
		{
			sql_str += " sum(nkpr_ln_metx3) AS Suma";
		}	
        elif (mx2_dn)
		{
			sql_str += " sum(nkpr_ln_metx2) AS Suma";
		}	
        elif (met_dn)
		{
			sql_str += " sum(nkpr_ln_met) AS Suma";
		}	
        elif (kom_dn)
		{
			sql_str += " sum(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END) AS Suma";
		}	
        else
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_pext ELSE nkpr_ln_pext END) AS Suma";
		}

        sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nknaglrn AS U";
		sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = nksc_partcode";
        sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nknalnrn ON nkpr_gl_num = nkpr_ln_invnm";
        sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON arti_artikl = nkpr_ln_pcode";
        sql_str += " LEFT JOIN " + CommonDBGet() + ".dbo.kpsysifa ON NKSC_REGIJA = ksdu_sf_code AND ksdu_sf_tip = 'V'";
        sql_str += " WHERE nkpr_gl_cuscod <> '" + vlFirma + "' AND YEAR(nkpr_gl_datem) = " + ovagod_h;
        if (do_mjeseca  )
		{
            sql_str += " AND Month(nkpr_gl_datem) <= " + mjesec_h;
		}	
        else
		{
            sql_str += " AND Month(nkpr_gl_datem) = " + mjesec_h;
		}	
        filterPart();
        sql_str += " GROUP BY ksdu_sf_opis1";

        sql_str += " UNION ALL";

        sql_str += " SELECT isnull(ksdu_sf_opis1, 'Nedefinirano') as grad,";
		if (neto_dn)
		{
			sql_str += " SUM(kpsp_gl_total - kpsp_gl_porez) AS Suma";
		}
		elif (bruto_dn)
		{
			sql_str += " SUM(kpsp_gl_total) AS Suma";
		}
		else{
			sql_str += " 0 AS Suma";
		}

		sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpsoglrn AS U";
		sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON kpsp_gl_partner = nksc_partcode";
		sql_str += " LEFT JOIN " + CommonDBGet() + ".dbo.kpsysifa ON NKSC_REGIJA = ksdu_sf_code AND ksdu_sf_tip = 'V'";

        sql_str += " WHERE kpsp_gl_partner <> '" + vlFirma + "' AND YEAR(kpsp_gl_datem) = " + ovagod_h;
        if (do_mjeseca  )
		{
            sql_str += " AND Month(kpsp_gl_datem) <= " + mjesec_h;
		}	
        else
		{
            sql_str += " AND Month(kpsp_gl_datem) = " + mjesec_h;
		}	
        filterPartKontiranje();

        sql_str += " GROUP BY ksdu_sf_opis1";

        sql_str += " ) t";
        sql_str += " GROUP by grad";
        sql_str += " ) u";
    
	    sql_str += " GROUP BY CASE WHEN num <= 5 THEN grad ELSE 'Ostali' END";
        sql_str += " ORDER BY origin desc";
    }
    else 
    {
		//drzave
        sql_str = "SELECT CASE WHEN Num <= 5 THEN grad ELSE 'Ostali' END AS CountryID , round(sum(suma2),0) as Origin";	
		sql_str += " FROM (";	
		sql_str += " SELECT grad, SUM(suma) as suma2, ROW_NUMBER() OVER( ORDER BY SUM(suma) DESC ) As Num FROM (";	
		sql_str += " SELECT isnull(ksdu_sf_opis1, 'Nedefinirano') as grad,";	
		if (neto_dn)
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_amt ELSE nkpr_ln_amt END) AS Suma";		
		}	
        elif (razlikaUCijeniField)
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz ELSE nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz END) AS Suma";
		}	
        elif (tezina_dn)
		{
			sql_str += " sum(nkpr_ln_tezinan) AS Suma";
		}	
        elif (mx3_dn)
		{
			sql_str += " sum(nkpr_ln_metx3) AS Suma";
		}	
        elif (mx2_dn)
		{
			sql_str += " sum(nkpr_ln_metx2) AS Suma";
		}	
        elif (met_dn)
		{
			sql_str += " sum(nkpr_ln_met) AS Suma";
		}	
        elif (kom_dn)
		{
			sql_str += " sum(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END) AS Suma";
		}	
        else
		{
			sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_pext ELSE nkpr_ln_pext END) AS Suma";
		}

        sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nknaglrn AS U";
		sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = nksc_partcode";
        sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nknalnrn ON nkpr_gl_num = nkpr_ln_invnm";
        sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON arti_artikl = nkpr_ln_pcode";
        sql_str += " LEFT JOIN " + CommonDBGet() + ".dbo.kpsysifa ON CASE WHEN nkpr_gl_drzava = '' THEN nkpr_gl_cusst ELSE nkpr_gl_drzava END = ksdu_sf_code AND ksdu_sf_tip = 'H'";

        sql_str += " WHERE nkpr_gl_cuscod <> '" + vlFirma + "' AND YEAR(nkpr_gl_datem) = " + ovagod_h;
        if (do_mjeseca  )
		{
            sql_str += " AND Month(nkpr_gl_datem) <= " + mjesec_h;
		}	
        else
		{
            sql_str += " AND Month(nkpr_gl_datem) = " + mjesec_h;
		}	
        filterPart();
        sql_str += " GROUP BY ksdu_sf_opis1";

        sql_str += " UNION ALL";

        sql_str += " SELECT isnull(ksdu_sf_opis1, 'Nedefinirano') as grad,";
		if (neto_dn)
		{
			sql_str += " SUM(kpsp_gl_total - kpsp_gl_porez) AS Suma";
		}
		elif (bruto_dn)
		{
			sql_str += " SUM(kpsp_gl_total) AS Suma";
		}
		else{
			sql_str += " 0 AS Suma";
		}

		sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpsoglrn AS U";
		sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON kpsp_gl_partner = nksc_partcode";
		sql_str += " LEFT JOIN " + CommonDBGet() + ".dbo.kpsysifa ON nksc_drzava = ksdu_sf_code AND ksdu_sf_tip = 'H'";

        sql_str += " WHERE kpsp_gl_partner <> '" + vlFirma + "' AND YEAR(kpsp_gl_datem) = " + ovagod_h;
        if (do_mjeseca  )
		{
            sql_str += " AND Month(kpsp_gl_datem) <= " + mjesec_h;
		}	
        else
		{
            sql_str += " AND Month(kpsp_gl_datem) = " + mjesec_h;
		}	
        filterPartKontiranje();

        sql_str += " GROUP BY ksdu_sf_opis1";

        sql_str += " ) t";
        sql_str += " GROUP by grad";
        sql_str += " ) u";
    
	    sql_str += " GROUP BY CASE WHEN num <= 5 THEN grad ELSE 'Ostali' END";
        sql_str += " ORDER BY origin desc";
	}
	
	//SaveFile(sql_str);
	
	try	{
		queryResult = sqlquery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}
    
	RunOnMain("setPieChart");
}

function setPieChart(){
	PieChart("PieChart1", "init");
    PieChart("PieChart1", "seriesType", "pie");
    PieChart("PieChart1", "title", "Pie Chart Title", 20);    
	for(i = 1; i < queryResult.length; i++)
	{
		PieChart("PieChart1", "values", int(queryResult[i][1]) , substring(string(queryResult[i][0].trim()), 0, 30), 30);
	}
}

//-------------------------------------------------------

function setKategPieChart(){
	//	MessageBox( pieChartStr);
	sql_str = "";
	sql_str += " SELECT CASE WHEN Num <= 5 THEN naziv ELSE 'Ostali' END AS CountryID , round(sum(suma2),0) as Origin";
	sql_str += " FROM (";
	sql_str += " SELECT naziv, SUM(suma) as suma2, ROW_NUMBER() OVER( ORDER BY SUM(suma) DESC ) As Num";
	sql_str += " FROM (";
	sql_str += " SELECT ISNULL(CASE WHEN SUBSTRING(mkgr_rezerva, 1, 50) <> '' THEN SUBSTRING(mkgr_rezerva, 1, 50) ELSE mkgr_naziv END, 'NEDEFINIRANO') as naziv,";
	if (neto_dn)
	{
		sql_str += " sum(CASE WHEN nkpr_gl_dviza = 'D' THEN nkpr_gl_tecaj * nkpr_ln_amt ELSE nkpr_ln_amt END) AS Suma";
	}	
	elif (razlikaUCijeniField  )
	{
		sql_str += " sum(CASE WHEN nkpr_gl_dviza = 'D' THEN nkpr_gl_tecaj * nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz ELSE nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz END) AS Suma";
	}	
	elif (tezina_dn  )
	{
		sql_str += " sum(nkpr_ln_tezinan) AS Suma";
	}	
	elif (mx3_dn  )
	{
		sql_str += " sum(nkpr_ln_metx3) AS Suma";
	}	
	elif (mx2_dn  )
	{
		sql_str += " sum(nkpr_ln_metx2) AS Suma";
	}	
	elif (met_dn  )
	{
		sql_str += " sum(nkpr_ln_met) AS Suma";
	}	
	elif (kom_dn  )
	{
		sql_str += " sum(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END) AS Suma";
	}	
	else
	{
		sql_str += " sum(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_ln_pext ELSE nkpr_ln_pext END) AS Suma";
	}

	sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nknaglrn AS U";
	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nknalnrn ON nkpr_gl_num = nkpr_ln_invnm";
	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON arti_artikl = nkpr_ln_pcode";
	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.pkmkgrup ON arti_kategorija = mkgr_grupa AND mkgr_vrsta= 'K'";
	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = nksc_partcode";
	
	sql_str += " WHERE nkpr_gl_cuscod <> '" + vlFirma + "' AND YEAR(nkpr_gl_datem) = " + ovagod_h;
	if (do_mjeseca  )
	{
		sql_str += " AND Month(nkpr_gl_datem) <=" + mjesec_h;
	}	
	else
	{
		sql_str += " AND Month(nkpr_gl_datem) =" + mjesec_h;
	}	
	filterPart();
	
	sql_str += " GROUP BY CASE WHEN SUBSTRING(mkgr_rezerva, 1, 50) <> '' THEN SUBSTRING(mkgr_rezerva, 1, 50) ELSE mkgr_naziv END";
	
	sql_str += " UNION ALL";

	sql_str += " SELECT 'Usluga' as naziv,";
	if (neto_dn)
	{
		sql_str += " SUM(kpsp_gl_total - kpsp_gl_porez) AS Suma";
	}
	elif (bruto_dn)
	{
		sql_str += " SUM(kpsp_gl_total) AS Suma";
	}
	else{
		sql_str += " 0 AS Suma";
	}
	
	sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpsoglrn AS U";
	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart ON kpsp_gl_partner = nksc_partcode";

	sql_str += " WHERE kpsp_gl_partner <> '" + vlFirma + "' AND YEAR(kpsp_gl_datem) = " + ovagod_h;
	if (do_mjeseca  )
	{
		sql_str += " AND Month(kpsp_gl_datem) <=" + mjesec_h;
	}	
	else
	{
		sql_str += " AND Month(kpsp_gl_datem) =" + mjesec_h;
	}	
	filterPartKontiranje();

	sql_str += " ) t GROUP by naziv ) u";
	
	sql_str += " GROUP BY CASE WHEN num <= 5 THEN naziv ELSE 'Ostali' END";
	sql_str += " ORDER BY origin desc";

	//SaveFile(sql_str);
	
	try	{
		queryResult = sqlquery(sql_str);
	}
	catch(exc){
		MessageBox(exc);
	}

	RunOnMain("DisplayKategPieChart");
}

function DisplayKategPieChart(){
	PieChart("PieChartKat", "init");
    PieChart("PieChartKat", "seriesType", "pie");

	for(i = 1; i < queryResult.length; i++)
	{
		PieChart("PieChartKat", "values", int(queryResult[i][1]) , substring(string(queryResult[i][0].trim()), 0, 30), 30);
	}

	PieChart("PieChartKAt", "colors", { "#1C4E80", "#EA6A47", "#5acc6b", "#34d2fa", "#ff45d4", "#fae62f" });
}

//-------------------------------------------------------

function setTop10Products()
{
	SQL_str ="SET query_governor_cost_limit 0;";
    sql_str += "WITH sales AS (";
    sql_str += " SELECT arti_artikl as codeart, arti_naziv as Nameart, Sales1=";
    if (neto_dn)
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza = 'D' THEN nkpr_gl_tecaj * nkpr_ln_amt ELSE nkpr_ln_amt END), 0), 0)";
	}
    elif (razlikaUCijeniField)
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza = 'D' THEN nkpr_gl_tecaj * (nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz) ELSE nkpr_ln_amt - nkpr_ln_cenan * nkpr_ln_qtyz END), 0), 0)";
	}
    elif (tezina_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_tezinan), 0), 0)";
	}	
    elif (mx3_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx3), 0), 0)";
	}	
    elif (mx2_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx2), 0), 0)";
	}	
    elif (met_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_met), 0), 0)";
	}	
    elif (kom_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END), 0), 0)";
	}	
    else
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza = 'D' THEN nkpr_gl_tecaj * nkpr_ln_pext ELSE nkpr_ln_pext END), 0), 0)";
	}
    sql_str += " FROM "+trenutnaGodinaBaza+".dbo.nknaglrn";
    if (regija!= "")
	{
        sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nkscpart g ON nkpr_gl_cuscod = g.nksc_partcode";
    }
    sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nknalnrn ON nkpr_gl_num = nkpr_ln_invnm";
    sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nkmkarti ON nkpr_ln_pcode = arti_artikl";
    sql_str += " WHERE nkpr_gl_cuscod <> '" + vlFirma + "'";
    if (mjesec_h!= "")
	{
        if (do_mjeseca )
		{
            sql_str += " AND month(nkpr_gl_datem) <= " + mjesec_h;
            sql_str += " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
		}	
        else
		{
            sql_str += " AND month(nkpr_gl_datem) = " + mjesec_h;
            sql_str += " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
        }
    }

    filterPart();

    sql_str += " GROUP BY arti_artikl, arti_naziv)";
    // if (GL_oznaka == "X" || GL_oznaka == "O" || GL_oznaka == "R" ) //ako je to storno, odobrenje ili reklamacija neka okrene
	// {
    //     sql_str += " ORDER BY sales1 asc)";
	// }	
    // else
	// {
    //     sql_str += " ORDER BY sales1 desc)";
    // }
    sql_str += " SELECT TOP 10 codeart, Nameart, sales1, 0";
    sql_str += " FROM sales";
    sql_str += " WHERE Sales1 > 0 ";

    //sql_str += " ORDER BY salesNew desc"
    if (GL_oznaka == "X" || GL_oznaka == "O" || GL_oznaka == "R" )
	{
		 //ako je to storno, odobrenje ili reklamacija neka okrene
        sql_str += " ORDER BY sales1 asc";
	}	
    else
	{
        sql_str += " ORDER BY sales1 desc";
	}
	
	//SaveFile(sql_str);
	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	size = Size(sqlResult) - 1;

	RunOnMain("fillProductsArrays");

    if (proslaGodinaBaza != "")
	{
		// cntr2= 0;
		//sql_str= "";
		sql_str= " SELECT arti_artikl,";
		if (neto_dn)
		{
			sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj * nkpr_ln_amt ELSE nkpr_ln_amt END),0), 0) as sales2";
		}
		elif (razlikaUCijeniField)
		{
			sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj * (nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz) ELSE nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz END),0), 0) as sales2";
		}
		elif (tezina_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(nkpr_ln_tezinan),0), 0) as sales2";
		}
		elif (mx3_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx3),0), 0) as sales2";
		}
		elif (mx2_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx2),0), 0) as sales2";
		}
		elif (met_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(nkpr_ln_met),0), 0) as sales2";
		}
		elif (kom_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END),0), 0) as sales2";
		}
		else
		{
			sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_pext ELSE nkpr_ln_pext END),0), 0) as sales2";
		}

		sql_str += " FROM "+proslaGodinaBaza+".dbo.nknaglrn";
		sql_str += " LEFT JOIN "+proslaGodinaBaza+".dbo.nknalnrn ON nkpr_gl_num= nkpr_ln_invnm";
		if (regija != "")
		{
			sql_str += " LEFT JOIN "+proslaGodinaBaza+".dbo.nkscpart g ON nkpr_gl_cuscod= g.nksc_partcode";
		}
		sql_str += " LEFT JOIN "+proslaGodinaBaza+".dbo.nkmkarti ON nkpr_ln_pcode= arti_artikl";
		sql_str += " WHERE nkpr_gl_cuscod <> '" + vlFirma + "' AND nkpr_ln_pcode IN ("+in_string+") ";
		if (mjesec_h != "")
		{
			if (do_mjeseca )
			{
				sql_str += " AND month(nkpr_gl_datem)<= "+mjesec_h;
				sql_str += " AND YEAR(nkpr_gl_datem)= "+lani_h;
			}
			else
			{
				sql_str += " AND month(nkpr_gl_datem)= "+mjesec_h;
				sql_str += " AND YEAR(nkpr_gl_datem)= "+lani_h;
			}
		}
		filterPart();
		sql_str += " GROUP BY arti_artikl";
		sql_str += " ORDER BY arti_artikl";
		//SaveFile(sql_str);
		try	{
			sqlResult = sqlQuery(sql_str);
		}catch(exc){
			MessageBox(exc);
		}
	
		RunOnMain("fillProductsArrays2");
    }

	RunOnMain("top10Products");
}

function fillProductsArrays(){
	for ( i = 0; i < 10; i++ )
	{
		IndexArt_ar[i] =  0;
		nameart_ar[i] =  "";
		codeart_ar[i] =  "";
		salesart1_ar[i] =  0; 
		salesart2_ar[i] =  0; 
		top10art_ar[i] =  0;
		imageArt_ar[i] = "";
	}	  
	
	if(Size(sqlResult) > 1)
	{
		for ( i = 1; i < Size(sqlResult); i++ )
		{        
			nameart_ar[i - 1] =  sqlResult[i][1]; //namepart;
			codeart_ar[i - 1] =  sqlResult[i][0]; //codepart;
			salesart1_ar[i - 1] =  sqlResult[i][2]; //sales1;
			salesart2_ar[i - 1] =  0; //sqlResult[i][2]; sales2;
			top10art_ar[i - 1] =  i;
		} 
	}


	in_string= "";
	for (cntr = 0; cntr < Size(codeart_ar); cntr++ )
	{
        in_string = in_string + "'" + codeart_ar[cntr];
		if(cntr == Size(codeart_ar)-1)
		{
			in_string= in_string+"'";
		}
		else
		{
			in_string= in_string+"',";
		}
    }
}

function fillProductsArrays2(){
	if(Size(sqlResult) > 1)
	{
		for ( i = 1; i < Size(sqlResult); i++ )
		{    
			cntr2= find_index(codeart_ar, sqlResult[i][0]);    
			if (cntr2 >= 0)  //if not -1
			{
				salesart2_ar[cntr2] =  sqlResult[i][1]; 
				if(salesart2_ar[cntr2] != 0)
				{
					Indexart_ar[cntr2] = Math.Round(((salesart1_ar[cntr2] - salesart2_ar[cntr2])/salesart2_ar[cntr2]) * 100.00, 0);
				}
				else
				{
					IndexArt_ar[cntr2] =  0;
				}
			} 
			else
			{
				IndexArt_ar[cntr2] =  0;
			}
		}

		for(i = 0; i < Size(salesArt1_ar); i++){
			if(salesart1_ar[i] > salesart2_ar[i]){
				imageArt_ar[i] = strtrim(ipath()) + "greenArrow64.png";
			}elif(salesart1_ar[i] < salesart2_ar[i]){
				imageArt_ar[i] = strtrim(ipath()) + "redArrow64.png";
			}else{
				imageArt_ar[i] = "";
			}
		}
	}
}

function top10Products(){
	DisplayArray("dgArtikli", "close");
	Format("SALESART2_AR", "nofd");
	Format("SALESART1_AR", "nofd");
	
	DisplayArraySetup("dgArtikli", counterFld: "cntr4", activeElements: size, maxElements: 10);
}

//---------------------------------------------------------------------------

function setCustomerDataGrid()
{
    SQL_str ="SET query_governor_cost_limit 0;";
    sql_str += " WITH sales AS (";
    sql_str += " SELECT nkpr_gl_cuscod as CodePart,";
    if (neto_dn )
	{
        sql_str += " SalesNew = ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_amt ELSE nkpr_ln_amt END),0), 0)";
	}
    elif (razlikaUCijeniField)
	{
        sql_str += " SalesNew = ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*(nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz) ELSE nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz END), 0), 0)";
	}
    elif (tezina_dn )
	{
        sql_str += " SalesNew = ISNULL(ROUND(SUM(nkpr_ln_tezinan), 0), 0)";
	}	
    elif (mx3_dn )
	{
        sql_str += " SalesNew = ISNULL(ROUND(SUM(nkpr_ln_metx3), 0), 0)";
	}	
    elif (mx2_dn )
	{
        sql_str += " SalesNew = ISNULL(ROUND(SUM(nkpr_ln_metx2), 0), 0)";
	}	
    elif (met_dn )
	{
        sql_str += " SalesNew = ISNULL(ROUND(SUM(nkpr_ln_met), 0), 0)";
	}	
    elif (kom_dn )
	{
        sql_str += " SalesNew = ISNULL(ROUND(SUM(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END), 0), 0)";
	}	
    else
	{
        sql_str += " SalesNew = ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_pext ELSE nkpr_ln_pext END), 0), 0)";
	}
    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nknaglrn";
    if (regija!= "")
	{
        sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nkscpart g ON nkpr_gl_cuscod= g.nksc_partcode";
    }
    sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nknalnrn ON nkpr_gl_num= nkpr_ln_invnm";
    sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nkmkarti ON nkpr_ln_pcode= arti_artikl";
    
	sql_str += " WHERE nkpr_gl_cuscod <> '" + vlFirma + "'";
    if (mjesec_h!= "")
	{
        if (do_mjeseca )
		{
            sql_str += " AND month(nkpr_gl_datem) <= " + mjesec_h;
            sql_str += " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
		}	
        else
		{
            sql_str += " AND month(nkpr_gl_datem) = " + mjesec_h;
            sql_str += " AND YEAR(nkpr_gl_datem) = " + ovagod_h;
        }
    }
    filterPart();

    sql_str += " GROUP BY nkpr_gl_cusnme, nkpr_gl_cuscod";
    
	sql_str += " UNION ALL";
	
	sql_str += " SELECT kpsp_gl_partner as CodePart,";
	if (neto_dn)
	{
		sql_str += " SalesNew = ISNULL(ROUND(SUM(kpsp_gl_total - kpsp_gl_porez), 0), 0)";
	}
	elif (bruto_dn)
	{
		sql_str += " SalesNew = ISNULL(ROUND(SUM(kpsp_gl_total), 0), 0)";
	}
	else{
		sql_str += " SalesNew = 0";
	}

	sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpsoglrn AS U";
	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart ON kpsp_gl_partner = nksc_partcode";

	sql_str += " WHERE kpsp_gl_partner <> '" + vlFirma + "' AND YEAR(kpsp_gl_datem) = " + ovagod_h;
	if (do_mjeseca  )
	{
		sql_str += " AND Month(kpsp_gl_datem) <=" + mjesec_h;
	}	
	else
	{
		sql_str += " AND Month(kpsp_gl_datem) =" + mjesec_h;
	}	
	filterPartKontiranje();

	sql_str += " GROUP BY kpsp_gl_partner";
	
	sql_str += " ) SELECT TOP 10";
	sql_str += " codePart, ";
	sql_str += " (SELECT nksc_partname FROM nkscpart WHERE nksc_partcode = codePart) as NamePart,";
	sql_str += " SUM(salesNew), 0";
	sql_str += " FROM sales GROUP BY codePart";
	sql_str += " ORDER BY SUM(salesNew)";
	if (GL_oznaka == "X" || GL_oznaka == "O" || GL_oznaka == "R" ) //ako je to storno, odobrenje ili reklamacija neka okrene
	{
        sql_str += " asc";
	}	
    else
	{
        sql_str += " desc";
    }

	//SaveFile(sql_str);

	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	size = Size(sqlResult) - 1;

	//SaveFile(sql_str);
	RunOnMain("fillCustomerArrays");

    if (proslaGodinaBaza != "")
	{
		RunOnMain("setCntr2");

		//sql_str= "";
		
		sql_str = " WITH cte AS(";
		sql_str + = " SELECT nkpr_gl_cuscod as partCode,";
		if (neto_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_amt ELSE nkpr_ln_amt END),0), 0) as sales2";
		}
		elif (razlikaUCijeniField)
		{
			sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*(nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz) ELSE nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz END),0), 0) as sales2";
		}
		elif (tezina_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(nkpr_ln_tezinan),0), 0) as sales2";
		}
		elif (mx3_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx3),0), 0) as sales2";
		}
		elif (mx2_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx2),0), 0) as sales2";
		}
		elif (met_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(nkpr_ln_met),0), 0) as sales2";
		}
		elif (kom_dn )
		{
			sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END),0), 0) as sales2";
		}
		else
		{
			sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_pext ELSE nkpr_ln_pext END),0), 0) as sales2";
		}

		sql_str += " FROM " + proslaGodinaBaza + ".dbo.nknaglrn";
		sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nknalnrn ON nkpr_gl_num = nkpr_ln_invnm";
		if (regija != "")
		{
			sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod = g.nksc_partcode";
		}
		sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkmkarti ON nkpr_ln_pcode = arti_artikl";
		
		sql_str += " WHERE nkpr_gl_cuscod <> '" + vlFirma + "' AND nkpr_gl_cuscod IN (" + in_string + ") ";
		if (mjesec_h != "")
		{
			if (do_mjeseca)
			{
				sql_str += " AND month(nkpr_gl_datem) <= "+mjesec_h;
				sql_str += " AND YEAR(nkpr_gl_datem) = "+lani_h;
			}
			else
			{
				sql_str += " AND month(nkpr_gl_datem) = "+mjesec_h;
				sql_str += " AND YEAR(nkpr_gl_datem) = "+lani_h;
			}
		}

		filterPart();
		sql_str += " GROUP BY NKPR_GL_CUSCOD";
		
		sql_str += " UNION ALL";

		sql_str += " SELECT kpsp_gl_partner as partCode, ";
		if (neto_dn)
		{
			sql_str += " ISNULL(ROUND(SUM(kpsp_gl_total - kpsp_gl_porez), 0), 0) as sales2";
		}
		elif (bruto_dn)
		{
			sql_str += " ISNULL(ROUND(SUM(kpsp_gl_total), 0), 0) as sales2";
		}
		else{
			sql_str += " 0 as sales2";
		}
		
		sql_str += " FROM " + proslaGodinaBaza + ".dbo.kpsoglrn AS U";
		sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart ON kpsp_gl_partner = nksc_partcode";

		sql_str += " WHERE kpsp_gl_partner <> '" + vlFirma + "' AND kpsp_gl_partner IN (" + in_string + ") AND YEAR(kpsp_gl_datem) = " + lani_h;
		if (do_mjeseca  )
		{
			sql_str += " AND Month(kpsp_gl_datem) <=" + mjesec_h;
		}	
		else
		{
			sql_str += " AND Month(kpsp_gl_datem) =" + mjesec_h;
		}	
		filterPartKontiranje();
		
		sql_str += " GROUP BY kpsp_gl_partner";
		sql_str += " )SELECT partCode, SUM(sales2) from cte group by partCode";
		

		//SaveFile(sql_str);

		try	{
			sqlResult = sqlQuery(sql_str);
		}catch(exc){
			MessageBox(exc);
		}
		
		RunOnMain("fillCustomerArrays2");
    }
	RunOnMain("customerDataGrid");
}

function fillCustomerArrays(){
	for ( i = 0; i < 10; i++ )
	{
		namePart_ar[i] =  "";
		codePart_ar[i] =  "";
		salesPart1_ar[i] =  0;
		salesPart2_ar[i] =  0;
		top10Part_ar[i] =  0;
		IndexPart_ar[i] =  0;
		imagePart_ar[i] = "";
	}	 

	if(Size(sqlResult) > 1)
	{
		for ( i = 1; i < Size(sqlResult); i++ )
		{        
			namePart_ar[i - 1] =  sqlResult[i][1]; //namepart;
			codePart_ar[i - 1] =  sqlResult[i][0]; //codepart;
			salesPart1_ar[i - 1] =  sqlResult[i][2]; //sales1;
			salesPart2_ar[i - 1] =  0; //sqlResult[i][2]; sales2;
			top10Part_ar[i - 1] =  i;
		} 
	}

	in_string= "";
	for (cntr = 0; cntr < Size(codePart_ar); cntr++ )
	{
        in_string= in_string+"'"+codePart_ar[cntr];
		if(cntr==Size(codePart_ar)-1)
		{
			in_string= in_string+"'";
		}
		else
		{
			in_string= in_string+"',";
		}
    }
}

function setCntr2(){
	cntr2= 0;
}

function fillCustomerArrays2(){   
	if(Size(sqlResult) > 1)
	{
		for ( i = 1; i < Size(sqlResult); i++ )
		{    
			cntr2= find_index(codepart_ar,sqlResult[i][0]);    
			if (cntr2 >= 0)  //if not -1
			{
				salesPart2_ar[cntr2] =  sqlResult[i][1]; 
				if(salesPart2_ar[cntr2] != 0)
				{
					IndexPart_ar[cntr2] =  Math.Round(((salesPart1_ar[cntr2] - salesPart2_ar[cntr2])/salesPart2_ar[cntr2]) * 100, 0);
				}
				else
				{
					IndexPart_ar[cntr2] =  0;
				}
			} 
			else
			{
				IndexPart_ar[cntr2] =  0;
			}
		}

		for(i = 0; i < Size(salesPart1_ar); i++){
			if(salesPart1_ar[i] > salesPart2_ar[i]){
				imagePart_ar[i] = strtrim(ipath()) + "greenArrow64.png";
			}elif(salesPart1_ar[i] < salesPart2_ar[i]){
				imagePart_ar[i] = strtrim(ipath()) + "redArrow64.png";
			}else{
				imagePart_ar[i] = "";
			}
		}
	}
}

function customerDataGrid(){
	DisplayArray("dgStavke", "close");
	Format("SALESPART2_AR", "nofd");
	Format("SALESPART1_AR", "nofd");
	DisplayArraySetup("dgStavke", counterFld: "cntr1", activeElements: size, maxElements: 10);
}

//-----------------------------------------------------------

