    include(strTrim(tpath()) + "F2ListLib.cscs");
    // includeScript("F2ListLib.cscs");
    
    define kategorija,klasa type a size 6 up;
    define kategNaziv,klasaNaziv,KomercNaziv type a size 50;
    define komercijalist type r size 6;
    define sveDrzave_dn,eu_dn,izvoz_dn,domaca_dn type l;
    define eucountries type a size 200;
    define usluge_dn, roba_dn, robaUsl_dn, avans_dn, povnak_dn type l;
    define rnalog type r size 8;
    define rnalogNaziv type a size 50;
    define mx3_dn,mx2_dn,met_dn,kom_dn type l;
    define neto_dn,do_mjeseca,ruc_dn,bruto_dn,tezina_dn,do_mjeseca2 type l;
    define nazivFirme type a size 50;
    DEFINE ratio type n size 10 dec 2;

    define tip_racuna type a size 30;
    define gl_oznaka type a size 1 up;
    
    DEFINE skladiste type a size 3;
    DEFINE skladisteNaziv type a size 50;

    DEFINE banka type a size 3;
    DEFINE BankaNaziv type a size 50;

    DEFINE ARTI_ARTIKL_ARR type a size 30 array 50000;
    DEFINE ARTI_NAZIV_ARR type a size 50 array 50000;
    DEFINE NKSC_PARTCODE_ARR type a size 10 array 50000;
    DEFINE NKSC_PARTNAME_ARR type a size 50 array 50000;

    DEFINE KSDU_SF_CODE_ARR type a size 6 array 5000;
    DEFINE KSDU_SF_OPIS1_ARR type a size 30 array 5000;

    DEFINE PKMK_SKL_CODE_arr type i size 3 array 300;

    DEFINE PKMK_SKL_NAZIV_arr type a size 50 array 300;
    DEFINE cntr1,cntr2,cntr3,cntr4 type i;
    define ovagod_h,lani_h,ovagod_h2 type a size 4;

    
    DEFINE tot_ovagod_mp type n size 14 dec 0 ;
    DEFINE tot_ovagod_ukupno type n size 14 dec 0 ;
    
    DEFINE postotak type n size 10 dec 2 ;
    DEFINE postotakMj type n size 10 dec 2 ;
    //define postotakTj type n size 10 dec 2 ;
    DEFINE artiklNaziv type a size 30;
    define artikl type a size 15 ;

    DEFINE tot_ovagod_priliv, tot_ovagod_odliv type n size 14 dec 0;
    DEFINE tot_lani_priliv, tot_lani_odliv type n size 14 dec 0;
    DEFINE tot_ovajmj_priliv, tot_ovajmj_odliv type n size 14 dec 0 ;
    DEFINE tot_proslimj_priliv, tot_proslimj_odliv type n size 14 dec 0 ;

    DEFINE tot_ovagod_priliv_string type a size 20;
    DEFINE tot_ovagod_priliv_mp_string type a size 20;
    DEFINE tot_ovagod_priliv_ukupno_string type a size 20;
    DEFINE tot_lani_priliv_string type a size 20;
    DEFINE tot_ovajmj_priliv_string type a size 20;
    DEFINE tot_proslimj_priliv_string type a size 20;
    DEFINE tot_ovajTj_priliv_string type a size 20;
    DEFINE tot_ProsliTj_priliv_string type a size 20;
    
    DEFINE tot_ovagod_odliv_string type a size 20;
    DEFINE tot_ovagod_odliv_mp_string type a size 20;
    DEFINE tot_ovagod_odliv_ukupno_string type a size 20;
    DEFINE tot_lani_odliv_string type a size 20;
    DEFINE tot_ovajmj_odliv_string type a size 20;
    DEFINE tot_proslimj_odliv_string type a size 20;
    DEFINE tot_ovajTj_odliv_string type a size 20;
    DEFINE tot_ProsliTj_odliv_string type a size 20;

    define stanjeOvagod, pocetnoStanjeOvagod type n size 14 dec 0;
    define tot_stanjeOvagod, tot_pocetnoStanjeOvagod type a size 20;

	define nameArt type a size 40;
	define codeArt_ar type a size 15 array 10;
    define salesArt1_ar type n size 14 dec 0 array 10;
    define salesArt2_ar type n size 14 dec 0 array 10;
    define NameArt_ar type a size 40 array 10;
    define top10Art_ar type i size 2 array 10;
    define indexArt_ar type n size 4 dec 0 array 10;
    define imageArt_ar type a size 120 array 10;
    define ArtikliCntr type i size 2;

    define namePart type a size 40;
    define salesPart1_ar type n size 14 dec 0 array 10;
    define salesPart2_ar type n size 14 dec 0 array 10;
    define NamePart_ar type a size 40 array 10;
    define CodePart_ar type a size 10 array 10;
    define top10Part_ar type i array 10;
    define indexPart_ar type n size 4 dec 0 array 10;
    define imagePart_ar type a size 120 array 10;
    define salesCntr type i;
    define sales1 type n size 16 dec 2;
    define sales2 type n size 16 dec 2;
	define sklad_str type a size 100;
	
    define BANKA_str type a size 100;
    define KONTO_str type a size 100;

    define br_kupaca_og, br_kupaca_lg type i size 5;
    define prodaja_kup_og, prodaja_kup_lg type n size 14;
    define broj_rac_og, broj_rac_lg type r size 6;
    define prod_kup_indx type n size 10 dec 2;
    DEFINE arrayProslaPriliv, arrayProslaOdliv type n size 14 array 12;
    DEFINE arrayTrenutnaPriliv, arrayTrenutnaOdliv type n size 14 array 12;

	define tot_ovajTj_priliv type n size 14;
	define tot_prosliTj_priliv type n size 14;
	define tot_ovajTj_odliv type n size 14;
	define tot_prosliTj_odliv type n size 14;
	define sales_ar type n size 14 dec 0 array 10;        
	define postotakPriliv, postotakOdliv type n size 10 dec 2;
	define postotakMjPriliv, postotakMjOdliv type n size 10 dec 2;
	define postotakTjPriliv, postotakTjOdliv type n size 10 dec 2;
	define week_c type a size 10;
	define week_p type a size 10;
	define week type i;

    DEFINE sales_month_ar type n size 14 dec 0 array 24;
    DEFINE CNTR type i size 3;
    DEFINE cntry type i size 3;
    DEFINE arrayProsla type n size 14 array 12;
    DEFINE arrayTrenutna type n size 14 array 12;

  	define t10Iznosz_ar type n size 14 dec 2 array 10;
	define t10Namez_ar type a size 30 array 10;
	define t10Cntrz_ar type i size 2 array 10;
	define t10Datumz_ar type d size 8 array 10;
	define t10Timez_ar type t size 8 array 10;
	define t10Racunz_ar type r size 8 array 10;
 	define T10Cntrz type i;
	define t10DatRac type l;

    define t10IznosMj_ar type n size 14 dec 2 array 10;
	define t10NameMj_ar type a size 30 array 10;
	define t10CntrMj_ar type i size 2 array 10;
	define t10DatumMj_ar type d size 8 array 10;
	define t10RacunMj_ar type r size 8 array 10;

    define T10CntrMj type i;
	define T10Cntrz type i;
	define t10DatRac type l;

    define mjesec_h type a size 2 ;
    define byMonthNum type i;

    define partner type a size 10 ;
    define partnerNaziv type a size 50 ;
    
    define Izvadak type a size 10 ;
    define IzvadakNaziv type a size 50 ;
    
    define Konto type a size 10 ;
    define KontoNaziv type a size 50 ;

    define regija type a size 6 ;
    define regijaNaziv type a size 30 ;

    define kategorija type a size 6 ;
    define kategorijaNaziv type a size 50 ;

    define klasa type a size 6 ;
    define klasaNaziv type a size 50 ;

    define isporuka type a size 10 ;
    define isporukaNaziv type a size 50 ;

    define komercijalist type a size 6 ;
    define komercijalistNaziv type a size 50 ;

    define rnalog type a size 8 ;
    define rnalogNaziv type a size 50 ;

    define do_mjeseca type l;

    define danas_h type d size 10;

    DEFINE razlikaUCijeniField type l;
    DEFINE tezina_dn type l;

    DEFINE searchSklSifra type i size 5;
    DEFINE searchSklNaziv type a size 50;
    DEFINE searchArtiklSifra type a size 50;
    DEFINE searchArtiklNaziv type a size 50;
    DEFINE searchPartnerSifra type a size 50;
    DEFINE searchPartnerNaziv type a size 50;
    DEFINE searchRegijaSifra type a size 50;
    DEFINE searchRegijaNaziv type a size 50;
    DEFINE searchKategorijaSifra type a size 50;
    DEFINE searchKategorijaNaziv type a size 50;
    DEFINE searchKlasaSifra type a size 50;
    DEFINE searchKlasaNaziv type a size 50;
    DEFINE searchIsporukaSifra type a size 50;
    DEFINE searchIsporukaNaziv type a size 50;
    DEFINE searchRnalogSifra type a size 50;
    DEFINE searchRnalogNaziv type a size 50;
    DEFINE searchKomercijalistSifra type a size 50;
    DEFINE searchKomercijalistNaziv type a size 50;

    DEFINE regijeRB type l;
    DEFINE drzaveRB type l;
    DEFINE gradoviRB type l;

    DEFINE nazivFirme type a size 100;

    DEFINE pripremljeno type l;
    define in_string type a size 300;
    DEFINE companyCode type a size 3 up;
    DEFINE userCode type a size 20;    
    define proslaGodinaBaza type a size 200; 

    DEFINE sqlNaDan type a size 10;  
    DEFINE sqlOdDana type a size 10;  
    DEFINE fiscal_yr type a size 10;  
    DEFINE br_kupaca_og_string, br_kupaca_lg_string type a size 50;
    DEFINE broj_rac_og_string, broj_rac_lg_string type a size 50;
    DEFINE prodaja_kup_og_string, prodaja_kup_lg_string type a size 50;
    define dan2 type i;
    define tableHndl type i;
    define pieChartStr type a size 20;
    define refreshpie type l;    
    define br_wait type r;
    define br_neazur type r;
    define br_wait_string type a size 30;
    define br_neazur_string type a size 30;
    define local type a size 1;

    define iniFilename type a size 100;

    define KONTO_posl_akt_str type a size 1000;
    define KONTO_financ_akt_str type a size 1000;
    define KONTO_invest_akt_str type a size 1000;
    
    define cbKontoPoslAkt type l;
    define cbKontoFinancAkt type l;
    define cbKontoInvestAkt type l;

    define obrtaj type n size 14 dec 2;
    define brojDanaZaNaplatu type n size 5 dec 2;
    define obrtaj_string, brojDanaZaNaplatu_string type a size 30;
    define brojProteklihDana type i size 3;
    define datum1, datum2 type d size 10;

//=============================================

// // F2 banaka
function ceBanka@clicked()
{
    
    // F2ListQueryString = "SELECT distinct kpsy_bnk_code, kpsy_bnk_ime FROM " + trenutnaGodinaBaza + ".dbo.kpsybank left join " + trenutnaGodinaBaza + ".dbo.kpkdibgl ON kdib_gl_banka = kpsy_bnk_code where kpsy_bnk_ime like '%{var2}%' AND kpsy_bnk_ime <> '' AND kpsy_bnk_code <> '' ";
    // //if(searchSklSifra != 0){
    // //    F2ListQueryString += " and PKMK_SKL_CODE = '{var1}'";
    // //}
    // F2ListQueryString += " ORDER BY kpsy_bnk_ime";
    
    F2ListQueryString = "WITH banke AS("
    + " SELECT DISTINCT kpsy_bnk_code, kpsy_bnk_ime"
    + " FROM " + trenutnaGodinaBaza + ".dbo.kpkdibgl "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.kpsybank ON kdib_gl_banka = kpsy_bnk_code"
    + " WHERE kpsy_bnk_ime LIKE '%{var2}%' AND kpsy_bnk_ime <> '' AND kpsy_bnk_code <> '' AND kpsy_bnk_blag <> 'D'"
    + " AND YEAR(kdib_gl_datem) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY kpsy_bnk_code ASC) AS RowNumber, kpsy_bnk_code, kpsy_bnk_ime"
    + " FROM banke ORDER BY RowNumber";

    banka = "";
    BankaNaziv = "";
    sifraFieldPointer -> banka;
    NazivFieldPointer -> BankaNaziv; 

    windowTitle = "F2 lista banaka";
    headersArray = {"R.br.", "Šifra banke", "Naziv banke"};
    
    ShowF2List();
    
    if(&sifraFieldPointer != ""){
        banka = &sifraFieldPointer;
        if (banka != "")
        {
            BANKA_str = (BANKA_str == "") ? (BANKA_str + "'"+banka+"'") : (BANKA_str + ",'" + banka+"'");
        }    
    }
    searchSifra = "";
    searchNaziv = "";
}
//==============================================

function ShowF2ListKonta(){
    F2ListQueryString = "WITH konta AS("
    + " SELECT DISTINCT gk_ac_konto, gk_ac_opis, CASE WHEN kdib_ln_dp= 'D' THEN 'Odliv' ELSE 'Priliv' END as Trans"
    + " FROM  " + trenutnaGodinaBaza + ".[dbo].[kpkdibgl] "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[kpkdibln] ON kdib_gl_num = kdib_ln_num "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkgkacct ON kdib_ln_konto = gk_ac_konto "
    + " WHERE gk_ac_konto like '{var1}%' AND gk_ac_opis like '%{var2}%'"
    + " AND YEAR(kdib_gl_datem) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY gk_ac_konto ASC) AS RowNumber, gk_ac_konto, gk_ac_opis, Trans"
    + " FROM konta ORDER BY RowNumber";

    Konto = "";
    KontoNaziv = "";
    sifraFieldPointer -> Konto;
    NazivFieldPointer -> KontoNaziv; 
    

    windowTitle = "F2 lista konta";
    headersArray = {"R.br.", "Konto", "Naziv konta", "Priliv/odliv"};
    
    ShowF2List();
}

// F2 KONTA sva
function ceKonto@clicked()
{
    ShowF2ListKonta();
    
    if(&sifraFieldPointer != ""){
        Konto = &sifraFieldPointer;
        if (Konto != "")
        {
            Konto = strtrim(Konto);
            KONTO_str = (KONTO_str == "") ? (KONTO_str + "'"+Konto+"'") : (KONTO_str + ",'" + Konto+"'");
        }    
    }
    searchSifra = "";
    searchNaziv = "";
}

// F2 KONTA poslovne aktivnosti
function ceKontoPoslAkt@clicked()
{
    ShowF2ListKonta();
    
    if(&sifraFieldPointer != ""){
        Konto = &sifraFieldPointer;
        if (Konto != "")
        {
            Konto = strtrim(Konto);
            KONTO_posl_akt_str = (KONTO_posl_akt_str == "") ? (KONTO_posl_akt_str + "'" + Konto + "'") : (KONTO_posl_akt_str + ",'" + Konto + "'");
        }    
    }
    searchSifra = "";
    searchNaziv = "";
}

// F2 KONTA financijske aktivnosti
function ceKontoFinancAkt@clicked()
{
    ShowF2ListKonta();
    
    if(&sifraFieldPointer != ""){
        Konto = &sifraFieldPointer;
        if (Konto != "")
        {
            Konto = strtrim(Konto);
            KONTO_financ_akt_str = (KONTO_financ_akt_str == "") ? (KONTO_financ_akt_str + "'"+Konto+"'") : (KONTO_financ_akt_str + ",'" + Konto+"'");
        }    
    }
    searchSifra = "";
    searchNaziv = "";
}

// F2 KONTA investicijske aktivnosti
function ceKontoInvestAkt@clicked()
{
    ShowF2ListKonta();
    
    if(&sifraFieldPointer != ""){
        Konto = &sifraFieldPointer;
        if (Konto != "")
        {
            Konto = strtrim(Konto);
            KONTO_invest_akt_str = (KONTO_invest_akt_str == "") ? (KONTO_invest_akt_str + "'" + Konto + "'") : (KONTO_invest_akt_str + ",'" + Konto + "'");
        }    
    }
    searchSifra = "";
    searchNaziv = "";
}


//==============================================

function cePartner@clicked()
{
    //F2ListQueryString = "SELECT distinct kdib_ln_partner, [NKSC_PARTNAME], CASE WHEN nksc_cust_vend= 'K' THEN 'Kupac' WHEN nksc_cust_vend= 'D' THEN 'Dobavljač' ELSE 'Kup/Dob' END as PartnerTip FROM  " + trenutnaGodinaBaza + ".[dbo].[kpkdibln] LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].nkscpart on kdib_ln_partner = nksc_partcode LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].kpkdibgl ON kdib_gl_num = kdib_ln_num WHERE NKSC_PARTCODE like '%{var1}%' and NKSC_PARTNAME like '%{var2}%' AND YEAR(kdib_gl_datem) = " + ovagod_h + " ORDER BY kdib_ln_partner";

    F2ListQueryString = "WITH partneri AS("
    + " SELECT DISTINCT kdib_ln_partner, nksc_partname, CASE WHEN nksc_cust_vend= 'K' THEN 'Kupac' WHEN nksc_cust_vend= 'D' THEN 'Dobavljač' ELSE 'Kup/Dob' END as PartnerTip "
    + " FROM " + trenutnaGodinaBaza + ".[dbo].[kpkdibln] "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].nkscpart on kdib_ln_partner = nksc_partcode"
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].kpkdibgl ON kdib_gl_num = kdib_ln_num"
    + " WHERE nksc_partcode LIKE '%{var1}%' AND nksc_partname LIKE '%{var2}%'"
    + " AND YEAR(kdib_gl_datem) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY kdib_ln_partner ASC) AS RowNumber, kdib_ln_partner, nksc_partname, PartnerTip"
    + " FROM partneri ORDER BY RowNumber";
    
    sifraFieldPointer -> partner;
    NazivFieldPointer -> PartnerNaziv;

    windowTitle = "F2 lista Partnera";
    headersArray = {"R.br.", "Šifra partnera", "Naziv partnera", "Kupac/Dobavljač"};
    ShowF2List();
    
    if(&sifraFieldPointer != ""){
        partner= strtrim(&sifraFieldPointer);
        partnerNaziv= (&NazivFieldPointer);
    }
    else
    {
        partner= "";
        partnerNaziv= "";
    }
    searchSifra = "";
    searchNaziv = "";
}

function cePartner@post()
{
    if (partner== "")
    {
        partnerNaziv= "";
    }
    else{
        sqlResult = {};
        sqlString = "SELECT TOP 1 nksc_partname FROM  " + trenutnaGodinaBaza + ".[dbo].[nkscpart] WHERE nksc_partcode = '" + partner + "' ORDER BY nksc_partcode";
        try{
            sqlResult = SqlQuery(sqlString);
        }catch(ex){
            MessageBox(ex);
        }
        if(sqlResult.length > 1){
            partnerNaziv = sqlResult[1][0];
        }
        else{
            MessageBox("Partner ne postoji.");
            partner = "";
            partnerNaziv = "";
            return false;
        }
    }
}

//==============================================================

function ceIzvadak@clicked()
{
    //F2ListQueryString = "SELECT kdib_gl_num, CONCAT(kdib_gl_datem, '   ', kpsy_bnk_ime), kdib_gl_banka FROM " + trenutnaGodinaBaza + ".[dbo].kpkdibgl left join " + trenutnaGodinaBaza + ".[dbo].kpsybank ON kdib_gl_banka = kpsy_bnk_code where kpsy_bnk_ime like '%{var2}%' AND kdib_gl_num like '{var1}%'";
    
    F2ListQueryString = "WITH izvatci AS("
    + " SELECT DISTINCT kdib_gl_num, CONCAT(kdib_gl_datem, '   ', kpsy_bnk_ime) as datBank, kdib_gl_banka "
    + " FROM " + trenutnaGodinaBaza + ".[dbo].kpkdibgl"
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].kpsybank ON kdib_gl_banka = kpsy_bnk_code"
    + " WHERE kpsy_bnk_blag <> 'D' AND kdib_gl_num LIKE '{var1}%' AND kpsy_bnk_ime LIKE '%{var2}%'"
    + " AND YEAR(kdib_gl_datem) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY kdib_gl_num ASC) AS RowNumber, kdib_gl_num, datBank, kdib_gl_banka"
    + " FROM izvatci ORDER BY RowNumber";

    sifraFieldPointer -> Izvadak;
    NazivFieldPointer -> IzvadakNaziv;

    windowTitle = "F2 lista izvadaka";
    headersArray = {"R.br.", "Broj izvatka", "Datum i naziv banke", "Šifra banke"};

    ShowF2List();

    if(&sifraFieldPointer != ""){
        Izvadak = strtrim(&sifraFieldPointer);
        IzvadakNaziv = &NazivFieldPointer;
    }
    else{
        Izvadak = "";
        IzvadakNaziv = "";
    }
    searchSifra = "";
    searchNaziv = "";
}

function ceIzvadak@post()
{
    if (Izvadak == "")
    {
        IzvadakNaziv = "";
    }
    else{
        sqlResult = {};
        sqlString = "SELECT TOP 1 CONCAT(kdib_gl_datem, ' ', kpsy_bnk_ime) FROM " + trenutnaGodinaBaza + ".[dbo].kpkdibgl left join " + trenutnaGodinaBaza + ".[dbo].kpsybank ON kdib_gl_banka = kpsy_bnk_code where kdib_gl_num = '" + Izvadak + "' ORDER BY kdib_gl_num";
        //sqlString = "SELECT TOP 1 [KSDU_SF_OPIS1] FROM  " + trenutnaGodinaBaza + ".[dbo].[KPSYSIFA] WHERE [KSDU_SF_TIP] ='V' and KSDU_SF_CODE = '" + regija + "' ORDER BY ksdu_sf_code";
        try{
            sqlResult = SqlQuery(sqlString);
        }catch(ex){
            MessageBox(ex);
        }
        if(sqlResult.length > 1){
            IzvadakNaziv = sqlResult[1][0];
        }
        else{
            MessageBox("Izvadak ne postoji.");
            Izvadak = "";
            IzvadakNaziv = "";
            return false;
        }
    }
}

//-------------------------------------------------------------
//-------------------------------------------------------------
//-------------------------------------------------------------

function filterPart()
{
    if (partner != "")
    {
        sql_str += " AND kdib_ln_partner = '" + partner + "'";
    }
    if (BANKA_str != "")
    {
        sql_str += " AND kdib_gl_banka IN (" + BANKA_str + ")";
    }
    if (KONTO_str != "")
    {
        sql_str += " AND kdib_ln_konto IN (" + KONTO_str + ")";
    }
    if (Izvadak != "")
    {
        sql_str += " AND kdib_gl_num = '" + Izvadak + "'";
    }
    if (domaca_dn )
    {
        sql_str += " AND nksc_drzava= '"+kpsy_po_freight+"'";
    }
    elif (eu_dn )
    {
        sql_str +=  " AND nksc_drzava IN ("+eucountries+")";
    }
    elif (izvoz_dn )
    {
        sql_str += " AND nksc_drzava <> '"+kpsy_po_freight+"' AND NOT nksc_drzava IN ("+eucountries+")";
    }
    //sql_str += " AND kpsy_bnk_blag != 'D'";
/*
    if (gl_oznaka != "")
	{
	    if (GL_oznaka == "X" || GL_oznaka == "O" || GL_oznaka == "R" )  //ako je to storno, odobrenje ili reklamacija neka okrene
		{
            sql_str += " AND nkpr_gl_oznaka= '"+gl_oznaka+"'";
            sql_str += " AND nkpr_ln_pext< 0";
		}
        elif (gl_oznaka== "P")
        {
            //ide i plus i minus
            sql_str += " AND nkpr_ln_ma_us= 'A'"; //avans
        }
        else
		{
            sql_str += " AND nkpr_gl_oznaka= '"+gl_oznaka+"'";
            sql_str += " AND nkpr_ln_pext>= 0";
		}
	}
    */

}