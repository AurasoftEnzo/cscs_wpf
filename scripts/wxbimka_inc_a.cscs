function wxbimkaa_onStart()
{
    cursor("wait");
    // t10datrac=true;
    
    // setChartByDaysOfMonth();
    // //
    
    Chart("ChartPoMjesecima", "init");
    //Chart("ChartPoMjesecima", "seriesType", "Columnseries");
    //Chart("ChartPoMjesecima", "title", "Naslov grafa", 20);
    Chart("ChartPoMjesecima", "values", "bar", ProsjecneZalihePoMjesecima, "Prosječne zalihe"); // !
    Chart("ChartPoMjesecima", "values", "line", IzlazZalihaPoMjesecima, "Izlaz zaliha"); // !
    Chart("ChartPoMjesecima", "values", "line", UlazZalihaPoMjesecima, "Ulaz zaliha"); // !
    // Chart("ChartPoMjesecima", "values", "bar", arrayTrenutna, STRING(ovagod_h)); //!
    Chart("ChartPoMjesecima", "SeparatorStep", 1);
    //Chart("ChartPoMjesecima", "Margins", {50, 20, 0, 30});
    Chart("ChartPoMjesecima", "TooltipDecimalPlaces", 0);
    Chart("ChartPoMjesecima", "Color.Series", { "#488A99", "red", "limegreen"}); 
    Chart("ChartPoMjesecima", "xlabelsRotation", 90);
    Chart("ChartPoMjesecima", "labels", "x", 13, ZalihePoMjesecimaLabels);


    // //
    // Chart("ChartPoDanima", "init");
    // //Chart("ChartPoDanima", "seriesType", "lineSeries");
    // Chart("ChartPoDanima", "title", "Po Danima");
    // //Chart("ChartPoDanima", "labels","y", 12);
    // Chart("ChartPoDanima", "labels","x", 12,  {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"});
    // //Chart("ChartPoDanima", "labels", arrayDani);
    // //Chart("ChartPoDanima", "xlabelsRotation", 0);
    // Chart("ChartPoDanima", "SeparatorStep", 1);
    // Chart("ChartPoDanima", "values", "line", arrayVrijednosti, "Dnevno");
    // Chart("ChartPoDanima", "values", "line", arrayAvr, "Prosjek7dana");
    // Chart("ChartPoDanima", "Color.Series", { "#DBAE58", "#000000"}); 
    // //Chart("ChartPoDanima", "Margins", {60, 20, 0, 30});
    // //

    // cntr2= 0;

    // setLast10InvoicesDataGrid();
    // Format("T10IZNOSZ_AR", "nofd");
    // Format("T10IZNOSMJ_AR", "nofd");
    // DisplayArray("dgRacuniLast", "close");
    // DisplayArraySetup("dgRacuniLast", counterFld: cntr2, activeElements: Size(sqlResult2) - 1, maxElements: 10);
    // //

	// DisplayArray("dgRacuniMjesec", "close");
	// //DisplayArraySetup("dgRacuniMjesec", counterFld: "cntr3", activeElements: Size(sqlResult) - 1, maxElements: 10);
    // setTop10InvoicesDataGrid();
    // cntr3= 0;
	// DisplayArraySetup("dgRacuniMjesec", counterFld: cntr3, activeElements: Size(sqlResult) - 1, maxElements: 10);
    
    
    cursor("dflt");
}

function setChartByMonth()
{
    RunOnMain("setChartByMonth0");

    // prošla godina prosjecne zalihe po mjesecima
    // SQL_str = "SET query_governor_cost_limit 0;";
    if ( proslaGodinaBaza != "" )
    {
        sql_str = "WITH promet AS(";
        sql_str += " SELECT rmpr_datum_dok,";

        sql_str += " ISNULL(round(SUM(CASE WHEN rmpr_ul_izl = 'U' THEN round(rmpr_cena_uk, 2) ELSE -round(rmpr_cena_uk, 2) END), 2), 0) AS transaction_amount";
        // if (neto_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (bruto_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (razlikaUCijeniField)
        // {
        //     sql_str += " ";
        // }
        // elif (tezina_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (mx3_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (mx2_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (met_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (kom_dn)
        // {
        //     sql_str += " ";
        // }
        sql_str += " FROM " + proslaGodinaBaza + ".dbo.NKMKPROM";
        sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.NKMKARTI ON RMPR_ARTIKL = ARTI_ARTIKL";

        sql_str += " WHERE year(rmpr_datum_dok) = " + lani_h;
        filterPart();

        sql_str += " GROUP BY RMPR_DATUM_DOK),";
        
        sql_str += " sviDani AS(";
        sql_str += " SELECT convert(date, DATEADD(DAY,number,'" + lani_h + "-01-01')) as datum,";
        sql_str += " ISNULL(transaction_amount, 0) as transaction_amount";
        sql_str += " FROM master..spt_values";
        sql_str += " LEFT JOIN promet on convert(date, DATEADD(DAY,number,'" + lani_h + "-01-01')) = rmpr_datum_dok";
        sql_str += " WHERE type = 'P'";
        sql_str += " AND DATEADD(DAY,number, '" + lani_h + "-01-01') <= '" + lani_h + "-12-31'";
        sql_str += " ),";


        sql_str += " DailyBalance AS (";
        sql_str += " SELECT datum,";
        sql_str += " SUM(transaction_amount) OVER (ORDER BY datum ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cumulative_balance";
        sql_str += " FROM sviDani),";

        sql_str += " MonthlyBalance AS (";
        sql_str += " SELECT DATEADD(month, DATEDIFF(month, 0, datum), 0) AS mjesec,";
        sql_str += " AVG(cumulative_balance) AS monthly_avg_balance";
        sql_str += " FROM DailyBalance";
        sql_str += " GROUP BY DATEADD(month, DATEDIFF(month, 0, datum), 0)";
        sql_str += " )";

        sql_str += " SELECT convert(varchar(7), mjesec, 126),";
        sql_str += " round(monthly_avg_balance, 2)";
        sql_str += " FROM MonthlyBalance";
        sql_str += " ORDER BY mjesec;";

        try
        {
            // SaveFile(sql_str);
            queryResult = sqlquery(SQL_str);
        }
        catch(exc)
        {
            MessageBox(exc);
        }
        
        RunOnMain("setChartByMonth1");
    }
    
    //// tekuća godina prosjecne zalihe po mjesecima
    sql_str = "WITH promet AS(";
    sql_str += " SELECT rmpr_datum_dok,";

    sql_str += " ISNULL(round(SUM(CASE WHEN rmpr_ul_izl = 'U' THEN round(rmpr_cena_uk, 2) ELSE -round(rmpr_cena_uk, 2) END), 2), 0) AS transaction_amount";
    // if (neto_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (bruto_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (razlikaUCijeniField)
    // {
    //     sql_str += " ";
    // }
    // elif (tezina_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (mx3_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (mx2_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (met_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (kom_dn)
    // {
    //     sql_str += " ";
    // }
    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.NKMKPROM";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.NKMKARTI ON RMPR_ARTIKL = ARTI_ARTIKL";

    sql_str += " WHERE year(rmpr_datum_dok) = " + ovagod_h;
    filterPart();

    sql_str += " GROUP BY RMPR_DATUM_DOK),";
    
    sql_str += " sviDani AS(";
    sql_str += " SELECT convert(date, DATEADD(DAY,number,'" + ovagod_h + "-01-01')) as datum,";
    sql_str += " ISNULL(transaction_amount, 0) as transaction_amount";
    sql_str += " FROM master..spt_values";
    sql_str += " LEFT JOIN promet on convert(date, DATEADD(DAY,number,'" + ovagod_h + "-01-01')) = rmpr_datum_dok";
    sql_str += " WHERE type = 'P'";
    if(int(ovagod_h) < int(now("yyyy"))){
        doDatum = ovagod_h + "-12-31";
    }else{
        doDatum = now("yyyy-MM-dd");
    }
    sql_str += " AND DATEADD(DAY,number, '" + ovagod_h + "-01-01') <= '" + doDatum + "'";
    sql_str += " ),";


    sql_str += " DailyBalance AS (";
    sql_str += " SELECT datum,";
    sql_str += " SUM(transaction_amount) OVER (ORDER BY datum ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cumulative_balance";
    sql_str += " FROM sviDani),";

    sql_str += " MonthlyBalance AS (";
    sql_str += " SELECT DATEADD(month, DATEDIFF(month, 0, datum), 0) AS mjesec,";
    sql_str += " AVG(cumulative_balance) AS monthly_avg_balance";
    sql_str += " FROM DailyBalance";
    sql_str += " GROUP BY DATEADD(month, DATEDIFF(month, 0, datum), 0)";
    sql_str += " )";

    sql_str += " SELECT convert(varchar(7), mjesec, 126),";
    sql_str += " round(monthly_avg_balance, 2)";
    sql_str += " FROM MonthlyBalance";
    sql_str += " ORDER BY mjesec;";
    
    try
    {
        //SaveFile(sql_str);
        queryResult = sqlquery(SQL_str);
    }
    catch(exc)
    {
        MessageBox(exc);
    }

    RunOnMain("setChartByMonth2");
    
    if ( proslaGodinaBaza != "" )
    {
        //prošla godina U i I
        sql_str = "";
        sql_str += " WITH promet AS(";
        sql_str += " SELECT month(rmpr_datum_dok) as mjesec,";
        sql_str += " ISNULL(round(SUM(CASE WHEN rmpr_ul_izl = 'U' THEN round(rmpr_cena_uk, 2) ELSE 0 END), 2), 0) AS ulaz,";
        sql_str += " ISNULL(round(SUM(CASE WHEN rmpr_ul_izl = 'I' THEN round(rmpr_cena_uk, 2) ELSE 0 END), 2), 0) AS izlaz";
        // if (neto_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (bruto_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (razlikaUCijeniField)
        // {
        //     sql_str += " ";
        // }
        // elif (tezina_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (mx3_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (mx2_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (met_dn)
        // {
        //     sql_str += " ";
        // }
        // elif (kom_dn)
        // {
        //     sql_str += " ";
        // }
        sql_str += " FROM " + proslaGodinaBaza + ".dbo.NKMKPROM";
        sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.NKMKARTI on RMPR_ARTIKL = ARTI_ARTIKL";
        sql_str += " WHERE RMPR_IZVOR_DOK != 'GO' AND year(rmpr_datum_dok) = " + lani_h;
        filterPart();

        sql_str += " GROUP BY month(rmpr_datum_dok)),";

        sql_str += " allMonths AS (";
        sql_str += " SELECT number as mjesec, isnull(ulaz, 0) as ulaz, isnull(izlaz, 0) as izlaz";
        sql_str += " FROM master..spt_values LEFT JOIN promet on number = mjesec";
        sql_str += " WHERE type = 'P'";
        sql_str += " AND number <= 12 AND number > 0";
        
        sql_str += " )";
        sql_str += " SELECT * FROM allMonths";
        sql_str += " order by mjesec";

        try
        {
            //SaveFile(sql_str);
            queryResult = sqlquery(SQL_str);
        }
        catch(exc)
        {
            MessageBox(exc);
        }

        RunOnMain("setChartByMonth3");
    }
    
    
    //trenutna godina U i I
    sql_str = "";
    sql_str += " WITH promet AS(";
    sql_str += " SELECT month(rmpr_datum_dok) as mjesec,";
    sql_str += " ISNULL(round(SUM(CASE WHEN rmpr_ul_izl = 'U' THEN round(rmpr_cena_uk, 2) ELSE 0 END), 2), 0) AS ulaz,";
    sql_str += " ISNULL(round(SUM(CASE WHEN rmpr_ul_izl = 'I' THEN round(rmpr_cena_uk, 2) ELSE 0 END), 2), 0) AS izlaz";
    // if (neto_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (bruto_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (razlikaUCijeniField)
    // {
    //     sql_str += " ";
    // }
    // elif (tezina_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (mx3_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (mx2_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (met_dn)
    // {
    //     sql_str += " ";
    // }
    // elif (kom_dn)
    // {
    //     sql_str += " ";
    // }
    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.NKMKPROM";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.NKMKARTI on RMPR_ARTIKL = ARTI_ARTIKL";
    sql_str += " WHERE RMPR_IZVOR_DOK != 'GO' AND year(rmpr_datum_dok) = " + ovagod_h;
    filterPart();

    sql_str += " GROUP BY month(rmpr_datum_dok)),";

    sql_str += " allMonths AS (";
    sql_str += " SELECT number as mjesec, isnull(ulaz, 0) as ulaz, isnull(izlaz, 0) as izlaz";
    sql_str += " FROM master..spt_values LEFT JOIN promet on number = mjesec";
    sql_str += " WHERE type = 'P'";
    sql_str += " AND number <= 12 AND number > 0";
    
    sql_str += " )";
    sql_str += " SELECT * FROM allMonths";
    sql_str += " order by mjesec";

    try
    {
        //SaveFile(sql_str);
        queryResult = sqlquery(SQL_str);
    }
    catch(exc)
    {
        MessageBox(exc);
    }

    RunOnMain("setChartByMonth4");
}

//clear array + set labels
function setChartByMonth0(){
    for(i = 0; i < 24; i++)
    {
        ProsjecneZalihePoMjesecima[i] = 0;
        UlazZalihaPoMjesecima[i] = 0;
        IzlazZalihaPoMjesecima[i] = 0;

        if(i < 12){
            ZalihePoMjesecimaLabels[i] = string(i+1) + "./" + lani_h + ".";
        }else{
            ZalihePoMjesecimaLabels[i] = string(i-11) + "./" + ovagod_h + ".";
        }
    }
}


//prosla godina prosječno po mjesecima
function setChartByMonth1(){
    for(i = 1; i <= 12; i++)
    {
        ProsjecneZalihePoMjesecima[i - 1] = queryResult[i][1];
    }
}

//trenutna godina prosječno po mjesecima
function setChartByMonth2(){
    
    for(i = 1; i <= Size(queryResult)-1; i++)
    {
        ProsjecneZalihePoMjesecima[i + 11] = queryResult[i][1];
    }
}

//prosla godina ulaz i izlaz
function setChartByMonth3(){
    for(i = 1; i <= 12; i++)
    {
        UlazZalihaPoMjesecima[i - 1] = queryResult[i][1];
        IzlazZalihaPoMjesecima[i - 1] = queryResult[i][2];
    }
}

//trenutna godina ulaz i izlaz
function setChartByMonth4(){
    
    for(i = 1; i <= Size(queryResult)-1; i++)
    {
        UlazZalihaPoMjesecima[i + 11] = queryResult[i][1];
        IzlazZalihaPoMjesecima[i + 11] = queryResult[i][2];
    }
}

//--------------------------------------------------------

function setChartByDaysOfMonth()
{
    sql_str = "WITH cte AS (";
    if (neto_dn)
    {
        sql_str += "SELECT DAY(nkpr_gl_esd) as dan2 , SalesDay = ISNULL(ROUND(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_amt ELSE e.nkpr_ln_amt END),0) , 0)";
    }
    elif (razlikaUCijeniField)
    {
        sql_str += "SELECT DAY(nkpr_gl_esd) as dan2 , SalesDay = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * (e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz) ELSE e.nkpr_ln_amt - e.nkpr_ln_cenan * e.nkpr_ln_qtyz END) , 0)";
    }
    elif (tezina_dn)
    {
        sql_str += " SELECT DAY(nkpr_gl_esd) as dan2, SalesDay=ISNULL(SUM(e.nkpr_ln_tezinan), 0) ";
    }
    elif (mx3_dn)
    {
        sql_str += " SELECT DAY(nkpr_gl_esd) as dan2, SalesDay=ISNULL(SUM(e.nkpr_ln_metx3), 0) ";
    }
    elif (mx2_dn)
    {
        sql_str += " SELECT DAY(nkpr_gl_esd) as dan2, SalesDay=ISNULL(SUM(e.nkpr_ln_metx2), 0) ";
    }
    elif (met_dn)
    {
        sql_str += " SELECT DAY(nkpr_gl_esd) as dan2, SalesDay=ISNULL(SUM(e.nkpr_ln_met), 0) ";
    }
    elif (kom_dn)
    {
        sql_str += " SELECT DAY(nkpr_gl_esd) as dan2, SalesDay=ISNULL(SUM(CASE WHEN e.nkpr_ln_jedmj = 'KOM' THEN e.nkpr_ln_pqty ELSE e.nkpr_ln_kom END), 0) ";
    }
    else
    {
        sql_str += "SELECT DAY(nkpr_gl_esd) as dan2 , SalesDay = ISNULL(SUM(CASE WHEN c.nkpr_gl_dviza = 'D' THEN c.nkpr_gl_tecaj * e.nkpr_ln_pext ELSE e.nkpr_ln_pext END) , 0)";
    }
    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglot c"; // c ON a.[Wk_Date] = c.nkpr_gl_datem ";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnot e ON c.nkpr_gl_brotp = e.nkpr_ln_invnm";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza+".dbo.nkmkarti ON nkpr_ln_pcode = arti_artikl";
    if (regija != "")
    {
        sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON c.nkpr_gl_cuscod = g.nksc_partcode";
    }
    sql_str += " WHERE 1 = 1";
    sql_str += " AND nkpr_gl_cuscod <> '" + vlFirma + "'";
    if (do_mjeseca)
    {
        sql_str += " AND MONTH(nkpr_gl_esd) <= '" + mjesec_h + "' AND YEAR(nkpr_gl_esd) = '" + ovagod_h + "'";
    }
    else
    {
        sql_str += " AND MONTH(nkpr_gl_esd) = '" + mjesec_h + "' AND YEAR(nkpr_gl_esd) = '" + ovagod_h + "'";
    }
    filterPart();
    sql_str += " GROUP BY DAY(nkpr_gl_esd)";
    sql_str += ")";
    sql_str += "SELECT wk_day,ISNULL(max(salesday), 0) as salesday";
    sql_str += ",ISNULL(AVG(max(salesday)) OVER(ORDER BY wk_day ROWS BETWEEN 6 PRECEDING AND CURRENT ROW), 0) AS moving_average_3_days";
    sql_str += " FROM " + CommonDBGet() + ".dbo.Kalendar";
    sql_str += " LEFT JOIN cte ON wk_day = dan2";
    sql_str += " WHERE WK_month <= '" + mjesec_h + "' and wk_Year= '" + ovagod_h + "'";
    sql_str += " GROUP BY wk_day";
    sql_str += " ORDER BY wk_day";
    //---------------------------------------------
    try
    {
        //SaveFile(sql_str);
        queryResult = sqlquery(sql_str);
    }catch(exc)
    {
        MessageBox(exc);
    }
    
    arrayDani = {};
    arrayVrijednosti = {};
    arrayAvr = {};
    for(i = 1; i < queryResult.length; i++)
    {
        arrayDani.add(string(queryResult[i][0]));
        arrayVrijednosti.add(queryResult[i][1]);
        arrayAvr.add(queryResult[i][2]);
    }
}

//--------------------------------------------------------

function setLast10InvoicesDataGrid()
{
	if (t10datrac)
	{
		//za sada ne koristimo ovo!
		sql_str =  "SELECT TOP 10 nkpr_gl_brotp , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_esd , 3) AS datecr , convert(char(8) , nkpr_gl_timecr , 20) as nkpr_gl_timecr ,  ";
		//sql_str += " CAST( CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2))  AS nkpr_gl_total " ;
	}
	else 
	{
		sql_str =  "SELECT TOP 10 nkpr_gl_brotp , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_datecr , 3) AS datecr , convert(char(8) , nkpr_gl_timecr , 20) as nkpr_gl_timecr ,  ";
		//sql_str += " CAST( CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2))  AS nkpr_gl_total " ;
	}
    if (neto_dn)
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_amt ELSE nkpr_ln_amt END),2), 0)";
	}
    elif (razlikaUCijeniField)
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*(nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz) ELSE nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz END), 2), 0)";
	}
    elif (tezina_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_tezinan), 2), 0)";
	}	
    elif (mx3_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx3), 2), 0)";
	}	
    elif (mx2_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx2), 2), 0)";
	}	
    elif (met_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_met), 2), 0)";
	}	
    elif (kom_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END), 0), 0)";
	}	
    else
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj * nkpr_ln_pext ELSE nkpr_ln_pext END), 2), 0)";
	}
	sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglot" ;
    if (regija!= "")
	{
        sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nkscpart g ON nkpr_gl_cuscod= g.nksc_partcode";
    }
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnot ON nkpr_gl_brotp = nkpr_ln_invnm";
    sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nkmkarti ON nkpr_ln_pcode= arti_artikl";
	sql_str += " WHERE YEAR(nkpr_gl_esd) =  " + ovagod_h  ;
    sql_str += " AND nkpr_gl_cuscod <> '" + vlFirma + "'";
	if (do_mjeseca)
	{
		sql_str +=" AND month(nkpr_gl_esd)<=  " + mjesec_h  ;
	}
	else 
	{
		sql_str += " AND month(nkpr_gl_esd) =  " + mjesec_h;
	}
    filterPart();
	sql_str += " GROUP BY nkpr_gl_brotp,nkpr_gl_cusnme,nkpr_gl_esd,nkpr_gl_timecr" ;
	//if (t10datrac)
	//{
		sql_str += " ORDER BY nkpr_gl_esd DESC , nkpr_gl_timecr DESC" ;
	//}
	//else 
	//{
	//	sql_str += " ORDER BY nkpr_gl_datecr DESC , nkpr_gl_timecr DESC" ;
	//}
 //SaveFile(sql_str);
	try	{
		sqlResult2 = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}
    for ( i = 1; i < Size(sqlResult2); i++ )
    {      
        //nkpr_gl_brotp = sqlResult2[i][0];  
        //nkpr_gl_cusnme = sqlResult2[i][1];
        //datecr = sqlResult2[i][2];
        //nkpr_gl_timecr = sqlResult2[i][3];
        //nkpr_gl_total= sqlResult2[i][4];

        t10Namez_ar[i - 1] =  sqlResult2[i][1]; //nkpr_gl_cusnme;
        t10Iznosz_ar[i - 1] =  sqlResult2[i][4]; //nkpr_gl_total;
        t10Cntrz_ar[i - 1] =  i;
        t10Datumz_ar[i - 1] =  sqlResult2[i][2]; //datecr;
        t10Racunz_ar[i - 1] =  sqlResult2[i][0]; //nkpr_gl_brotp; 
        t10Timez_ar[i - 1] =  sqlResult2[i][3]; //nkpr_gl_timecr;
    }
}

function setTop10InvoicesDataGrid()
{
    /*
    sql_str =  "SELECT TOP 10 nkpr_gl_brotp , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_esd , 3) AS datecr , " ;
	sql_str += " CAST(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2))AS nkpr_gl_total ";
	sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglot" ;
	if ( regija != "" )
	{
		sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod =  g.nksc_partcode" ;
	}
	sql_str += " WHERE 1 = 1" ;
	if ( mjesec_h != "" )
		{
		if (do_mjeseca)
		{
			sql_str += " AND month(nkpr_gl_esd)<=  " + mjesec_h ;
			sql_str += " AND YEAR(nkpr_gl_esd) =  " + ovagod_h ;
		}
		else 
		{
			sql_str += " AND month(nkpr_gl_esd) =  " + mjesec_h ;
			sql_str += " AND YEAR(nkpr_gl_esd) =  " + ovagod_h ;
			}
	}
	if ( regija != "" )
	{
		sql_str += " AND g.nksc_regija =  '" + regija + "'";
	}
    */
    
	sql_str =  "SELECT TOP 10 nkpr_gl_brotp , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_esd , 3) AS datecr , ";
    if (neto_dn)
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_amt ELSE nkpr_ln_amt END),2), 0)";
	}
    elif (razlikaUCijeniField)
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*(nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz) ELSE nkpr_ln_amt-nkpr_ln_cenan*nkpr_ln_qtyz END), 2), 0)";
	}
    elif (tezina_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_tezinan), 2), 0)";
	}	
    elif (mx3_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx3), 2), 0)";
	}	
    elif (mx2_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_metx2), 2), 0)";
	}	
    elif (met_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(nkpr_ln_met), 2), 0)";
	}	
    elif (kom_dn )
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_ln_jedmj = 'KOM' THEN nkpr_ln_pqty ELSE nkpr_ln_kom END), 2), 0)";
	}	
    else
	{
        sql_str += " ISNULL(ROUND(SUM(CASE WHEN nkpr_gl_dviza= 'D' THEN nkpr_gl_tecaj*nkpr_ln_pext ELSE nkpr_ln_pext END), 2), 0)";
	}
	sql_str += " AS iznos FROM " + trenutnaGodinaBaza + ".dbo.nkprglot";
    if (regija!= "")
	{
        sql_str += " LEFT JOIN "+trenutnaGodinaBaza+".dbo.nkscpart g ON nkpr_gl_cuscod= g.nksc_partcode";
    }
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnot ON nkpr_gl_brotp = nkpr_ln_invnm";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti ON nkpr_ln_pcode= arti_artikl";
	sql_str += " WHERE YEAR(nkpr_gl_esd) =  " + ovagod_h  ;
    sql_str += " AND nkpr_gl_cuscod <> '" + vlFirma + "'";
	if (do_mjeseca)
	{
		sql_str +=" AND month(nkpr_gl_esd)<=  " + mjesec_h  ;
	}
	else 
	{
		sql_str += " AND month(nkpr_gl_esd) =  " + mjesec_h;
	}
    filterPart();
	sql_str += " GROUP BY nkpr_gl_brotp, nkpr_gl_cusnme, nkpr_gl_esd, nkpr_gl_dviza, nkpr_gl_tecaj";
	sql_str += " ORDER BY iznos DESC"; //CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END DESC";
	
	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	for ( i = 1; i < Size(sqlResult); i++ )
	{      
		// nkpr_gl_brotp = sqlResult[i][0];  
		// nkpr_gl_cusnme = sqlResult[i][1];
		// nkpr_gl_esd = sqlResult[i][2];
		// nkpr_gl_total= sqlResult[i][3];

		t10NameMj_ar[i - 1] =  sqlResult[i][1]; //nkpr_gl_cusnme;
		t10IznosMj_ar[i - 1] =  sqlResult[i][3]; //nkpr_gl_total;
		t10CntrMj_ar[i - 1] =  i;
		t10DatumMj_ar[i - 1] =  sqlResult[i][2]; //nkpr_gl_esd;
		t10RacunMj_ar[i - 1] =  sqlResult[i][0]; //nkpr_gl_brotp;
	}        
	return;
}


