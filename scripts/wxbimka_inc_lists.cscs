    include(strTrim(tpath()) + "F2ListLib.cscs");
    // includeScript("F2ListLib.cscs");

    define kategorija,klasa type a size 6 up;
    define kategNaziv,klasaNaziv,KomercNaziv type a size 50;
    // define komercijalist type r size 6;
    // define organizacijskaJedinica type r size 6;

    DEFINE organizacijskaJedinica type a size 10;
    DEFINE organizacijskaJedinicaNaziv type a size 50;

    define sveDrzave_dn,eu_dn,izvoz_dn,domaca_dn type l;
    define eucountries type a size 200;
    define sve_dn, standardni_dn, gotoviProizvodi_dn, poluproizvodi_dn type l;
    define rnalog type r size 8;
    define rnalogNaziv type a size 50;
//**************

    define mx3_dn,mx2_dn,met_dn,kom_dn type l;
    define prodajna_dn, nabavna_dn, razlikaUCijeni_dn,tezina_dn type l;

    define sve_dn, standardni_dn, gotoviProizvodi_dn, poluproizvodi_dn type l;

    define mjesecOd, mjesecDo type a size 2;

//**************

    define ProsjecneZalihePoMjesecima type n size 12 dec 2 array 24;
    define UlazZalihaPoMjesecima type n size 12 dec 2 array 24;
    define IzlazZalihaPoMjesecima type n size 12 dec 2 array 24;

    define ZalihePoMjesecimaLabels type a size 120 array 24;

    define prosjecnoStanjeZalihaOvagodina, prosjecnoStanjeZalihaProslaGodina type n size 12 dec 2;

    define prosjecnoStanjeZalihaOvagodina_string, prosjecnoStanjeZalihaProslaGodina_string type a size 20;
    define postotakProsjecnoStanje type n size 10 dec 2;
//**************

    DEFINE ratio type n size 10 dec 2;

    define tip_racuna type a size 30;
    define gl_oznaka type a size 2 up;
    DEFINE skladiste type a size 3;
    DEFINE skladisteNaziv type a size 50;

    DEFINE ARTI_ARTIKL_ARR type a size 30 array 50000;
    DEFINE ARTI_NAZIV_ARR type a size 50 array 50000;
    DEFINE NKSC_PARTCODE_ARR type a size 10 array 50000;
    DEFINE NKSC_PARTNAME_ARR type a size 50 array 50000;

    DEFINE KSDU_SF_CODE_ARR type a size 6 array 5000;
    DEFINE KSDU_SF_OPIS1_ARR type a size 30 array 5000;

    DEFINE PKMK_SKL_CODE_arr type i size 3 array 300;

    DEFINE PKMK_SKL_NAZIV_arr type a size 50 array 300;
    DEFINE cntr1,cntr2,cntr3,cntr4 type i;
    define ovagod_h,lani_h type a size 4;

    DEFINE tot_ovagod type n size 14 dec 0 ;
    DEFINE tot_ovagod_mp type n size 14 dec 0 ;
    DEFINE tot_ovagod_ukupno type n size 14 dec 0 ;
    DEFINE tot_lani type n size 14 dec 0 ;
    DEFINE tot_ovajmj type n size 14 dec 0 ;
    DEFINE tot_proslimj type n size 14 dec 0 ;
    DEFINE postotak type n size 10 dec 2 ;
    DEFINE postotakMj type n size 10 dec 2 ;
    define postotakTj type n size 10 dec 2 ;
    DEFINE artiklNaziv type a size 30;
    define artikl type a size 15 ;

    DEFINE tot_ovagod_string type a size 20;
    DEFINE tot_ovagod_mp_string type a size 20;
    DEFINE tot_ovagod_ukupno_string type a size 20;
    DEFINE tot_lani_string type a size 20;
    DEFINE tot_ovajmj_string type a size 20;
    DEFINE tot_proslimj_string type a size 20;
    DEFINE tot_ovajTj_string type a size 20;
    DEFINE tot_ProsliTj_string type a size 20;

	define nameArt type a size 40;
	define codeArt_ar type a size 15 array 10;
    define salesArt1_ar type n size 14 dec 0 array 10;
    define salesArt2_ar type n size 14 dec 0 array 10;
    define NameArt_ar type a size 40 array 10;
    define top10Art_ar type i size 2 array 10;
    define indexArt_ar type n size 4 dec 0 array 10;
    define ImageArt_ar type a size 120 array 10;
    define ArtikliCntr type i size 2;

    define namePart type a size 40;
    define salesPart1_ar type n size 14 dec 0 array 10;
    define salesPart2_ar type n size 14 dec 0 array 10;
    define NamePart_ar type a size 40 array 10;
    define CodePart_ar type a size 10 array 10;
    define top10Part_ar type i array 10;
    define indexPart_ar type n size 4 dec 0 array 10;
    define imagePart_ar type a size 120 array 10;
    define salesCntr type i;
    define sales1 type n size 16 dec 2;
    define sales2 type n size 16 dec 2;
	define sklad_str type a size 100;

    define br_kupaca_og, br_kupaca_lg type i size 5;
    define br_otpMjes_og, br_otpMjes_lg type i size 5;
    define prodaja_kup_og, prodaja_kup_lg type n size 14;
    define broj_rac_og, broj_rac_lg type r size 6;
    define prod_kup_indx type n size 10 dec 2;
    define prod_otpMjes_indx type n size 10 dec 2;
    DEFINE arrayProsla type n size 14 array 12;
    DEFINE arrayTrenutna type n size 14 array 12;

	define tot_ovajTj type n size 14;
	define tot_prosliTj type n size 14;
	define sales_ar type n size 14 dec 0 array 10;        
	define postotak type n size 10 dec 2;
	define postotakMj type n size 10 dec 2;
	//define postotakTj type n size 10 dec 2;
	define week_c type a size 10;
	define week_p type a size 10;
	define week type i;

    DEFINE sales_month_ar type n size 14 dec 0 array 24;
    DEFINE CNTR type i size 3;
    DEFINE cntry type i size 3;
    DEFINE arrayProsla type n size 14 array 12;
    DEFINE arrayTrenutna type n size 14 array 12;

  	define t10Iznosz_ar type n size 14 dec 2 array 10;
	define t10Namez_ar type a size 30 array 10;
	define t10Cntrz_ar type i size 2 array 10;
	define t10Datumz_ar type d size 8 array 10;
	define t10Timez_ar type t size 8 array 10;
	define t10Racunz_ar type r size 8 array 10;
 	define T10Cntrz type i;
	define t10DatRac type l;

    define t10IznosMj_ar type n size 14 dec 2 array 10;
	define t10NameMj_ar type a size 30 array 10;
	define t10CntrMj_ar type i size 2 array 10;
	define t10DatumMj_ar type d size 8 array 10;
	define t10RacunMj_ar type r size 8 array 10;

    define T10CntrMj type i;
	define T10Cntrz type i;
	define t10DatRac type l;

    define mjesec_h type a size 2 ;


    define partner type a size 10 ;
    define partnerNaziv type a size 50 ;

    define regija type a size 6 ;
    define regijaNaziv type a size 30 ;

    define kategorija type a size 6 ;
    define kategorijaNaziv type a size 50 ;

    define klasa type a size 6 ;
    define klasaNaziv type a size 50 ;

    define isporuka type a size 10 ;
    define isporukaNaziv type a size 50 ;

    // remove
    define komercijalist type a size 6 ;
    define komercijalistNaziv type a size 50 ;
    
    define organizacijskaJedinica type a size 6 ;
    define organizacijskaJedinicaNaziv type a size 50 ;

    define rnalog type a size 8 ;
    define rnalogNaziv type a size 50 ;

    define do_mjeseca type l;

    define danas_h type d size 10;

    DEFINE razlikaUCijeniField type l;
    DEFINE tezina_dn type l;

    DEFINE searchSklSifra type i size 5;
    DEFINE searchSklNaziv type a size 50;
    DEFINE searchArtiklSifra type a size 50;
    DEFINE searchArtiklNaziv type a size 50;
    DEFINE searchPartnerSifra type a size 50;
    DEFINE searchPartnerNaziv type a size 50;
    DEFINE searchRegijaSifra type a size 50;
    DEFINE searchRegijaNaziv type a size 50;
    DEFINE searchKategorijaSifra type a size 50;
    DEFINE searchKategorijaNaziv type a size 50;
    DEFINE searchKlasaSifra type a size 50;
    DEFINE searchKlasaNaziv type a size 50;
    DEFINE searchIsporukaSifra type a size 50;
    DEFINE searchIsporukaNaziv type a size 50;
    DEFINE searchRnalogSifra type a size 50;
    DEFINE searchRnalogNaziv type a size 50;
    DEFINE searchKomercijalistSifra type a size 50;
    DEFINE searchKomercijalistNaziv type a size 50;

    DEFINE regijeRB type l;
    DEFINE drzaveRB type l;
    DEFINE gradoviRB type l;

    DEFINE nazivFirme type a size 100;

    DEFINE pripremljeno type l;
    define in_string type a size 300;
    DEFINE companyCode type a size 3 up;
    DEFINE userCode type a size 20;    
    define proslaGodinaBaza type a size 200; 

    DEFINE sqlNaDan type a size 10;  
    DEFINE sqlOdDana type a size 10;  
    DEFINE fiscal_yr type a size 10;  
    DEFINE br_kupaca_og_string, br_kupaca_lg_string type a size 50;
    DEFINE br_otpMjes_og_string, br_otpMjes_lg_string type a size 50;
    DEFINE broj_rac_og_string, broj_rac_lg_string type a size 50;
    DEFINE prodaja_kup_og_string, prodaja_kup_lg_string type a size 50;
    define dan2 type i;
    define tableHndl type i;
    define pieChartStr type a size 20;
    define refreshpie type l;    
    define br_wait type r;
    define br_neazur type r;
    define br_wait_string type a size 30;
    define br_neazur_string type a size 30;

    define faktDa, faktNe, faktSve type l;
    define local type a size 1;

//=============================================

// // F2 SKLADISTA
function ceSkladiste@clicked()
{
    // F2ListQueryString = "SELECT [PKMK_SKL_CODE], [PKMK_SKL_NAZIV] FROM  " + trenutnaGodinaBaza + ".[dbo].[PKMKSKLA] where PKMK_SKL_NAZIV like '%{var2}%' and PKMK_SKL_CODE like '{var1}%'";
    // //if(searchSklSifra != 0){
    // //    F2ListQueryString += " and PKMK_SKL_CODE = '{var1}'";
    // //}
    // F2ListQueryString += " ORDER BY pkmk_skl_code";

    F2ListQueryString = "WITH skladista AS("
    + "SELECT DISTINCT pkmk_skl_code, pkmk_skl_naziv "
    + " FROM  " + trenutnaGodinaBaza + ".[dbo].[nkmkprom] "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[pkmkskla] ON pkmk_skl_code = rmpr_skladiste"
    + " WHERE pkmk_skl_code LIKE '{var1}%' AND pkmk_skl_naziv LIKE '%{var2}%'"
    + " AND YEAR(rmpr_datum_dok) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY pkmk_skl_code ASC) AS RowNumber, pkmk_skl_code, pkmk_skl_naziv"
    + " FROM skladista ORDER BY RowNumber";

    skladiste = "";
    sifraFieldPointer -> skladiste;
    NazivFieldPointer -> SkladisteNaziv; 
    windowTitle = "F2 lista skladišta";
    headersArray = {"R.br.", "Skladište", "Naziv skladišta"};
    ShowF2List();
    
    if(&sifraFieldPointer != ""){
        skladiste = &sifraFieldPointer;
        if (skladiste != 0)
        {
            sklad_str = (sklad_str== "") ? (sklad_str + skladiste) : (sklad_str + "," + skladiste);
        }    
    }
    searchSifra = "";
    searchNaziv = "";
}
//==============================================

// F2 ARTIKLI

function ceArtikl@clicked()
{
    //F2ListQueryString = "SELECT ARTI_ARTIKL, ARTI_NAZIV, ARTI_TEZINA, ARTI_JED_MJERE, ARTI_TIP FROM " + trenutnaGodinaBaza + ".[dbo].[NKMKARTI] where ARTI_ARTIKL like '%{var1}%' and ARTI_NAZIV like '%{var2}%' ORDER BY arti_artikl";
    
    F2ListQueryString = "WITH artikli AS("
    + " SELECT DISTINCT rmpr_artikl, arti_naziv, arti_tezina, arti_jed_mjere, arti_tip"
    + " FROM  " + trenutnaGodinaBaza + ".[dbo].[nkmkprom] "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[nkmkarti] ON rmpr_artikl = arti_artikl"
    + " WHERE rmpr_artikl LIKE '%{var1}%' AND arti_naziv LIKE '%{var2}%'"
    + " AND YEAR(rmpr_datum_dok) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY rmpr_artikl ASC) AS RowNumber, rmpr_artikl, arti_naziv, arti_tezina, arti_jed_mjere, arti_tip"
    + " FROM artikli ORDER BY RowNumber";

    sifraFieldPointer -> artikl;
    NazivFieldPointer -> ArtiklNaziv;

    windowTitle = "F2 list ARTIKLI";
    headersArray = {"R.br.", "Šifra artikla", "Naziv Artikla", "Jed.tež.", "JMJ", "TIP"};
    ShowF2List();
    
    if(&sifraFieldPointer != ""){
        artikl = strtrim(&sifraFieldPointer);
        ArtiklNaziv = &NazivFieldPointer;
    }
    else
    {
        artikl = "";
        artiklNaziv = "";
    }
    searchSifra = "";
    searchNaziv = "";
}

function ceArtikl@post()
{
    if (artikl == "")
    {
        artiklNaziv = "";
    }
    else{
        sqlResult = {};
        sqlString = "SELECT TOP 1 arti_naziv FROM " + trenutnaGodinaBaza + ".[dbo].[nkmkarti] WHERE arti_artikl = '" + artikl + "' ORDER BY arti_artikl";
        try{
            sqlResult = SqlQuery(sqlString);
        }catch(ex){
            MessageBox(ex);
        }
        if(sqlResult.length > 1){
            artiklNaziv = sqlResult[1][0];
        }
        else{
            MessageBox("Artikl ne postoji.");
            artikl = "";
            artiklNaziv = "";
            return false;
        }
    }
}

//==============================================================
function cePartner@clicked()
{
    //F2ListQueryString = "SELECT distinct [NKPR_GL_CUSCOD], [NKSC_PARTNAME], CASE WHEN nksc_cust_vend= 'K' THEN 'Kupac' WHEN nksc_cust_vend= 'D' THEN 'Dobavljač' ELSE 'Kup/Dob' END as PartnerTip FROM  " + trenutnaGodinaBaza + ".[dbo].[NKPRGLOT] LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[NKSCPART] ON NKSC_PARTCODE = NKPR_GL_CUSCOD where NKSC_PARTCODE like '%{var1}%' and NKSC_PARTNAME like '%{var2}%' AND YEAR(nkpr_gl_esd) = " + ovagod_h + " ORDER BY NKPR_GL_CUSCOD";
    
    F2ListQueryString = "WITH partneri AS("
    + " SELECT DISTINCT rmpr_partner, nksc_partname, CASE WHEN nksc_cust_vend = 'K' THEN 'Kupac' WHEN nksc_cust_vend = 'D' THEN 'Dobavljač' ELSE 'Kup/Dob' END AS PartnerTip "
    + " FROM " + trenutnaGodinaBaza + ".[dbo].[nkmkprom] "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[nkscpart] ON nksc_partcode = rmpr_partner"
    + " WHERE nksc_partcode LIKE '%{var1}%' AND nksc_partname LIKE '%{var2}%' "
    + " AND YEAR(rmpr_datum_dok) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY rmpr_partner ASC) AS RowNumber, rmpr_partner, nksc_partname, PartnerTip"
    + " FROM partneri ORDER BY RowNumber";

    sifraFieldPointer -> partner;
    NazivFieldPointer -> PartnerNaziv;

    windowTitle = "F2 lista Partnera";
    headersArray = {"R.br.", "Šifra partnera", "Naziv partnera", "Kupac/Dobavljač"};
    ShowF2List();
    
    if(&sifraFieldPointer != ""){
        partner = strtrim(&sifraFieldPointer);
        partnerNaziv = (&NazivFieldPointer);
    }
    else
    {
        partner = "";
        partnerNaziv = "";
    }
    searchSifra = "";
    searchNaziv = "";
}

function cePartner@post()
{
    if (partner == "")
    {
        partnerNaziv = "";
    }
    else{
        sqlResult = {};
        sqlString = "SELECT TOP 1 NKSC_PARTNAME FROM  " + trenutnaGodinaBaza + ".[dbo].[NKSCPART] where NKSC_PARTCODE = '" + partner + "' ORDER BY nksc_partcode";
        try{
            sqlResult = SqlQuery(sqlString);
        }catch(ex){
            MessageBox(ex);
        }
        if(sqlResult.length > 1){
            partnerNaziv = sqlResult[1][0];
        }
        else{
            MessageBox("Partner ne postoji.");
            partner = "";
            partnerNaziv = "";
            return false;
        }
    }
}

//==============================================================
// function ceIsporuka@clicked()
// {
//     if(partner.length == 0){
//         MessageBox("Molim unesite šifru partnera za izbor isporučnog mjesta.");
//         return;
//     }

//     //F2ListQueryString = "SELECT [NKSP_AD_CODEINT]  ,[NKSP_ad_naziv1] FROM  " + trenutnaGodinaBaza + ".[dbo].[NKSPADRS] where nksp_ad_code = " + partner + " AND NKSP_AD_CODEINT like '%{var1}%' and NKSP_AD_NAZIV1 like '%{var2}%' ORDER BY nksp_ad_codeint";    
    
//     F2ListQueryString = "WITH isporucnaMjesta AS("
//     + " SELECT DISTINCT nkpr_gl_shpcod, TRIM(nksp_ad_naziv1) + ' ' + TRIM(nksp_ad_naziv) as naziv "
//     + " FROM " + trenutnaGodinaBaza + ".[dbo].nkprglot "
//     + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[nkspadrs] ON nksp_ad_codeint = nkpr_gl_shpcod AND nksp_ad_code = nkpr_gl_cuscod"
//     + " WHERE nksp_ad_code = '" + partner + "' AND nksp_ad_codeint LIKE '%{var1}%' AND (nksp_ad_naziv1 LIKE '%{var2}%' OR nksp_ad_naziv LIKE '%{var2}%') "
//     + " AND YEAR(nkpr_gl_esd) = " + ovagod_h
//     + ")"
//     + " SELECT ROW_NUMBER() OVER(ORDER BY nkpr_gl_shpcod ASC) AS RowNumber, nkpr_gl_shpcod, naziv"
//     + " FROM isporucnaMjesta ORDER BY RowNumber";

//     sifraFieldPointer -> isporuka;
//     NazivFieldPointer -> isporukaNaziv;

//     windowTitle = "F2 lista isporuka za partnera: " + partner;
//     headersArray = {"R.br.", "Šifra isporuke", "Naziv isporučnog mjesta"};
//     ShowF2List();
    
//     if(&sifraFieldPointer != ""){
//         isporuka = strtrim(&sifraFieldPointer);
//         isporukaNaziv = (&NazivFieldPointer);
//     }
//     else
//     {
//         isporuka = "";
//         isporukaNaziv = "";
//     }
//     searchSifra = "";
//     searchNaziv = "";
// }

// function ceIsporuka@post()
// {
//     if (isporuka == "")
//     {
//         isporukaNaziv = "";
//     }
//     else{
//         if(partner.length == 0){
//             MessageBox("Molim unesite šifru partnera za izbor isporučnog mjesta.");
//             isporuka = "";
//             isporukaNaziv = "";
//             //SetFocus("cePartner");
//             return;
//         }

//         sqlResult = {};
//         sqlString = "SELECT TOP 1 TRIM(nksp_ad_naziv1) + ' ' + TRIM(nksp_ad_naziv) as naziv FROM  " + trenutnaGodinaBaza + ".[dbo].[nkspadrs] WHERE nksp_ad_code = '" + partner + "' AND nksp_ad_codeint = '" + isporuka + "' ORDER BY nksp_ad_codeint";
//         try{
//             sqlResult = SqlQuery(sqlString);
//         }catch(ex){
//             MessageBox(ex);
//         }
//         if(sqlResult.length > 1){
//             isporukaNaziv = sqlResult[1][0];
//         }
//         else{
//             MessageBox("Isporučno mjesto zadanog partnera ne postoji.");
//             isporuka = "";
//             isporukaNaziv = "";
//             return false;
//         }
//     }
// }

// //===================================================================
// function ceRegija@clicked()
// {
//     //F2ListQueryString = "SELECT [KSDU_SF_CODE], [KSDU_SF_OPIS1] FROM  " + trenutnaGodinaBaza + ".[dbo].[KPSYSIFA] WHERE [KSDU_SF_TIP] ='V' and KSDU_SF_CODE like '%{var1}%' and KSDU_SF_OPIS1 like '%{var2}%' ORDER BY ksdu_sf_code";
    
//     F2ListQueryString = "WITH regije AS("
//     + " SELECT DISTINCT ksdu_sf_code, ksdu_sf_opis1 "
//     + " FROM " + trenutnaGodinaBaza + ".[dbo].[nkprglot] "
//     + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[nkscpart] ON nksc_partcode = nkpr_gl_cuscod "
//     + " LEFT JOIN " + CommonDBGet() + ".[dbo].[kpsysifa] ON nksc_regija = ksdu_sf_code "
//     + " WHERE ksdu_sf_tip ='V' AND ksdu_sf_code LIKE '%{var1}%' AND ksdu_sf_opis1 LIKE '%{var2}%' "
//     + " AND YEAR(nkpr_gl_esd) = " + ovagod_h
//     + ")"
//     + " SELECT ROW_NUMBER() OVER(ORDER BY ksdu_sf_code ASC) AS RowNumber, ksdu_sf_code, ksdu_sf_opis1"
//     + " FROM regije ORDER BY RowNumber";

//     sifraFieldPointer -> regija;
//     NazivFieldPointer -> RegijaNaziv;

//     windowTitle = "F2 lista Regija";
//     headersArray = {"R.br.", "Šifra Regije", "Naziv Regije"};
//     ShowF2List();
//     if(&sifraFieldPointer != ""){
//         regija = strtrim(&sifraFieldPointer);
//         regijaNaziv = &NazivFieldPointer;
//     }
//     else{
//         regija = "";
//         regijaNaziv = "";
//     }
//     searchSifra = "";
//     searchNaziv = "";
// }

// function ceRegija@post()
// {
//     if (regija == "")
//     {
//         regijaNaziv = "";
//     }
//     else{
//         sqlResult = {};
//         sqlString = "SELECT TOP 1 [ksdu_sf_opis1] FROM  " + CommonDBGet() + ".[dbo].[kpsysifa] WHERE [ksdu_sf_tip] ='V' and ksdu_sf_code = '" + regija + "' ORDER BY ksdu_sf_code";
//         try{
//             sqlResult = SqlQuery(sqlString);
//         }catch(ex){
//             MessageBox(ex);
//         }
//         if(sqlResult.length > 1){
//             regijaNaziv = sqlResult[1][0];
//         }
//         else{
//             MessageBox("Regija ne postoji.");
//             regija = "";
//             regijaNaziv = "";
//             return false;
//         }
//     }
// }

//===================================================================
function ceKategorija@clicked()
{
    //F2ListQueryString = "SELECT mkgr_grupa, SUBSTRING(mkgr_rezerva,1,50) as mkgr_rezerva FROM  " + trenutnaGodinaBaza + ".[dbo].[pkmkgrup] WHERE [mkgr_vrsta] ='K' and mkgr_grupa like '%{var1}%' AND SUBSTRING(mkgr_rezerva,1,50) like '%{var2}%' ORDER BY mkgr_grupa";
    
    F2ListQueryString = "WITH kategorije AS("
    + " SELECT DISTINCT mkgr_grupa, CASE WHEN SUBSTRING(mkgr_rezerva,1,50) <> '' THEN SUBSTRING(mkgr_rezerva,1,50) ELSE mkgr_naziv END AS naziv "
    + " FROM  " + trenutnaGodinaBaza + ".[dbo].[nkmkprom] "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[nkmkarti] ON arti_artikl = rmpr_artikl "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[pkmkgrup] ON arti_kategorija = mkgr_grupa AND mkgr_vrsta ='K'"
    + " WHERE mkgr_grupa LIKE '%{var1}%' "
    + " AND YEAR(rmpr_datum_dok) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY mkgr_grupa ASC) AS RowNumber, mkgr_grupa, naziv"
    + " FROM kategorije WHERE mkgr_grupa IS NOT NULL AND naziv LIKE '%{var2}%' ORDER BY RowNumber";

    sifraFieldPointer -> kategorija;
    NazivFieldPointer -> kategNaziv;

    windowTitle = "F2 lista Kategorija";
    headersArray = {"R.br.", "Kategorija", "Naziv kategorije"};
    ShowF2List();
    if(&sifraFieldPointer != ""){
        kategorija = strtrim(&sifraFieldPointer);
        kategNaziv = &NazivFieldPointer;
    }
    else{
        kategorija = "";
        kategNaziv = "";
    }
    searchSifra = "";
    searchNaziv = "";
}

function ceKategorija@post()
{
    if (kategorija == "")
    {
        kategNaziv = "";
    }
    else{
        sqlResult = {};
        sqlString = "SELECT TOP 1 CASE WHEN SUBSTRING(mkgr_rezerva,1,50) <> '' THEN SUBSTRING(mkgr_rezerva,1,50) ELSE mkgr_naziv END AS naziv FROM  " + trenutnaGodinaBaza + ".[dbo].[pkmkgrup] WHERE [mkgr_vrsta] ='K' and mkgr_grupa = '" + kategorija + "' ORDER BY mkgr_grupa";
        try{
            sqlResult = SqlQuery(sqlString);
        }catch(ex){
            MessageBox(ex);
        }
        if(sqlResult.length > 1){
            kategNaziv = sqlResult[1][0];
        }
        else{
            MessageBox("Kategorija ne postoji.");
            kategorija = "";
            kategNaziv = "";
            return false;
        }
    }
}

//====================================================================
function ceKlasa@clicked()
{
    //F2ListQueryString = "SELECT mkgr_grupa, SUBSTRING(mkgr_rezerva,1,50) FROM  " + trenutnaGodinaBaza + ".[dbo].[pkmkgrup] WHERE [mkgr_vrsta] ='L' and mkgr_grupa like '%{var1}%' AND SUBSTRING(mkgr_rezerva,1,50) like '%{var2}%' ORDER BY mkgr_grupa";
    
    F2ListQueryString = "WITH klase AS("
    + " SELECT DISTINCT mkgr_grupa, CASE WHEN SUBSTRING(mkgr_rezerva,1,50) <> '' THEN SUBSTRING(mkgr_rezerva,1,50) ELSE mkgr_naziv END AS naziv "
    + " FROM  " + trenutnaGodinaBaza + ".[dbo].[nkmkprom] "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[nkmkarti] ON arti_artikl = rmpr_artikl "
    + " LEFT JOIN " + trenutnaGodinaBaza + ".[dbo].[pkmkgrup] ON arti_klasa = mkgr_grupa AND [mkgr_vrsta] ='L'"
    + " WHERE mkgr_grupa LIKE '%{var1}%'"
    + " AND YEAR(rmpr_datum_dok) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY mkgr_grupa ASC) AS RowNumber, mkgr_grupa, naziv"
    + " FROM klase WHERE mkgr_grupa IS NOT NULL AND naziv LIKE '%{var2}%' ORDER BY RowNumber";

    sifraFieldPointer -> klasa;
    NazivFieldPointer -> klasaNaziv;

    windowTitle = "F2 lista Klasa";
    headersArray = {"R.br.", "Klasa", "Naziv klase"};
    ShowF2List();
    if(&sifraFieldPointer != ""){
        klasa = strtrim(&sifraFieldPointer);
        klasaNaziv = &NazivFieldPointer;
    }
    else{
        klasa = "";
        klasaNaziv = "";
    }
    searchSifra = "";
    searchNaziv = "";
}

function ceKlasa@post()
{
    if (klasa == "")
    {
        klasaNaziv = "";
    }
    else{
        sqlResult = {};
        sqlString = "SELECT TOP 1 CASE WHEN SUBSTRING(mkgr_rezerva,1,50) <> '' THEN SUBSTRING(mkgr_rezerva,1,50) ELSE mkgr_naziv END AS naziv FROM  " + trenutnaGodinaBaza + ".[dbo].[pkmkgrup] WHERE [mkgr_vrsta] ='L' and mkgr_grupa = '" + klasa + "' ORDER BY mkgr_grupa";
        try{
            sqlResult = SqlQuery(sqlString);
        }catch(ex){
            MessageBox(ex);
        }
        if(sqlResult.length > 1){
            klasaNaziv = sqlResult[1][0];
        }
        else{
            MessageBox("Klasa ne postoji.");
            klasa = "";
            klasaNaziv = "";
            return false;
        }
    }
}

//====================================================================
// !!!!!!!!!!!!!!!!!!!!!!!
// neOrganizacijskaJedinica
function neOrganizacijskaJedinica@clicked()
{
    //F2ListQueryString = "SELECT kppr_rf_code, kppr_rf_prezime+ ' '+kppr_rf_ime FROM  " + trenutnaGodinaBaza + ".[dbo].[kpprrefr] WHERE kppr_rf_code like '%{var1}%' AND kppr_rf_prezime like '%{var2}%' ORDER BY kppr_rf_code";

    F2ListQueryString = "WITH organizacijskeJedinice AS("
    + " SELECT DISTINCT trim(rmpr_objed) as sifraOrgJed, isnull(NKGK_OJ_NAZIV, 'nema naziva') as nazivOrgJed "
    + " FROM  " + trenutnaGodinaBaza + ".[dbo].[nkmkprom]"
    + " LEFT JOIN  " + trenutnaGodinaBaza + ".[dbo].[nkgkoj] ON nkgk_oj_code = rmpr_objed"
    + " WHERE nkgk_oj_code LIKE '%{var1}%' AND NKGK_OJ_NAZIV LIKE '%{var2}%' "
    + " AND YEAR(rmpr_datum_dok) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY sifraOrgJed ASC) AS RowNumber, sifraOrgJed, nazivOrgJed"
    + " FROM organizacijskeJedinice ORDER BY RowNumber";
    
    sifraFieldPointer -> organizacijskaJedinica;
    NazivFieldPointer -> organizacijskaJedinicaNaziv;

    windowTitle = "F2 lista organizacijskih jedinica";
    headersArray = {"R.br.   ", "Šifra org. jed.   ", "Naziv org. jed.                                                                                                      "};
    ShowF2List();
    if(&sifraFieldPointer != ""){
        organizacijskaJedinica = strtrim(&sifraFieldPointer);
        organizacijskaJedinicaNaziv = &NazivFieldPointer;
    }
    else{
        organizacijskaJedinica = "";
        organizacijskaJedinicaNaziv = "";
    }
    searchSifra = "";
    searchNaziv = "";
}

// !!!!!!!!!!!!!!!!!!!!!!!
// neOrganizacijskaJedinica
function neOrganizacijskaJedinica@post()
{
    if (organizacijskaJedinica == "")
    {
        organizacijskaJedinicaNaziv = "";
    }
    else{
        sqlResult = {};
        sqlString = "SELECT TOP 1 trim(nkgk_oj_naziv) as nazivOrgJed FROM  " + trenutnaGodinaBaza + ".[dbo].[nkgkoj] WHERE nkgk_oj_code = '" + organizacijskaJedinica + "' ORDER BY nkgk_oj_code";
        try{
            sqlResult = SqlQuery(sqlString);
        }catch(ex){
            MessageBox(ex);
        }
        if(sqlResult.length > 1){
            organizacijskaJedinicaNaziv = sqlResult[1][0];
        }
        else{
            MessageBox("Organizacijska jedinica ne postoji.");
            organizacijskaJedinica = "";
            organizacijskaJedinicaNaziv = "";
            return false;
        }
    }
}

//====================================================================
function neRnalog@clicked()
{
    //F2ListQueryString = "SELECT nkpr_gl_nalog, nkpr_gl_cusnme FROM  " + trenutnaGodinaBaza + ".[dbo].[nkprglnl] WHERE nkpr_gl_nalog like '{var1}%' AND nkpr_gl_cusnme like '%{var2}%' ORDER BY nkpr_gl_nalog";
    
    F2ListQueryString = "WITH radniNalozi AS("
    + " SELECT DISTINCT a.RMPR_RADNI_NALG, c.nkpr_gl_cusnme "
    + " FROM  " + trenutnaGodinaBaza + ".[dbo].[nkmkprom] a"
    + " LEFT JOIN  " + trenutnaGodinaBaza + ".[dbo].[nkprglnl] c ON RMPR_RADNI_NALG = c.nkpr_gl_nalog"
    + " WHERE c.nkpr_gl_nalog LIKE '{var1}%' AND c.nkpr_gl_cusnme LIKE '%{var2}%' "
    + " AND YEAR(a.rmpr_datum_dok) = " + ovagod_h
    + ")"
    + " SELECT ROW_NUMBER() OVER(ORDER BY RMPR_RADNI_NALG ASC) AS RowNumber, RMPR_RADNI_NALG, nkpr_gl_cusnme"
    + " FROM radniNalozi ORDER BY RowNumber";

    sifraFieldPointer -> rnalog;
    NazivFieldPointer -> rnalogNaziv;

    windowTitle = "F2 lista Radnih naloga";
    headersArray = {"R.br.", "Broj", "Naziv kupca"};
    ShowF2List();
    if(&sifraFieldPointer != ""){
        rnalog = strtrim(&sifraFieldPointer);
        rnalogNaziv = &NazivFieldPointer;
    }
    else{
        rnalog = "";
        rnalogNaziv = "";
    }
    searchSifra = "";
    searchNaziv = "";
}

function neRnalog@post()
{
    if (rnalog == "")
    {
        rnalogNaziv = "";
    }
    else{
        sqlResult = {};
        sqlString = "SELECT TOP 1 nkpr_gl_cusnme FROM  " + trenutnaGodinaBaza + ".[dbo].[nkprglnl] WHERE nkpr_gl_nalog = '" + rnalog + "' ORDER BY nkpr_gl_nalog";
        try{
            sqlResult = SqlQuery(sqlString);
        }catch(ex){
            MessageBox(ex);
        }
        if(sqlResult.length > 1){
            rnalogNaziv = sqlResult[1][0];
        }
        else{
            MessageBox("Radni nalog ne postoji.");
            rnalog = "";
            rnalogNaziv = "";
            return false;
        }
    }
}

//-------------------------------------------------------------

function filterPart()
{
    filterPartNKMKPROM();
    filterPartNKMKARTI();
}

function filterPartNKMKPROM(){
    if (sklad_str != "")
	{
        sql_str += " AND rmpr_skladiste IN (" + sklad_str + ")";
	}


    //Izvor dokumenta
    if (GL_oznaka != "")
	{
        sql_str += " AND RMPR_IZVOR_DOK = '" + GL_oznaka + "' ";
	}


    if (artikl != "")
	{
        sql_str += " AND rmpr_artikl = '" + artikl + "'";
	}

    if (partner != "")
	{
        sql_str += " AND rmpr_partner = '" + partner + "'";
	}

    if (organizacijskaJedinica != "")
	{
        sql_str += " AND rmpr_objed = '" + organizacijskaJedinica + "'";
	}
    
    if (rnalog != "")
	{
        sql_str += " AND rmpr_radni_nalg = '" + rnalog + "'";
	}


}


function filterPartNKMKARTI(){
    sql_str += " AND ARTI_TIP not in ('N', 'O', 'P', 'A') ";
    
    //Vrsta artikala
    if (sve_dn)
	{
        sql_str += "";
	}
    elif (standardni_dn)
	{
        sql_str += " AND ARTI_TIP = 'R' ";
	}
    elif (gotoviProizvodi_dn)
	{
        sql_str +=  " AND ARTI_TIP = 'G' ";
	}
    elif (poluproizvodi_dn)
	{
        sql_str += " AND ARTI_TIP = 'S' ";
	}


    if (kategorija != "")
	{
        sql_str += " AND arti_kategorija = '" + kategorija + "'";
	}

    if (klasa != "")
	{
        sql_str += " AND arti_klasa = '" + klasa + "'";
	}
}


