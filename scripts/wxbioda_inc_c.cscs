function wxbiodac_onStart()
{
    cursor("wait");
    //t10datrac=true;
    

    // comboItems = {"do 18", "19-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65 i više"};
    comboItems = {"Broj radnika", "Prosječni bruto iznos", "Prosječni neto iznos"};
    AddWidgetData("comboBoxDobneSkupine", comboItems);
    SetWidgetOptions("comboBoxDobneSkupine", "SelectedIndex", 0);


    setChartDobneSkupine();


    // setChartByDaysOfMonthOdliv();
    // //
    // Chart("ChartPoMjesecima", "init");
    // //Chart("ChartPoMjesecima", "seriesType", "Columnseries");
    // //Chart("ChartPoMjesecima", "title", "Naslov grafa", 20);
    // // Chart("ChartPoMjesecima", "labels", "y", 13);
    // // Chart("ChartPoMjesecima", "labels", "x", 13, {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"});
    // // Chart("ChartPoMjesecima", "xlabelsRotation", 0);
    // Chart("ChartPoMjesecima", "values", "bar", arrayProslaOdliv, STRING(proslaGodina)); // !
    // Chart("ChartPoMjesecima", "values", "bar", arrayTrenutnaOdliv, STRING(ovagod_h)); //!
    // Chart("ChartPoMjesecima", "SeparatorStep", 1);
    // //Chart("ChartPoMjesecima", "Margins", {50, 20, 0, 30});
    // Chart("ChartPoMjesecima", "TooltipDecimalPlaces", 0);
    // Chart("ChartPoMjesecima", "Color.Series", { "#ffb703", "#219ebc"}); 

    // Chart("ChartPoMjesecima", "labels", "x", 13, {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"});

    // //
    // Chart("ChartPoDanima", "init");
    // //Chart("ChartPoDanima", "seriesType", "lineSeries");
    // Chart("ChartPoDanima", "title", "Po Danima");
    // //Chart("ChartPoDanima", "labels","y", 12);
    // Chart("ChartPoDanima", "labels","x", 12,  {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"});
    // //Chart("ChartPoDanima", "labels", arrayDani);
    // //Chart("ChartPoDanima", "xlabelsRotation", 0);
    // Chart("ChartPoDanima", "SeparatorStep", 1);
    // Chart("ChartPoDanima", "values", "line", arrayVrijednostiOdliv, "Dnevno");
    // Chart("ChartPoDanima", "values", "line", arrayAvr, "Prosjek7dana");
    // Chart("ChartPoDanima", "Color.Series", { "#fb8500", "#8ecae6"}); 
    // //Chart("ChartPoDanima", "Margins", {60, 20, 0, 30});
    // //
    // cntr2= 0;
    // setLast10InvoicesDataGridOdliv();
    // Format("T10IZNOSZ_AR", "nofd");
    // Format("T10IZNOSMJ_AR", "nofd");
    // DisplayArray("dgRacuniLast", "close");
    // DisplayArraySetup("dgRacuniLast", counterFld: cntr2, activeElements: Size(sqlResult2) - 1, maxElements: 10);
    // //
	// DisplayArray("dgRacuniMjesec", "close");
	// //DisplayArraySetup("dgRacuniMjesec", counterFld: "cntr3", activeElements: Size(sqlResult) - 1, maxElements: 10);
    // setTop10InvoicesDataGridOdliv();
    // cntr3 = 0;
	// DisplayArraySetup("dgRacuniMjesec", counterFld: cntr3, activeElements: Size(sqlResult) - 1, maxElements: 10);


    cursor("dflt");
}

function comboBoxDobneSkupine@SelectionChanged(){
	initChartDobneSkupine();
}

function initChartDobneSkupine(){
	Chart("ChartDobneSkupine", "init");
    //Chart("ChartDobneSkupine", "seriesType", "Columnseries");
    //Chart("ChartDobneSkupine", "title", "Naslov grafa", 20);
    // Chart("ChartDobneSkupine", "labels", "y", 13);
    // Chart("ChartDobneSkupine", "labels", "x", 13, {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"});
    // Chart("ChartDobneSkupine", "xlabelsRotation", 0);
	if(dobneSkupine_cb == "Broj radnika"){		
        Chart("ChartDobneSkupine", "values", "bar", arrayBrojRadnikaDobneSkupine, "Broj radnika");
        // Chart("ChartDobneSkupine", "values", "bar", arrayTrenutnaBrutoMedian, godina1);
	}
	elif(dobneSkupine_cb == "Prosječni bruto iznos"){
        Chart("ChartDobneSkupine", "values", "bar", arrayProsjecnaBrutoPlacaDobneSkupine, "Prosječni bruto iznos");
    	// Chart("ChartDobneSkupine", "values", "bar", arrayTrenutnaNetoMedian, godina1);
	}
	elif(dobneSkupine_cb == "Prosječni neto iznos"){
        Chart("ChartDobneSkupine", "values", "bar", arrayProsjecnaNetoPlacaDobneSkupine, "Prosječni neto iznos");
    	// Chart("ChartDobneSkupine", "values", "bar", arrayTrenutnaNetoMedian, godina1);
	}
    Chart("ChartDobneSkupine", "SeparatorStep", 1);
    //Chart("ChartDobneSkupine", "Margins", {50, 20, 0, 30});
    Chart("ChartDobneSkupine", "TooltipDecimalPlaces", 0);
    Chart("ChartDobneSkupine", "Color.Series", { "#ffb703", "#219ebc"}); 

    Chart("ChartDobneSkupine", "labels", "x", 13, {"do 18", "19-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65 i više"});
    Chart("ChartDobneSkupine", "xlabelsrotation", 90);
    //MessageBox(arrayBrojRadnikaDobneSkupine);
}

function setChartDobneSkupine()
{
    sql_str = "WITH cte AS (";
    sql_str += " select distinct";
    sql_str += " OD_MS_BR_RAD,";    

    sql_str += " CASE WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 0 AND 18 THEN '0-18'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 19 AND 24 THEN '19-24'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 25 AND 29 THEN '25-29'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 30 AND 34 THEN '30-34'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 35 AND 39 THEN '35-39'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 40 AND 44 THEN '40-44'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 45 AND 49 THEN '45-49'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 50 AND 54 THEN '50-54'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 55 AND 59 THEN '55-59'";
    sql_str += " WHEN (CASE WHEN od_ms_dat_rod = '1900-01-01' THEN 0 WHEN EOMONTH ('2024' + '-01-01', 11 - 1 ) < od_ms_dat_rod THEN 0 ELSE ((CONVERT(int, CONVERT(char(8), EOMONTH ('2024' + '-01-01', 11 - 1 ), 112)) - CONVERT(char(10), od_ms_dat_rod, 112)) / 10000) END) BETWEEN 60 AND 64 THEN '60-64'";
    sql_str += " ELSE '65-'";
    sql_str += " END as dobnaSkupina,";

    SQL_str +=" round(isnull((SELECT ";
    SQL_str +=" avg(bruto) from (SELECT ";
    // SQL_str +=" sum(CASE WHEN odob_ln_vrsta IN ('A', 'C', 'E', 'G') THEN odob_ln_ukupno WHEN odob_ln_vrsta IN ('I') THEN ODOB_LN_IZNOS ELSE 0 END) as bruto ";
    SQL_str +=" sum(CASE WHEN odob_ln_vrsta IN ('A', 'C', 'E', 'G') THEN odob_ln_ukupno ELSE 0 END) as bruto ";
    SQL_str +=" from " + trenutnaGodinaBaza + ".dbo.nkodobln ";
    SQL_str +=" LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkodobgl ON ODOB_GL_NUM = ODOB_LN_NUM ";
    SQL_str +=" where ODOB_LN_OSOBA = OD_MS_BR_RAD ";
    if(comboBoxMjesec1selected == "Obračun za mjesec"){
        SQL_str +=" and ODOB_GL_GOD = '" + godina1 + "' ";
        sql_str += " AND convert(int,odob_gl_mjesec) >= " + mjesec1od + " ";
        sql_str += " AND convert(int,odob_gl_mjesec) <= " + mjesec1do + " ";
        sql_str += " group by convert(int,odob_gl_mjesec), convert(int,odob_gl_god)";
    }elif(comboBoxMjesec1selected == "Mjesec isplate plaće"){
        SQL_str +=" and year(odob_gl_dat_isp) = " + godina1 + " ";
        sql_str += " AND month(odob_gl_dat_isp) >= " + mjesec1od + " ";
        sql_str += " AND month(odob_gl_dat_isp) <= " + mjesec1do + " ";
        sql_str += " group by month(odob_gl_dat_isp), year(odob_gl_dat_isp)";
    }elif(comboBoxMjesec1selected == "Mjesec obračuna plaće"){
        SQL_str +=" and year(odob_gl_datum) = " + godina1 + " ";
        sql_str += " AND month(odob_gl_datum) >= " + mjesec1od + " ";
        sql_str += " AND month(odob_gl_datum) <= " + mjesec1do + " ";
        sql_str += " group by month(odob_gl_datum), year(odob_gl_datum)";
    }
    SQL_str +=" ) x), 0), 2) as prosjecnaPlacaBruto, ";
    
    SQL_str +=" round(isnull((SELECT ";
    SQL_str +=" avg(neto) from (SELECT ";
    // SQL_str +=" sum(CASE WHEN odob_ln_vrsta IN ('A', 'C', 'E', 'G') THEN odob_ln_neto WHEN odob_ln_vrsta IN ('I') THEN ODOB_LN_IZNOS ELSE 0 END) as neto ";
    SQL_str +=" sum(CASE WHEN odob_ln_vrsta IN ('A', 'C', 'E', 'G') THEN odob_ln_neto ELSE 0 END) as neto ";
    SQL_str +=" from " + trenutnaGodinaBaza + ".dbo.nkodobln ";
    SQL_str +=" LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkodobgl ON ODOB_GL_NUM = ODOB_LN_NUM ";
    SQL_str +=" where ODOB_LN_OSOBA = OD_MS_BR_RAD ";
    if(comboBoxMjesec1selected == "Obračun za mjesec"){
        SQL_str +=" and ODOB_GL_GOD = '" + godina1 + "' ";
        sql_str += " AND convert(int,odob_gl_mjesec) >= " + mjesec1od + " ";
        sql_str += " AND convert(int,odob_gl_mjesec) <= " + mjesec1do + " ";
        sql_str += " group by convert(int,odob_gl_mjesec), convert(int,odob_gl_god)";
    }elif(comboBoxMjesec1selected == "Mjesec isplate plaće"){
        SQL_str +=" and year(odob_gl_dat_isp) = " + godina1 + " ";
        sql_str += " AND month(odob_gl_dat_isp) >= " + mjesec1od + " ";
        sql_str += " AND month(odob_gl_dat_isp) <= " + mjesec1do + " ";
        sql_str += " group by month(odob_gl_dat_isp), year(odob_gl_dat_isp)";
    }elif(comboBoxMjesec1selected == "Mjesec obračuna plaće"){
        SQL_str +=" and year(odob_gl_datum) = " + godina1 + " ";
        sql_str += " AND month(odob_gl_datum) >= " + mjesec1od + " ";
        sql_str += " AND month(odob_gl_datum) <= " + mjesec1do + " ";
        sql_str += " group by month(odob_gl_datum), year(odob_gl_datum)";
    }
    SQL_str +=" ) x), 0), 2) as prosjecnaPlacaNeto";

    // SQL_str +=" FROM " + trenutnaGodinaBaza + ".dbo.nkodradn ";
    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkodobgl";
    //sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkodobos on odob_gl_num = odob_os_num";
	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkodobln ON odob_gl_num = odob_ln_num";
	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkodradn ON od_ms_br_rad = odob_ln_osoba";

    sql_str += " WHERE "; 
    if(comboBoxMjesec1selected == "Obračun za mjesec"){
        sql_str += " odob_gl_god = " + godina1;
        sql_str += " AND convert(int, odob_gl_mjesec) >= " + int(mjesec1od) + " AND convert(int, odob_gl_mjesec) <= " + int(mjesec1do);
    }elif(comboBoxMjesec1selected == "Mjesec isplate plaće"){
        sql_str += " year(ODOB_GL_DAT_ISP) = " + godina1;
        sql_str += " AND month(ODOB_GL_DAT_ISP) >= " + int(mjesec1od) + " AND month(ODOB_GL_DAT_ISP) <= " + int(mjesec1do);
    }elif(comboBoxMjesec1selected == "Mjesec obračuna plaće"){
        sql_str += " year(ODOB_GL_DATUM) = " + godina1;
        sql_str += " AND month(ODOB_GL_DATUM) >= " + int(mjesec1od) + " AND month(ODOB_GL_DATUM) <= " + int(mjesec1do);
    }

    filterPart();

    sql_str += " ) SELECT";
    sql_str += " dobnaSkupina1,";
    sql_str += " Count(dobnaSkupina) as brojRadnika,";
    sql_str += " isnull(round(avg(prosjecnaPlacaBruto), 2), 0) as avgProsjecnaBrutoPlaca,";
    sql_str += " isnull(round(avg(prosjecnaPlacaNeto), 2), 0) as avgProsjecnaNetoPlaca";
    
    sql_str += " from";
    sql_str += " (SELECT DISTINCT * FROM (VALUES ('0-18'), ('19-24'), ('25-29'), ('30-34'), ('35-39'), ('40-44'), ('45-49'), ('50-54'), ('55-59'), ('60-64'), ('65-')) AS X(dobnaSkupina1)) dobneSkupine";
    sql_str += " left join cte on dobnaSkupina = dobnaSkupina1";
    sql_str += " group by dobnaSkupina1 order by dobnaSkupina1";

    try
    {
        //SaveFile(sql_str);
        queryResult = sqlquery(sql_str);
        //MessageBox(queryResult);
    }catch(exc)
    {
        MessageBox(exc);
    }

    for(i = 0; i < 11; i++){
        arrayBrojRadnikaDobneSkupine[i] = 0;
        arrayProsjecnaBrutoPlacaDobneSkupine[i] = 0;
        arrayProsjecnaNetoPlacaDobneSkupine[i] = 0;
    }

    for(i = 1; i < queryResult.length; i++)
    {
        //MessageBox(queryResult[i][1]);
        arrayBrojRadnikaDobneSkupine[i - 1] = queryResult[i][1];
        arrayProsjecnaBrutoPlacaDobneSkupine[i - 1] = queryResult[i][2];
        arrayProsjecnaNetoPlacaDobneSkupine[i - 1] = queryResult[i][3];
    }

    initChartDobneSkupine();
}




// function setChartByDaysOfMonthOdliv()
// {
//     sql_str = "WITH cte AS (";
//     sql_str += " SELECT DAY(kdib_gl_datum) as dan2, SalesDay=ISNULL(SUM(CASE WHEN kdib_ln_dp='D' THEN kdib_ln_iznos ELSE 0 END), 0) ";
    
//     sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpkdibgl ";
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.kpkdibln ON kdib_ln_num = kdib_gl_num";
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.kpsybank ON kdib_gl_banka = kpsy_bnk_code";
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart ON kdib_ln_partner = nksc_partcode";
//     sql_str += " WHERE 1 = 1";
//     if (do_mjeseca)
//     {
//         sql_str += " AND MONTH(kdib_gl_datum) <= '" + mjesec_h + "' AND YEAR(kdib_gl_datum) = '" + ovagod_h + "'";
//     }
//     else
//     {
//         sql_str += " AND MONTH(kdib_gl_datum) = '" + mjesec_h + "' AND YEAR(kdib_gl_datum) = '" + ovagod_h + "'";
//     }
//     filterPart();
//     sql_str += " GROUP BY DAY(kdib_gl_datum)";
//     sql_str += ")";
//     sql_str += "SELECT wk_day,ISNULL(max(salesday), 0) as salesday";
//     sql_str += ",ISNULL(AVG(max(salesday)) OVER(ORDER BY wk_day ROWS BETWEEN 6 PRECEDING AND CURRENT ROW), 0) AS moving_average_3_days";
//     sql_str += " FROM " + CommonDBGet() + ".dbo.Kalendar";
//     sql_str += " LEFT JOIN cte ON wk_day = dan2";
//     sql_str += " WHERE WK_month <= '" + mjesec_h + "' and wk_Year= '" + ovagod_h + "'";
//     sql_str += " GROUP BY wk_day";
//     sql_str += " ORDER BY wk_day";
//     //----------------------------------------------------
//     try
//     {
//         //SaveFile(sql_str);
//         queryResult = sqlquery(sql_str);
//     }catch(exc)
//     {
//         MessageBox(exc);
//     }
    
//     arrayDani = {};
//     arrayVrijednostiOdliv = {};
//     arrayAvr = {};
//     for(i = 1; i < queryResult.length; i++)
//     {
//         arrayDani.add(string(queryResult[i][0]));
//         arrayVrijednostiOdliv.add(queryResult[i][1]);
//         arrayAvr.add(queryResult[i][2]);
//     }
// }



// function setChartByMonth()
// {
//     SQL_str = "SET query_governor_cost_limit 0;";
//     if ( proslaGodinaBaza != "" )
//     {
//         sql_str += "SELECT '0' as tip,CONVERT(varchar(6),kdib_gl_datum,112) as yyyymm,sum(CASE WHEN kdib_ln_dp='D' THEN kdib_ln_iznos ELSE 0 END) AS Odliv, sum(CASE WHEN kdib_ln_dp='D' THEN kdib_ln_iznos ELSE 0 END) AS Priliv ";
//         sql_str += " FROM " + proslaGodinaBaza + ".dbo.kpkdibgl"; 
//         sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.kpkdibln ON kdib_gl_num= kdib_ln_num";
//         sql_str += " WHERE 1=1 AND kdib_gl_banka<> '' AND year(kdib_gl_datum) = " + lani_h; 
//         filterPart();
//         sql_str += " GROUP BY CONVERT(varchar(6),kdib_gl_datum,112)";
//         sql_str += " ORDER BY CONVERT(varchar(6),kdib_gl_datum,112);";
//         try
//         {
//              //SaveFile(sql_str);
//             queryResult = sqlquery(SQL_str);
//         }
//         catch(exc)
//         {
//             MessageBox(exc);
//         }
        
//         RunOnMain("setChartByMonth1");
//     }
    
//     //sada tekuća godina
//     sql_str = "SELECT '1' as tip, CONVERT(varchar(6), kdib_gl_datum, 112) as yyyymm, sum(CASE WHEN kdib_ln_dp='D' THEN kdib_ln_iznos ELSE 0 END) AS Odliv, sum(CASE WHEN kdib_ln_dp='D' THEN kdib_ln_iznos ELSE 0 END) AS Priliv";
//     sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpkdibgl"; 
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.kpkdibln ON kdib_gl_num = kdib_ln_num";
//     sql_str += " WHERE 1 = 1 AND kdib_gl_banka<> '' AND year(kdib_gl_datum) = " + ovagod_h; 
//     filterPart();
//     sql_str += " GROUP BY CONVERT(varchar(6), kdib_gl_datum, 112)";
//     sql_str += " ORDER BY CONVERT(varchar(6), kdib_gl_datum, 112);";
//     try
//     {
//         //SaveFile(sql_str);
//         queryResult = sqlquery(SQL_str);
//     }
//     catch(exc)
//     {
//         MessageBox(exc);
//     }

//     RunOnMain("setChartByMonth2");
// }

// function setChartByMonth1(){
//     tot_proslimj_priliv = 0;
//     tot_proslimj_odliv = 0;
//     tot_ovajmj_priliv = 0;
//     tot_ovajmj_odliv = 0;
//     tot_ovagod_priliv = 0;
//     tot_ovagod_odliv = 0;
//     tot_lani_priliv = 0;
//     tot_lani_odliv = 0;
//     //cntry= 0;
//     //sales_month_ar = {};
//     define ar_cntr type i size 2;

//     for(i = 0; i < 12; i++)
//     {
//         arrayProslaPriliv[i]= 0; 
//         arrayProslaOdliv[i] = 0;
//     }

//     for(i = 1; i <= Size(queryResult) - 1; i++)
//     {
//         ar_cntr = int(substring(queryResult[i][1], 4, 2));
//         arrayProslaPriliv[ar_cntr - 1] = math.round(queryResult[i][3]/1000,0); 
//         arrayProslaOdliv[ar_cntr - 1] = math.round(queryResult[i][2]/1000,0); 
//         // sales_month_ar[ar_cntr - 1]=queryResult[i][3];
//         if (do_mjeseca)
//         {
//             if(ar_cntr <= int(mjesec_h))
//             {
//                 tot_lani_priliv += queryResult[i][3];
//                 tot_lani_odliv += queryResult[i][2];
//             } 
//         }
//         else
//         {
//             if(ar_cntr == int(mjesec_h))
//             {   
//                 tot_lani_priliv = queryResult[i][3];
//                 tot_lani_odliv = queryResult[i][2];
//             }
//         }
//     }
// }

// function setChartByMonth2(){
//     for(i = 0; i < 12; i++)
//     {
//         arrayTrenutnaPriliv[i] = 0; 
//         arrayTrenutnaOdliv[i] = 0; 
//     }

//     for(i = 1; i <= Size(queryResult) - 1; i++)
//     {
//         ar_cntr = int(substring(queryResult[i][1], 4, 2)); //nađimo koji je to mjesec
//         arrayTrenutnaPriliv[ar_cntr-1]= math.round(queryResult[i][3]/1000,0); 
//         arrayTrenutnaOdliv[ar_cntr-1]= math.round(queryResult[i][2]/1000,0); 
//         // sales_month_ar[ar_cntr-1]=queryResult[i][3];
//         mjesec_h0X = mjesec_h.length == 1 ? "0" + mjesec_h : mjesec_h;
//         proslimjesec = string(int(mjesec_h) - 1); // 1
//         proslimjesec0X = proslimjesec.length == 1 ? "0" + proslimjesec : proslimjesec;
//         if (do_mjeseca)
//         {
//             if(ar_cntr <= int(mjesec_h))
//             {
//                 tot_ovagod_priliv += queryResult[i][3];
//                 tot_ovagod_odliv += queryResult[i][2];
//             } 
//         }
//         else
//         {
//             if(ar_cntr == int(mjesec_h))
//             {   
//                 tot_ovagod_priliv =  queryResult[i][3];   
//                 tot_ovagod_odliv =  queryResult[i][2];   
//             }
//         }
//         if (ovagod_h + mjesec_h0X == queryResult[i][1])
//         {   
//             //Ovaj mjesec
//             tot_ovajmj_priliv = queryResult[i][3];
//             tot_ovajmj_odliv = queryResult[i][2];
//         }
//         elif (ovagod_h + proslimjesec0X == queryResult[i][1])
//         {
//             tot_proslimj_priliv = queryResult[i][3];
//             tot_proslimj_odliv = queryResult[i][2];
//         }
//     }
// }

//--------------------------------------------------------

// function setLast10InvoicesDataGridOdliv()
// {
//     sql_str = "SELECT TOP 10 kdib_gl_num, kpsy_bnk_ime, REPLACE(SUBSTRING(kdib_gl_rez , 2, 8), '.', '/') , SUBSTRING(kdib_gl_rez , 10, 8), kdib_gl_datum, sum(CASE WHEN kdib_ln_dp='D' THEN kdib_ln_iznos ELSE 0 END) as odliv"; // sum(CASE WHEN kdib_ln_dp='D' THEN kdib_ln_iznos ELSE 0 END) as odliv"; 
//     sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpkdibgl";
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.kpkdibln ON kdib_gl_num = kdib_ln_num";
//    	sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart ON kdib_ln_partner = nksc_partcode";
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.kpsybank ON kdib_gl_banka = kpsy_bnk_code";
// 	sql_str += " WHERE 1=1 AND kpsy_bnk_blag <> 'D' AND YEAR(kdib_gl_datum) =  " + ovagod_h  ;
// 	if (do_mjeseca)
// 	{
// 		sql_str +=" AND month(kdib_gl_datum) <=  " + mjesec_h  ;
// 	}
// 	else 
// 	{
// 		sql_str += " AND month(kdib_gl_datum) =  " + mjesec_h;
// 	}
//     filterPart();
// 	sql_str += " GROUP BY kdib_gl_num, kpsy_bnk_ime, REPLACE(SUBSTRING(kdib_gl_rez , 2, 8), '.', '/'), SUBSTRING(kdib_gl_rez , 10, 8), kdib_gl_datum" ;
// 	sql_str += " ORDER BY CONVERT(date, REPLACE(SUBSTRING(kdib_gl_rez , 2, 8), '.', '/'), 3) DESC, SUBSTRING(kdib_gl_rez , 10, 8) DESC" ;
	
//     //SaveFile(sql_str);
// 	try	{
// 		sqlResult2 = sqlQuery(sql_str);
// 	}catch(exc){
// 		MessageBox(exc);
// 	}



//     for ( i = 1; i < Size(sqlResult2); i++ )
//     {      
//         //nkpr_gl_num = sqlResult2[i][0];  
//         //nkpr_gl_cusnme = sqlResult2[i][1];
//         //datecr = sqlResult2[i][2];
//         //nkpr_gl_timecr = sqlResult2[i][3];
//         //nkpr_gl_total= sqlResult2[i][4];

//         t10Namez_ar[i - 1] =  sqlResult2[i][1]; //naziv banke;
//         t10Iznosz_ar[i - 1] =  sqlResult2[i][5]; //iznos priliva;
//         t10Cntrz_ar[i - 1] =  i;
//         t10Datumz_ar[i - 1] =  sqlResult2[i][2]; //datum spremanja;
//         t10Racunz_ar[i - 1] =  sqlResult2[i][0]; //kdib_gl_num; 
//         t10Timez_ar[i - 1] =  sqlResult2[i][3]; //sat;
//         T10DATUMDOKZ_AR[i - 1] =  sqlResult2[i][4]; //sat;
//     }
// }

// function setTop10InvoicesDataGridOdliv()
// {
// 	sql_str =  "SELECT TOP 10 CASE WHEN kdib_ln_racun > 0 THEN kdib_ln_racun ELSE kdib_ln_uplata END as brdok , CASE WHEN kdib_ln_partner<> '' THEN nksc_partname ELSE kdib_ln_opis END as opis, CONVERT(char(8) ,  kdib_gl_datum , 3) AS datecr , ";
//     sql_str += " ISNULL(ROUND(SUM(CASE WHEN kdib_ln_dp = 'D' THEN kdib_ln_iznos ELSE 0 END),2), 0) as iznos";
//     sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.kpkdibgl";
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.kpkdibln ON kdib_gl_num = kdib_ln_num";
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart ON kdib_ln_partner= nksc_partcode";
//     sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.kpsybank ON kdib_gl_banka = kpsy_bnk_code";
// 	sql_str += " WHERE 1=1 AND kpsy_bnk_blag <> 'D' AND YEAR(kdib_gl_datum) =  " + ovagod_h  ;
// 	if (do_mjeseca)
// 	{
// 		sql_str +=" AND month(kdib_gl_datum) <=  " + mjesec_h  ;
// 	}
// 	else 
// 	{
// 		sql_str += " AND month(kdib_gl_datum) =  " + mjesec_h;
// 	}
//     filterPart();
// 	sql_str += " GROUP BY CASE WHEN kdib_ln_racun > 0 THEN kdib_ln_racun ELSE kdib_ln_uplata END , CASE WHEN kdib_ln_partner<> '' THEN nksc_partname ELSE kdib_ln_opis END,kdib_gl_datum,kdib_ln_dp" ;
// 	sql_str += " ORDER BY iznos DESC"; //CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END DESC";
	
// 	try	{
// 		sqlResult = sqlQuery(sql_str);
// 	}catch(exc){
// 		MessageBox(exc);
// 	}

// 	for ( i = 1; i < Size(sqlResult); i++ )
// 	{    
//         t10NameMj_ar[i - 1] =  sqlResult[i][1]; //nkpr_gl_cusnme;
// 		t10IznosMj_ar[i - 1] =  sqlResult[i][3]; //nkpr_gl_total;
// 		t10CntrMj_ar[i - 1] =  i;
// 		t10DatumMj_ar[i - 1] =  sqlResult[i][2]; //nkpr_gl_invdte;
// 		t10RacunMj_ar[i - 1] =  sqlResult[i][0]; //nkpr_gl_num;
// 	}        
// 	return;
// }


