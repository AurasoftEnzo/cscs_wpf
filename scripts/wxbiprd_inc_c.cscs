function wxbiprdc_onStart()
{
    cursor("wait");
    t10datrac = true;
    
    //setChartByDaysOfMonth();
    
    // cntr2= 0;
    // //setLast10InvoicesDataGrid();
    // Format("T10IZNOSZ_AR", "nofd");
    // Format("T10IZNOSMJ_AR", "nofd");
    // DisplayArray("dgRacuniLast", "close");
    // DisplayArraySetup("dgRacuniLast", counterFld: cntr2, activeElements: Size(sqlResult2) - 1, maxElements: 10);
    // //
	// DisplayArray("dgRacuniMjesec", "close");
	// //DisplayArraySetup("dgRacuniMjesec", counterFld: "cntr3", activeElements: Size(sqlResult) - 1, maxElements: 10);
    // setTop10InvoicesDataGrid();
    // cntr3= 0;
	// DisplayArraySetup("dgRacuniMjesec", counterFld: cntr3, activeElements: Size(sqlResult) - 1, maxElements: 10);

    //setChartByMonthNotSentDone();
    AsyncCall("setChartByMonthNotSent", "setChartByMonthNotSentDone");
}

function setChartByMonthNotSentDone(){
    AsyncCall("setChartByDaysOfMonthNotSent", "setChartByDaysOfMonthNotSentDone");
}
function setChartByDaysOfMonthNotSentDone(){
    AsyncCall("setNotSentProductsDataGrid", "setNotSentProductsDataGridDone");
}
function setNotSentProductsDataGridDone(){
    AsyncCall("setNotSentCustomersDataGrid", "end");
}
function end(){
    cursor("dflt");
}
function buty@clicked()
{
    //Chart("ChartPoMjesecima", "init");
    refresh();
    DisplayArray("dgRacuniMjesec", "close");
    Chart("ChartPoMjesecima", "Color.Series", { "Blue", "Green"}); 
	DisplayArraySetup("dgRacuniMjesec", counterFld: cntr3, activeElements: Size(sqlResult) - 1, maxElements: 10);
}    
/*
function setLast10InvoicesDataGrid()
{
    MessageBox('LLLL');    
  	t10Iznosz_ar ={};
    MessageBox('mm00');    
	t10Namez_ar = {};
    MessageBox('mm11');    
	t10Cntrz_ar ={};
    MessageBox('mm22');    
	t10Datumz_ar={};
    MessageBox('mm33');    
	t10Timez_ar ={};
    MessageBox('mm44');    
	t10Racunz_ar ={};
        MessageBox('mm55');    

	if (t10datrac)
	{
		//za sada ne koristimo ovo!
    MessageBox('mmmm');    
		sql_str =  "SELECT TOP 10 nkpr_gl_sonum , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_orddte , 3) AS datecr , convert(char(8) , nkpr_gl_timecr , 20) as nkpr_gl_timecr ,  ";
		sql_str += " CAST( CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2))  AS nkpr_gl_total " ;
    MessageBox('nnnn');    
	}
	else 
	{
           MessageBox('nn11');    
 
		sql_str =  "SELECT TOP 100 nkpr_gl_sonum , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_datecr , 3) AS datecr , convert(char(8) , nkpr_gl_timecr , 20) as nkpr_gl_timecr ,  ";
		sql_str += " CAST( CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2))  AS nkpr_gl_total " ;
	}
	sql_str +=  " FROM " + trenutnaGodinaBaza + ".dbo.nkprglnr" ;
	sql_str +=  " WHERE YEAR(nkpr_gl_orddte) =  " + ovagod_h  ;
	if ( do_mjeseca)
	{
		sql_str +=  " AND month(nkpr_gl_orddte)<=  " + mjesec_h  ;
	}
	else 
	{
		sql_str += " AND month(nkpr_gl_orddte) =  " + mjesec_h;
		}
        MessageBox('oooo');    
    
	if (t10datrac == false)
		{
		sql_str += " ORDER BY nkpr_gl_orddte DESC , nkpr_gl_timecr DESC" ;
	}
	else 
	{
		sql_str += " ORDER BY nkpr_gl_datecr DESC , nkpr_gl_timecr DESC" ;
	}
    MessageBox("tttt: "+sql_str);
         SaveFile(sql_str);

	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}
    for ( i = 1; i < Size(sqlResult); i++ )
    {      

        //nkpr_gl_sonum = sqlResult[i][0];  
        t10Namez_ar[i - 1] = sqlResult[i][1];  
        t10Iznosz_ar[i - 1] =  sqlResult[i][4];
        t10Cntrz_ar[i - 1] =  i;
        t10Datumz_ar[i - 1] =  sqlResult[i][2];
        t10Racunz_ar[i - 1] =  sqlResult[i][0]; 
        t10Timez_ar[i - 1] =  sqlResult[i][3];
    }
}
*/
/*
function setTop10InvoicesDataGrid()
{
	t10NameMj_ar={}; // type a size 30 array 10;
	t10CntrMj_ar={}; // type i size 2 array 10;
	t10DatumMj_ar={}; // type d size 8 array 10;
	t10RacunMj_ar={}; // type r size 8 array 10;
    //t10IznosMj_ar={}; 
	sql_str =  "SELECT TOP 10 nkpr_gl_sonum , nkpr_gl_cusnme , CONVERT(char(8) ,  nkpr_gl_orddte , 3) AS datecr , " ;
	//sql_str += " CAST(CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END as decimal (10,2)) AS nkpr_gl_total ";
	sql_str += " CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END AS nkpr_gl_total ";
	sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglnr" ;
	if ( regija != "" )
	{
		sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart g ON nkpr_gl_cuscod =  g.nksc_partcode" ;
	}
	sql_str += " WHERE 1 = 1" ;
	if ( mjesec_h != "" )
		{
		if (do_mjeseca)
		{
			sql_str += " AND month(nkpr_gl_orddte)<=  " + mjesec_h ;
			sql_str += " AND YEAR(nkpr_gl_orddte) =  " + ovagod_h ;
		}
		else 
		{
			sql_str += " AND month(nkpr_gl_orddte) =  " + mjesec_h ;
			sql_str += " AND YEAR(nkpr_gl_orddte) =  " + ovagod_h ;
			}
	}
	if ( regija != "" )
	{
		sql_str += " AND g.nksc_regija =  '" + regija + "'";
	}
	sql_str += " ORDER BY CASE WHEN nkpr_gl_dviza =  'D' THEN nkpr_gl_tecaj * nkpr_gl_total ELSE nkpr_gl_total END DESC";
	
	try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	for ( i = 1; i < Size(sqlResult); i++ )
	{      
		nkpr_gl_sonum = sqlResult[i][0];  
		nkpr_gl_cusnme = sqlResult[i][1];
		nkpr_gl_orddte = sqlResult[i][2];
		nkpr_gl_total= sqlResult[i][3];
		t10NameMj_ar[i - 1] =  nkpr_gl_cusnme;
		t10IznosMj_ar[i - 1] =  nkpr_gl_total;
		t10CntrMj_ar[i - 1] =  i;
		t10DatumMj_ar[i - 1] =  nkpr_gl_orddte;
		t10RacunMj_ar[i - 1] =  nkpr_gl_sonum;
	}        

}
*/
function setChartByDaysOfMonthNotSent(){
    //samo trenutna godina
    sql_str = "WITH rezultati AS(";
    sql_str += " SELECT glnr.nkpr_gl_sonum, glnr.nkpr_gl_orddte as datum,";
    if (neto_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_amt ELSE lnnr.nkpr_ln_amt END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_amt ELSE lnot.nkpr_ln_amt END), 0), 2)";
    }
    elif (razlikaUCijeniField)
    {
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz ELSE lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz ELSE lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz END), 0), 2)";
    }
    elif (tezina_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_tezinan), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_tezinan), 0), 2)";
    }
    elif (mx3_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx3), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_metx3), 0), 2)";
    }
    elif (mx2_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx2), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_metx2), 0), 2)";
    }
    elif (met_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_met), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_met), 0), 2)";
    }
    elif (kom_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN lnnr.nkpr_ln_jedmj = 'KOM' THEN lnnr.nkpr_ln_pqty ELSE lnnr.nkpr_ln_kom END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN lnot.nkpr_ln_jedmj = 'KOM' THEN lnot.nkpr_ln_pqty ELSE lnot.nkpr_ln_kom END), 0), 2)";
    }
    else
    {
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_pext ELSE lnnr.nkpr_ln_pext END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_pext ELSE lnot.nkpr_ln_pext END), 0), 2)";
    }

    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglot glot"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnot lnot ON glot.nkpr_gl_brotp = lnot.nkpr_ln_invnm"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti arti ON lnot.nkpr_ln_pcode = arti.arti_artikl"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart part ON glot.nkpr_gl_cuscod = part.nksc_partcode";

    sql_str += " WHERE 1 = 1";
    sql_str += " AND lnot.nkpr_ln_ma_us IN ('R','G','S')";
    //sql_str += " AND lnot.nkpr_ln_amt > 0";

    sql_str += " AND glot.nkpr_gl_sonum = glnr.nkpr_gl_sonum";
    sql_str += " AND lnot.nkpr_ln_pcode IN (SELECT DISTINCT y.nkpr_ln_pcode FROM " + trenutnaGodinaBaza + ".dbo.nkprlnnr y WHERE y.nkpr_ln_invnm = glot.nkpr_gl_sonum)";
    
    filterPartNeisporucenoOtpremnice();

    sql_str += " GROUP BY glot.nkpr_gl_sonum";
    sql_str += " ORDER BY glot.nkpr_gl_sonum";
    
    sql_str += " ), 0) as kolOtpremljeno";
    
    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglnr glnr"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnnr lnnr on glnr.nkpr_gl_sonum = lnnr.nkpr_ln_invnm"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti arti ON lnnr.nkpr_ln_pcode = arti.arti_artikl"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart part ON glnr.nkpr_gl_cuscod = part.nksc_partcode";

    sql_str += " WHERE 1 = 1";
    sql_str += " AND lnnr.nkpr_ln_ma_us IN ('R','G','S')";
    //sql_str += " AND lnnr.nkpr_ln_amt > 0";

    equalSign = (do_mjeseca ? "<=" : "=");
    sql_str += " AND MONTH(glnr.nkpr_gl_orddte) " + equalSign + " " + mjesec_h;
    sql_str += " AND YEAR(glnr.nkpr_gl_orddte) = " + ovagod_h;

    filterPartNeisporucenoNarudzbe();

    sql_str += " GROUP BY glnr.nkpr_gl_sonum, glnr.nkpr_gl_orddte";

    sql_str += " ),";

    sql_str += " rezultati2 AS(";
    sql_str += " SELECT DAY(datum) as dan,";
    sql_str += " SUM(kolNaruceno) as sumKolNaruceno,";
    sql_str += " SUM(kolOtpremljeno) as sumKolOtpremljeno";
    sql_str += " FROM rezultati";
    sql_str += " WHERE kolOtpremljeno - kolNaruceno <> 0";
    sql_str += " GROUP BY DAY(datum)";

    sql_str += " ),";

    sql_str += " rezultati3 AS(";
    sql_str += " SELECT Wk_Day, ISNULL(sumKolOtpremljeno - sumKolNaruceno, 0) as diff";
    sql_str += " FROM (SELECT DISTINCT Wk_Day FROM " + CommonDBGet() + ".dbo.Kalendar) x";
    sql_str += " LEFT JOIN rezultati2 ON Wk_Day = dan";
    sql_str += " )";
    
    sql_str += " SELECT * FROM rezultati3";
    sql_str += " ORDER BY Wk_Day";

    try
    {
        //SaveFile(sql_str);
        queryResult = sqlquery(SQL_str);
    }
    catch(exc)
    {
        MessageBox(exc);
    }
    
    RunOnMain("setChartByDaysOfMonthNotSent1");    
}

function setChartByDaysOfMonthNotSent1(){
    for(i = 1; i < queryResult.length; i++)
    {
        arrayPoDanimaNotSent[i - 1] = -1 * queryResult[i][1];
    }

    Chart("ChartPoDanimaNotSent", "init");
    //Chart("ChartPoDanimaNotSent", "seriesType", "lineSeries");
    Chart("ChartPoDanimaNotSent", "title", "Po Danima");
    //Chart("ChartPoDanimaNotSent", "labels","y", 12);
    Chart("ChartPoDanimaNotSent", "labels","x", 12,  {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"});
    //Chart("ChartPoDanimaNotSent", "labels", arrayDani);
    //Chart("ChartPoDanimaNotSent", "xlabelsRotation", 0);
    Chart("ChartPoDanimaNotSent", "SeparatorStep", 1);
    Chart("ChartPoDanimaNotSent", "values", "line", arrayPoDanimaNotSent, "neisporučeno");
    //Chart("ChartPoDanimaNotSent", "values", "line", arrayAvr, "Prosjek7dana");
    Chart("ChartPoDanimaNotSent", "Color.Series", { "#EA6A47"/*, "#0091D5"*/}); 
    
    Chart("ChartPoDanimaNotSent", "Margins", {60, 10, 20, 0});
}

//--------------------------------------------------------

function setChartByMonthNotSent()
{
    if (proslaGodinaBaza == ""){
        RunOnMain("setChartByMonthNotSent0");
    }
    else{
        sql_str = "WITH rezultati AS(";
        sql_str += " SELECT glnr.nkpr_gl_sonum, glnr.nkpr_gl_orddte as datum,";
        if (neto_dn)
        {
            sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_amt ELSE lnnr.nkpr_ln_amt END), 0), 2) as kolNaruceno,";
            sql_str += " ISNULL((SELECT TOP 1";
            sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_amt ELSE lnot.nkpr_ln_amt END), 0), 2)";
        }
        elif (razlikaUCijeniField)
        {
            sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz ELSE lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz END), 0), 2) as kolNaruceno,";
            sql_str += " ISNULL((SELECT TOP 1";
            sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz ELSE lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz END), 0), 2)";
        }
        elif (tezina_dn)
        {
            sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_tezinan), 0), 2) as kolNaruceno,";
            sql_str += " ISNULL((SELECT TOP 1";
            sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_tezinan), 0), 2)";
        }
        elif (mx3_dn)
        {
            sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx3), 0), 2) as kolNaruceno,";
            sql_str += " ISNULL((SELECT TOP 1";
            sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_metx3), 0), 2)";
        }
        elif (mx2_dn)
        {
            sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx2), 0), 2) as kolNaruceno,";
            sql_str += " ISNULL((SELECT TOP 1";
            sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_metx2), 0), 2)";
        }
        elif (met_dn)
        {
            sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_met), 0), 2) as kolNaruceno,";
            sql_str += " ISNULL((SELECT TOP 1";
            sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_met), 0), 2)";
        }
        elif (kom_dn)
        {
            sql_str += " ROUND(ISNULL(SUM(CASE WHEN lnnr.nkpr_ln_jedmj = 'KOM' THEN lnnr.nkpr_ln_pqty ELSE lnnr.nkpr_ln_kom END), 0), 2) as kolNaruceno,";
            sql_str += " ISNULL((SELECT TOP 1";
            sql_str += " ROUND(ISNULL(SUM(CASE WHEN lnot.nkpr_ln_jedmj = 'KOM' THEN lnot.nkpr_ln_pqty ELSE lnot.nkpr_ln_kom END), 0), 2)";
        }
        else
        {
            sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_pext ELSE lnnr.nkpr_ln_pext END), 0), 2) as kolNaruceno,";
            sql_str += " ISNULL((SELECT TOP 1";
            sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_pext ELSE lnot.nkpr_ln_pext END), 0), 2)";
        }

        sql_str += " FROM " + proslaGodinaBaza + ".dbo.nkprglot glot"; 
        sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkprlnot lnot ON glot.nkpr_gl_brotp = lnot.nkpr_ln_invnm"; 
        sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkmkarti arti ON lnot.nkpr_ln_pcode = arti.arti_artikl"; 
        sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart part ON glot.nkpr_gl_cuscod = part.nksc_partcode";

        sql_str += " WHERE 1 = 1";
        sql_str += " AND lnot.nkpr_ln_ma_us IN ('R','G','S')";
        //sql_str += " AND lnot.nkpr_ln_amt > 0";

        sql_str += " AND glot.nkpr_gl_sonum = glnr.nkpr_gl_sonum";
        sql_str += " AND lnot.nkpr_ln_pcode IN (SELECT DISTINCT y.nkpr_ln_pcode FROM " + proslaGodinaBaza + ".dbo.nkprlnnr y WHERE y.nkpr_ln_invnm = glot.nkpr_gl_sonum)";
        
        filterPartNeisporucenoOtpremnice();

        sql_str += " GROUP BY glot.nkpr_gl_sonum";
        sql_str += " ORDER BY glot.nkpr_gl_sonum";
        
        sql_str += " ), 0) as kolOtpremljeno";
        
        sql_str += " FROM " + proslaGodinaBaza + ".dbo.nkprglnr glnr"; 
        sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkprlnnr lnnr on glnr.nkpr_gl_sonum = lnnr.nkpr_ln_invnm"; 
        sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkmkarti arti ON lnnr.nkpr_ln_pcode = arti.arti_artikl"; 
        sql_str += " LEFT JOIN " + proslaGodinaBaza + ".dbo.nkscpart part ON glnr.nkpr_gl_cuscod = part.nksc_partcode";

        sql_str += " WHERE 1 = 1";
        sql_str += " AND lnnr.nkpr_ln_ma_us IN ('R','G','S')";
        //sql_str += " AND lnnr.nkpr_ln_amt > 0";

        equalSign = (do_mjeseca ? "<=" : "=");
        sql_str += " AND MONTH(glnr.nkpr_gl_orddte) " + equalSign + " " + mjesec_h;
        sql_str += " AND YEAR(glnr.nkpr_gl_orddte) = " + ovagod_h;

        filterPartNeisporucenoNarudzbe();

        sql_str += " GROUP BY glnr.nkpr_gl_sonum, glnr.nkpr_gl_orddte";

        sql_str += " ),";

        sql_str += " rezultati2 AS(";
        sql_str += " SELECT MONTH(datum) as mjesec,";
        sql_str += " SUM(kolNaruceno) as sumKolNaruceno,";
        sql_str += " SUM(kolOtpremljeno) as sumKolOtpremljeno";
        sql_str += " FROM rezultati";
        sql_str += " WHERE kolOtpremljeno - kolNaruceno <> 0";
        sql_str += " GROUP BY MONTH(datum)";

        sql_str += " ),";

        sql_str += " rezultati3 AS(";
        sql_str += " SELECT Wk_Month, ISNULL(sumKolOtpremljeno - sumKolNaruceno, 0) as diff";
        sql_str += " FROM (SELECT DISTINCT Wk_Month FROM " + CommonDBGet() + ".dbo.Kalendar) x";
        sql_str += " LEFT JOIN rezultati2 ON Wk_Month = mjesec";
        sql_str += " )";
        
        sql_str += " SELECT * FROM rezultati3";
        sql_str += " ORDER BY Wk_Month";

        try
        {
            //SaveFile(sql_str);
            queryResult = sqlquery(SQL_str);
        }
        catch(exc)
        {
            MessageBox(exc);
        }
        
        RunOnMain("setChartByMonthNotSentProsla");
    }

    //sada trenutna godina
    sql_str = "WITH rezultati AS(";
    sql_str += " SELECT glnr.nkpr_gl_sonum, glnr.nkpr_gl_orddte as datum,";
    if (neto_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_amt ELSE lnnr.nkpr_ln_amt END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_amt ELSE lnot.nkpr_ln_amt END), 0), 2)";
    }
    elif (razlikaUCijeniField)
    {
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz ELSE lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz ELSE lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz END), 0), 2)";
    }
    elif (tezina_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_tezinan), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_tezinan), 0), 2)";
    }
    elif (mx3_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx3), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_metx3), 0), 2)";
    }
    elif (mx2_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx2), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_metx2), 0), 2)";
    }
    elif (met_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_met), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(lnot.nkpr_ln_met), 0), 2)";
    }
    elif (kom_dn)
    {
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN lnnr.nkpr_ln_jedmj = 'KOM' THEN lnnr.nkpr_ln_pqty ELSE lnnr.nkpr_ln_kom END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN lnot.nkpr_ln_jedmj = 'KOM' THEN lnot.nkpr_ln_pqty ELSE lnot.nkpr_ln_kom END), 0), 2)";
    }
    else
    {
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_pext ELSE lnnr.nkpr_ln_pext END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((SELECT TOP 1";
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_pext ELSE lnot.nkpr_ln_pext END), 0), 2)";
    }

    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglot glot"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnot lnot ON glot.nkpr_gl_brotp = lnot.nkpr_ln_invnm"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti arti ON lnot.nkpr_ln_pcode = arti.arti_artikl"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart part ON glot.nkpr_gl_cuscod = part.nksc_partcode";

    sql_str += " WHERE 1 = 1";
    sql_str += " AND lnot.nkpr_ln_ma_us IN ('R','G','S')";
    //sql_str += " AND lnot.nkpr_ln_amt > 0";

    sql_str += " AND glot.nkpr_gl_sonum = glnr.nkpr_gl_sonum";
    sql_str += " AND lnot.nkpr_ln_pcode IN (SELECT DISTINCT y.nkpr_ln_pcode FROM " + trenutnaGodinaBaza + ".dbo.nkprlnnr y WHERE y.nkpr_ln_invnm = glot.nkpr_gl_sonum)";
    
    filterPartNeisporucenoOtpremnice();

    sql_str += " GROUP BY glot.nkpr_gl_sonum";
    sql_str += " ORDER BY glot.nkpr_gl_sonum";
    
    sql_str += " ), 0) as kolOtpremljeno";
    
    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglnr glnr"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnnr lnnr on glnr.nkpr_gl_sonum = lnnr.nkpr_ln_invnm"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti arti ON lnnr.nkpr_ln_pcode = arti.arti_artikl"; 
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart part ON glnr.nkpr_gl_cuscod = part.nksc_partcode";

    sql_str += " WHERE 1 = 1";
    sql_str += " AND lnnr.nkpr_ln_ma_us IN ('R','G','S')";
    //sql_str += " AND lnnr.nkpr_ln_amt > 0";

    equalSign = (do_mjeseca ? "<=" : "=");
    sql_str += " AND MONTH(glnr.nkpr_gl_orddte) " + equalSign + " " + mjesec_h;
    sql_str += " AND YEAR(glnr.nkpr_gl_orddte) = " + ovagod_h;

    filterPartNeisporucenoNarudzbe();

    sql_str += " GROUP BY glnr.nkpr_gl_sonum, glnr.nkpr_gl_orddte";

    sql_str += " ),";

    sql_str += " rezultati2 AS(";
    sql_str += " SELECT MONTH(datum) as mjesec,";
    sql_str += " SUM(kolNaruceno) as sumKolNaruceno,";
    sql_str += " SUM(kolOtpremljeno) as sumKolOtpremljeno";
    sql_str += " FROM rezultati";
    sql_str += " WHERE kolOtpremljeno - kolNaruceno <> 0";
    sql_str += " GROUP BY MONTH(datum)";

    sql_str += " ),";

    sql_str += " rezultati3 AS(";
    sql_str += " SELECT Wk_Month, ISNULL(sumKolOtpremljeno - sumKolNaruceno, 0) as diff";
    sql_str += " FROM (SELECT DISTINCT Wk_Month FROM " + CommonDBGet() + ".dbo.Kalendar) x";
    sql_str += " LEFT JOIN rezultati2 ON Wk_Month = mjesec";
    sql_str += " )";
    
    sql_str += " SELECT * FROM rezultati3";
    sql_str += " ORDER BY Wk_Month";

    try
    {
        //SaveFile(sql_str);
        queryResult = sqlquery(SQL_str);
    }
    catch(exc)
    {
        MessageBox(exc);
    }

    RunOnMain("setChartByMonthNotSentTrenutna");

    RunOnMain("setChartByMonthNotSentSetupChart");
}

function setChartByMonthNotSent0(){
    for(i = 0; i < 12; i++)
    {
        arrayNotSent[i] = 0;
    }
}

function setChartByMonthNotSentProsla(){
    for(i = 0; i < 12; i++)
    {
        arrayNotSent[i] = -1 * queryResult[i + 1][1]; 
    }
}

function setChartByMonthNotSentTrenutna(){
    for(i = 12; i < 24; i++)
    {
        arrayNotSent[i] = -1 * queryResult[i + 1 - 12][1]; 
    }
}

function setChartByMonthNotSentSetupChart(){
    Chart("ChartPoMjesecimaNotSent", "init");
    //Chart("ChartPoMjesecimaNotSent", "seriesType", "Columnseries");
    //Chart("ChartPoMjesecimaNotSent", "title", "Naslov grafa", 20);
    // Chart("ChartPoMjesecimaNotSent", "labels", "y", 13);
    // Chart("ChartPoMjesecimaNotSent", "labels", "x", 13, {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"});
    // Chart("ChartPoMjesecimaNotSent", "xlabelsRotation", 0);
    Chart("ChartPoMjesecimaNotSent", "values", "bar", arrayNotSent, "neisporučeno"); // !
    //Chart("ChartPoMjesecimaNotSent", "values", "bar", arrayTrenutna, STRING(ovagod_h)); //!
    Chart("ChartPoMjesecimaNotSent", "SeparatorStep", 1);
    //Chart("ChartPoMjesecimaNotSent", "Margins", {50, 20, 0, 30});
    Chart("ChartPoMjesecimaNotSent", "TooltipDecimalPlaces", 0);
    Chart("ChartPoMjesecimaNotSent", "xlabelsrotation", 90);
    Chart("ChartPoMjesecimaNotSent", "Color.Series", { "#0091D5"/*, "#EA6A47"*/}); 
    Chart("ChartPoMjesecimaNotSent", "labels", "x", 13, {"1./" + proslaGodina, "2./" + proslaGodina, "3./" + proslaGodina, "4./" + proslaGodina, "5./" + proslaGodina, "6./" + proslaGodina, "7./" + proslaGodina, "8./" + proslaGodina, "9./" + proslaGodina, "10./" + proslaGodina, "11./" + proslaGodina, "12./" + proslaGodina, "1./" + ovagod_h, "2./" + ovagod_h, "3./" + ovagod_h, "4./" + ovagod_h, "5./" + ovagod_h, "6./" + ovagod_h, "7./" + ovagod_h, "8./" + ovagod_h, "9./" + ovagod_h, "10./" + ovagod_h, "11./" + ovagod_h, "12./" + ovagod_h});

    Chart("ChartPoMjesecimaNotSent", "Margins", {60, 10, 20, 10});
}

//--------------------------------------------------------


function setNotSentProductsDataGrid()
{
    sql_str = "WITH rezultati AS(";
    sql_str += " SELECT nkpr_ln_pcode, arti_naziv,";
    
    if (neto_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_amt ELSE lnnr.nkpr_ln_amt END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_amt ELSE lnot.nkpr_ln_amt END), 0), 2)";
	}
    elif (razlikaUCijeniField)
	{
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * (lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz) ELSE lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * (lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz) ELSE lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz END), 0), 2)";
	}
    elif (tezina_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_tezinan), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(lnot.nkpr_ln_tezinan), 0), 2)";
	}	
    elif (mx3_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx3), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(lnot.nkpr_ln_metx3), 0), 2)";
	}	
    elif (mx2_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx2), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(lnot.nkpr_ln_metx2), 0), 2)";
	}	
    elif (met_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_met), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(lnot.nkpr_ln_met), 0), 2)";
	}	
    elif (kom_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN lnnr.nkpr_ln_jedmj = 'KOM' THEN lnnr.nkpr_ln_pqty ELSE lnnr.nkpr_ln_kom END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(CASE WHEN lnot.nkpr_ln_jedmj = 'KOM' THEN lnot.nkpr_ln_pqty ELSE lnot.nkpr_ln_kom END), 0), 2)";
	}	
    else
	{
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_pext ELSE lnnr.nkpr_ln_pext END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_pext ELSE lnot.nkpr_ln_pext END), 0), 2)";
	}

    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglot glot ";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnot lnot ON glot.nkpr_gl_brotp = lnot.nkpr_ln_invnm";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti arti ON lnot.nkpr_ln_pcode = arti.arti_artikl";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart part ON glot.nkpr_gl_cuscod = part.nksc_partcode";

    sql_str += " WHERE 1 = 1";
    sql_str += " AND lnot.nkpr_ln_ma_us IN ('R','G','S')";
    //sql_str += " AND lnot.nkpr_ln_amt > 0";
    equalSign = (do_mjeseca ? "<=" : "=");
    sql_str += " AND glot.nkpr_gl_sonum IN (SELECT DISTINCT x.nkpr_gl_sonum FROM " + trenutnaGodinaBaza + ".dbo.nkprglnr x WHERE MONTH(x.nkpr_gl_orddte) " + equalSign + " " + mjesec_h + " AND YEAR(x.nkpr_gl_orddte) = " + ovagod_h + ")";
    sql_str += " AND lnot.nkpr_ln_pcode = lnnr.nkpr_ln_pcode";
    sql_str += " AND lnot.nkpr_ln_pcode IN (SELECT DISTINCT y.nkpr_ln_pcode FROM " + trenutnaGodinaBaza + ".dbo.nkprlnnr y WHERE y.nkpr_ln_invnm = glot.nkpr_gl_sonum)";
    
    filterPartNeisporucenoOtpremnice();

    sql_str += " GROUP BY lnot.nkpr_ln_pcode";
    sql_str += " ), 0) as kolOtpremljeno";

    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglnr glnr ";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnnr lnnr ON glnr.nkpr_gl_sonum = lnnr.nkpr_ln_invnm";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti arti ON lnnr.nkpr_ln_pcode = arti.arti_artikl";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart part ON glnr.nkpr_gl_cuscod = part.nksc_partcode";

    sql_str += " WHERE 1 = 1";
    sql_str += " AND lnnr.nkpr_ln_ma_us IN ('R','G','S')";
    //sql_str += " AND lnnr.nkpr_ln_amt > 0";
    sql_str += " AND YEAR(glnr.nkpr_gl_orddte) = " + ovagod_h;
    equalSign = (do_mjeseca ? "<=" : "=");
    sql_str += " AND MONTH(glnr.nkpr_gl_orddte) " + equalSign + " " + mjesec_h;

    filterPartNeisporucenoNarudzbe();

    sql_str += " GROUP BY nkpr_ln_pcode, arti_naziv";
    sql_str += " )";

    sql_str += " SELECT TOP 10 *, Round(kolOtpremljeno - kolNaruceno, 2) as diff";
    sql_str += " FROM rezultati";
    sql_str += " WHERE Round(kolOtpremljeno - kolNaruceno, 2) <> 0";
    sql_str += " ORDER BY ABS(Round(kolOtpremljeno - kolNaruceno, 2)) desc";
    
    try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	//SaveFile(sql_str);
	RunOnMain("fillNotSentProductsArrays");

	RunOnMain("NotSentProductsDataGrid");
}

function fillNotSentProductsArrays(){
	for ( i = 0; i < 10; i++ )
    {        
        Top10NoArt_ar[i] = 0;
        CodeNoArt_ar[i] = "";
        NameNoArt_ar[i] = ""; 
        NarNoArt_ar[i] = 0;
        OtpNoArt_ar[i] = 0;
        DiffNoArt_ar[i] = 0;
        imageArt_ar[i] = "";
    } 
    
    if(Size(sqlResult) > 1)
	{
		for ( i = 1; i < Size(sqlResult); i++ )
		{        
            Top10NoArt_ar[i - 1] = i;
            CodeNoArt_ar[i - 1] = sqlResult[i][0];
            NameNoArt_ar[i - 1] = sqlResult[i][1]; 
            NarNoArt_ar[i - 1] = sqlResult[i][2];
            OtpNoArt_ar[i - 1] = sqlResult[i][3];
            DiffNoArt_ar[i - 1] = sqlResult[i][4];
            if(DiffNoArt_ar[i - 1] > 0){
                imageArt_ar[i - 1] = strtrim(ipath()) + "greenArrow64.png";
            }else{
                imageArt_ar[i - 1] = strtrim(ipath()) + "redArrow64.png";
            }
		} 
	}
}

function NotSentProductsDataGrid(){
	DisplayArray("dgTop10NotSentProducts", "close");
	Format("NarNoArt_ar", "nofd");
	Format("OtpNoArt_ar", "nofd");
	Format("DiffNoArt_ar", "nofd");
	DisplayArraySetup("dgTop10NotSentProducts", counterFld: "cntr5", activeElements: Size(sqlResult) - 1, maxElements: 10);
}

//--------------------------------------------------------

function setNotSentCustomersDataGrid()
{
    sql_str = "WITH rezultati AS(";
    sql_str += " SELECT nkpr_gl_cuscod, nksc_partname, ";
    
    if (neto_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_amt ELSE lnnr.nkpr_ln_amt END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_amt ELSE lnot.nkpr_ln_amt END), 0), 2)";
	}
    elif (razlikaUCijeniField)
	{
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * (lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz) ELSE lnnr.nkpr_ln_amt - lnnr.nkpr_ln_cenan * lnnr.nkpr_ln_qtyz END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * (lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz) ELSE lnot.nkpr_ln_amt - lnot.nkpr_ln_cenan * lnot.nkpr_ln_qtyz END), 0), 2)";
	}
    elif (tezina_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_tezinan), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(lnot.nkpr_ln_tezinan), 0), 2)";
	}	
    elif (mx3_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx3), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(lnot.nkpr_ln_metx3), 0), 2)";
	}	
    elif (mx2_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_metx2), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(lnot.nkpr_ln_metx2), 0), 2)";
	}	
    elif (met_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(lnnr.nkpr_ln_met), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(lnot.nkpr_ln_met), 0), 2)";
	}	
    elif (kom_dn )
	{
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN lnnr.nkpr_ln_jedmj = 'KOM' THEN lnnr.nkpr_ln_pqty ELSE lnnr.nkpr_ln_kom END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(CASE WHEN lnot.nkpr_ln_jedmj = 'KOM' THEN lnot.nkpr_ln_pqty ELSE lnot.nkpr_ln_kom END), 0), 2)";
	}	
    else
	{
        sql_str += " ROUND(ISNULL(SUM(CASE WHEN glnr.nkpr_gl_dviza = 'D' THEN glnr.nkpr_gl_tecaj * lnnr.nkpr_ln_pext ELSE lnnr.nkpr_ln_pext END), 0), 2) as kolNaruceno,";
        sql_str += " ISNULL((";
        sql_str += " SELECT ROUND(ISNULL(SUM(CASE WHEN glot.nkpr_gl_dviza = 'D' THEN glot.nkpr_gl_tecaj * lnot.nkpr_ln_pext ELSE lnot.nkpr_ln_pext END), 0), 2)";
	}

    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglot glot ";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnot lnot ON glot.nkpr_gl_brotp = lnot.nkpr_ln_invnm";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti arti ON lnot.nkpr_ln_pcode = arti.arti_artikl";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart part ON glot.nkpr_gl_cuscod = part.nksc_partcode";

    sql_str += " WHERE 1 = 1";
    sql_str += " AND lnot.nkpr_ln_ma_us IN ('R','G','S')";
    //sql_str += " AND lnot.nkpr_ln_amt > 0";
    equalSign = (do_mjeseca ? "<=" : "=");
    sql_str += " AND glot.nkpr_gl_sonum IN (SELECT DISTINCT x.nkpr_gl_sonum FROM " + trenutnaGodinaBaza + ".dbo.nkprglnr x WHERE MONTH(x.nkpr_gl_orddte) " + equalSign + " " + mjesec_h + " AND YEAR(x.nkpr_gl_orddte) = " + ovagod_h + ")";
    sql_str += " AND glot.nkpr_gl_cuscod = glnr.nkpr_gl_cuscod";
    sql_str += " AND lnot.nkpr_ln_pcode IN (SELECT DISTINCT y.nkpr_ln_pcode FROM " + trenutnaGodinaBaza + ".dbo.nkprlnnr y WHERE y.nkpr_ln_invnm = glot.nkpr_gl_sonum)";
    
    filterPartNeisporucenoOtpremnice();

    sql_str += " GROUP BY glot.nkpr_gl_cuscod";
    sql_str += " ), 0) as kolOtpremljeno";

    sql_str += " FROM " + trenutnaGodinaBaza + ".dbo.nkprglnr glnr ";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkprlnnr lnnr ON glnr.nkpr_gl_sonum = lnnr.nkpr_ln_invnm";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkmkarti arti ON lnnr.nkpr_ln_pcode = arti.arti_artikl";
    sql_str += " LEFT JOIN " + trenutnaGodinaBaza + ".dbo.nkscpart part ON glnr.nkpr_gl_cuscod = part.nksc_partcode";

    sql_str += " WHERE 1 = 1";
    sql_str += " AND lnnr.nkpr_ln_ma_us IN ('R','G','S')";
    //sql_str += " AND lnnr.nkpr_ln_amt > 0";
    sql_str += " AND YEAR(glnr.nkpr_gl_orddte) = " + ovagod_h;
    equalSign = (do_mjeseca ? "<=" : "=");
    sql_str += " AND MONTH(glnr.nkpr_gl_orddte) " + equalSign + " " + mjesec_h;

    filterPartNeisporucenoNarudzbe();

    sql_str += " GROUP BY nkpr_gl_cuscod, nksc_partname";
    sql_str += " )";

    sql_str += " SELECT TOP 10 *, Round(kolOtpremljeno - kolNaruceno, 2) as diff";
    sql_str += " FROM rezultati";
    sql_str += " WHERE Round(kolOtpremljeno - kolNaruceno, 2) <> 0";
    sql_str += " ORDER BY ABS(Round(kolOtpremljeno - kolNaruceno, 2)) desc";

    try	{
		sqlResult = sqlQuery(sql_str);
	}catch(exc){
		MessageBox(exc);
	}

	// SaveFile(sql_str);
	RunOnMain("fillNotSentCustomersArrays");

	RunOnMain("NotSentCustomersDataGrid");
}

function fillNotSentCustomersArrays(){
	for ( i = 0; i < 10; i++ )
    {        
        Top10NoPart_ar[i] = 0;
        CodeNoPart_ar[i] = "";
        NameNoPart_ar[i] = ""; 
        NarNoPart_ar[i] = 0;
        OtpNoPart_ar[i] = 0;
        DiffNoPart_ar[i] = 0;
        imagePart_ar[i] = "";
    } 
    
    if(Size(sqlResult) > 1)
	{
		for ( i = 1; i < Size(sqlResult); i++ )
		{        
            Top10NoPart_ar[i - 1] = i;
            CodeNoPart_ar[i - 1] = sqlResult[i][0];
            NameNoPart_ar[i - 1] = sqlResult[i][1]; 
            NarNoPart_ar[i - 1] = sqlResult[i][2];
            OtpNoPart_ar[i - 1] = sqlResult[i][3];
            DiffNoPart_ar[i - 1] = sqlResult[i][4];
            if(DiffNoPart_ar[i - 1] > 0){
                imagePart_ar[i - 1] = strtrim(ipath()) + "greenArrow64.png";
            }else{
                imagePart_ar[i - 1] = strtrim(ipath()) + "redArrow64.png";
            }
		} 
	}
}

function NotSentCustomersDataGrid(){
	DisplayArray("dgTop10NotSentCustomers", "close");
	Format("NarNoPart_ar", "nofd");
	Format("OtpNoPart_ar", "nofd");
	Format("DiffNoPart_ar", "nofd");
	DisplayArraySetup("dgTop10NotSentCustomers", counterFld: "cntr6", activeElements: Size(sqlResult) - 1, maxElements: 10);
}

//--------------------------------------------------------




